
 Generate Multiple Directories and Files at once
 ===============================================

 (source: https://unix.stackexchange.com/questions/76237/rsync-certain-files-excluding-the-rest-ignoring-svn-directory-recursively)


  #!/bin/bash

  # setup .svn dirs
  mkdir -p dir{1,2}/dir{1,2,3,4}/.svn

  # fake data under .svn
  mkdir -p dir1/dir{1,2,3,4}/.svn/origdir
  mkdir -p dir2/dir{1,2,3,4}/.svn/keepdir

  # files to not sync
  touch dir1/dir{1,2,3,4}/file{1,2}

  # files to sync
  touch dir1/dir{1,2,3,4}/file1.js
  touch dir1/dir{1,2,3,4}/file1.php 



  $ tree -a dir1
  dir1
  |-- dir1
  |   |-- file1
  |   |-- file1.js
  |   |-- file1.php
  |   |-- file2
  |   `-- .svn
  |       `-- origdir
  |-- dir2
  |   |-- file1
  |   |-- file1.js
  |   |-- file1.php
  |   |-- file2
  |   `-- .svn
  |       `-- origdir
  |-- dir3
  |   |-- file1
  |   |-- file1.js
  |   |-- file1.php
  |   |-- file2
  |   `-- .svn
  |       `-- origdir
  `-- dir4
      |-- file1
      |-- file1.js
      |-- file1.php
      |-- file2
      `-- .svn
          `-- origdir





  $ tree -a dir2
  dir2
  |-- dir1
  |   `-- .svn
  |       `-- keepdir
  |-- dir2
  |   `-- .svn
  |       `-- keepdir
  |-- dir3
  |   `-- .svn
  |       `-- keepdir
  `-- dir4
      `-- .svn
          `-- keepdir



Rsync Filtering and Excluding
=============================

  Basic: rsync [options] --exclude 'file.ext'
    (example) rsync -avPuiz --exclude "*.pyc" <src> <dst>


  rsync -avzC --filter='-rs_*/.svn*' --include="*/" --include='*.js' \
       --include='*.php' --exclude="*" --delete dir1/ dir2/



  Running the above rsync command:

  rsync -avzC --filter='-rs_*/.svn*' --include="*/" --include='*.js' \
       --include='*.php' --exclude="*" --delete dir1/ dir2/
  sending incremental file list
  dir1/file1.js
  dir1/file1.php
  dir2/file1.js
  dir2/file1.php
  dir3/file1.js
  dir3/file1.php
  dir4/file1.js
  dir4/file1.php

  sent 480 bytes  received 168 bytes  1296.00 bytes/sec
  total size is 0  speedup is 0.00
  Resulting dir2 afterards:



  $ tree -a dir2
  dir2
  |-- dir1
  |   |-- file1.js
  |   |-- file1.php
  |   `-- .svn
  |       `-- keepdir
  |-- dir2
  |   |-- file1.js
  |   |-- file1.php
  |   `-- .svn
  |       `-- keepdir
  |-- dir3
  |   |-- file1.js
  |   |-- file1.php
  |   `-- .svn
  |       `-- keepdir
  `-- dir4
      |-- file1.js
      |-- file1.php
      `-- .svn
          `-- keepdir




Why does it work?

The key piece to this script is to make use of the filters capability of rsync. Filters allow you to remove files from the matched set at various points in the command. So in our case we're filtering any files that match the pattern */.svn*. The modifiers -rs_ tell the filter that we want to filter on both the source side as well as the target side.

excerpt from the FILTER NOTES section of rsync's man page

An s is used to indicate that the rule applies to the sending side. When a rule affects the sending side, it prevents files from being transferred. The default is for a rule to affect both sides unless  --delete-excluded was specified, in which case default rules become sender-side only. See also the hide (H) and show (S) rules, which are an alternate way to specify sending-side includes/excludes.
An r is used to indicate that the rule applies to the receiving side. When a rule affects the receiving side, it prevents files from being deleted. See the s modifier for more info. See also the protect (P) and risk (R) rules, which are an alternate way to specify receiver-side includes/excludes.
See man rsync for more details.

Tips for figuring this out (hint using --dry-run)

While describing how to do this I thought I'd mention the --dry-run switch to rsync. It' extremely useful in seeing what will happen without having the rsync actually take place.




-------------------------------
Excluding Not checking options
-------------------------------

Most options can be turned off by simply adding the --no- prefix to those options.

Example:

rsync -avz --no-perms(or --no-p) --no-owner --no-group /local-dir/ my-server:/remote-dir/
This will disable syncing permissions, ownership, and groups.

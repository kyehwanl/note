
INSTALL DOCKER CE (Community Edition)
=====================================
 Centos 7
 Ubuntu 16


-----------------------------------------------------
Ubuntu Install
(https://docs.docker.com/engine/install/ubuntu/)
-----------------------------------------------------
(last updated 2024.07.18)
- docker compose installed by plugin
- version 
    Engine - Community  Version: 27.0.3
    containerd:         Version:          1.7.19
    Built:              Sat Jun 29 00:02:33 2024

- Install Commands
  # Add Docker's official GPG key:
  sudo apt-get update
  sudo apt-get install ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc

  # Add the repository to Apt sources:
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update

  # Install latest version
  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin






HOW TO INSTALL DOCKER ON CENTOS 7
==================================
(source: https://blog.naver.com/mit5110/221201206926)


1. install docker-ce 

 # cat /etc/redhat-release
 # systemctl status firewalld
 # systemctl status NetworkManager

 참고로 SELinux는 Enforcing이던 Disable이던 상관 없습니다.
 또한 인터넷이 되지 않는 환경이라면 필요한 패키지를 묶어서 repo를 생성해야 합니다.


2. 
 # yum install wget yum-utils device-mapper-persistent-data lvm2
 # yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

 # ls /etc/yum.repos.d/
 # yum clean all; yum repolist


 repo를 생성하는 패키지인 yum-config-manager를 사용하기 위해 yum-utils 패키지를 설치하고 다음의 명령어를 입력합니다.
      # yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
 진행이 제대로 되었다면 /etc/yum.repos.d/ 경로에 docker-repo 파일이 생성되어 있는 것을 확인할 수 있습니다.



3. yum install docker-ce


4. confirmation of installation
    # rpm -qa | grep docker*
    # systemctl status docker

    # systemctl start docker
    # systemctl enable docker

    # systemctl status docker | grep -ie enabled -ie active
    # docker ps

    # ps -ef | grep docker



5. install 'docker compose' 

  (1) using pip
    docker-ce만 설치해도 docker를 사용하는데 문제는 없습니다. 
    보통 container를 여러대 올려서 사용하는데요, 여러대를 편리하게 관리하기 위해서 docker-compose가 유용한 도구 중 하나입니다.
    pip 방법은 파이썬을 이용하여 pip를 설치한 다음 docker-compose를 설치하는 방법입니다.

     # wget https://bootstrap.pypa.io/get-pip.py
     # python get-pip.py; pip install docker-compose

     # docker-compose version
     # docker-compse --help
 
  (2) download directly
    GitHub 사이트에서 제공하는 docker-compose OS, 버전에 맞는 파일을 확인 후 다운로드 합니다.
         링크: https://github.com/docker/compose/releases
    다운로드 받은 파일을 /usr/local/bin/ 경로에 ‘docker-compose’ 이름으로 복사하고 실행 권한을 부여합니다.

    # ls -al /tmp/docker/ | grep compose
    # mv /tmp/docker/docker-compose-Linux-x86_64 /usr/local/bin/docker-compose
    # chmod +x /usr/local/bin/docker-compose
    # docker-compose version


    ** (cf) Download command with curl: 
        curl -L "https://github.com/docker/compose/releases/download/<version>/docker-compose-$(uname -s)-$(uname -m)" \
             -o /usr/local/bin/docker-compose

        (example) 
            curl -L "https://github.com/docker/compose/releases/download/v2.9.0/docker-compose-linux-x86_64"
                 -o /usr/local/docker-compose


  (3) on Ubuntu, 
    apt install docker-compose


DOCKER INSTALLATION ON UBUNTU 16, 18
====================================
* refer to the following link
https://docs.docker.com/install/linux/docker-ce/ubuntu/

1. remove old version (docker-io)
$ sudo apt-get remove docker docker-engine docker.io containerd runc


2. Update the apt package index:
$ sudo apt-get update


3. Install packages to allow apt to use a repository over HTTPS:
$ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

 *for one-line
	sudo apt-get install apt-transport-https  ca-certificates  curl  gnupg-agent software-properties-common



4.  Add Docker’s official GPG key:
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -


5. Use the following command to set up the stable repository
$ sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"


 *for one-line
	$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"



6. Update the apt package index.
$ sudo apt-get update


7.  Install the latest version of Docker CE and containerd, or go to the next step to install a specific version:
$ sudo apt-get install docker-ce docker-ce-cli containerd.io




DOCKER INSTALLATION ON UBUNTU 20, 22
====================================
(https://cloudcone.com/docs/article/how-to-install-docker-on-ubuntu-22-04-20-04/)

1: Update the system
    The first step is to refresh the repositories. To do so, run the command:

  $ sudo apt update
 

2: Install dependencies
    Some dependencies are needed for the installation to go along seamlessly. Therefore, run the following command to install them:

  $ sudo apt install apt-transport-https curl gnupg-agent ca-certificates software-properties-common -y

 

3: Install Docker on Ubuntu 22.04
    With the requirements installed, the next step is to install Docker. 
    We will install the Docker Community Edition ( Docker  CE ) which is opensource and free to download and use.
    To do so, we will add the GPGK key

  $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

    Once added, add the Docker repository as follows.

    NOTE:
    Since Ubuntu 22.04 is yet to be officially released, add the repository for Ubuntu 20.04 Stable.

  $ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

    With the GPG key and the repository added, run the following command to install Docker and associated packages.

  $ sudo apt install docker-ce docker-ce-cli containerd.io -y

    This installs Docker and all the additional packages, libraries, and dependencies required by Docker and associated packages.

    Once the command runs successfully, consider adding the currently logged-in user to the docker group. 
    This allows you to run docker without invoking sudo.

  $ sudo usermod -aG docker $USER
  $ newgrp docker



4: Confirm that Docker is installed
  To verify that Docker is installed, run the command:

  $ docker version
    From the output, you can see that we have installed Docker 20.10 which is the latest version of Docker 
    at the time of publishing this guide.

    check-docker-version-ubuntu-22.04



5: Manage Docker Service
  By default, Docker autostarts upon installation. To verify this, run the command:

  $ sudo systemctl status docker

    check-running-status-of-docker-on-ubuntu-22.04
    If, for any reason, Docker is not running, simply execute the following command:

  $ sudo systemctl start docker

    To enable Docker to start automatically every time on system startup, run the command:

  $ sudo systemctl enable docker

    To restart Docker  run:

  $ sudo systemctl restart docker
 


6: Test Docker
  To give Docker a test run, we will pull a ‘hello-world’ image from Docker Hub. From the image, 
  a container will be created that displays a ‘Hello world’ message on the terminal along with 
  the steps of what just happened after the command was executed.
  So, we will run the command:

  $ docker run hello-world








INSTALL Docker and Executing the Docker Command Without Sudo
============================================================
(https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04)


1. Install
  (1) sudo apt update
  (2) sudo apt install apt-transport-https ca-certificates curl software-properties-common
  (3) curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  (4) sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

 - Make sure you are about to install from the Docker repo instead of the default Ubuntu repo:

  (5) apt-cache policy docker-ce  

    You’ll see output like this, although the version number for Docker may be different:

    Output of apt-cache policy docker-ce
    docker-ce:
      Installed: (none)
      Candidate: 5:19.03.9~3-0~ubuntu-focal
      Version table:
         5:19.03.9~3-0~ubuntu-focal 500
            500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages

  (6) sudo apt install docker-ce
  (7) sudo systemctl status docker



2. Executing the Docker Command Without Sudo

(1) add your username to the docker group:

    sudo usermod -aG docker ${USER}


(2) To apply the new group membership, log out of the server and back in, or type the following:

    su - ${USER}

   *** OR ***
    newgrp docker 

        -- to get access to group in current shell
        -- Do not need to log out and in again
        -- BUT, newgrp starts a subshell with the group you specified. 
            So that line in your script will not finish until that subshell is done


(3) You will be prompted to enter your user’s password to continue.

   Confirm that your user is now added to the docker group by typing:

    groups

    Output
    sammy sudo docker


  - If you need to add a user to the docker group that you’re not logged in as, 
    declare that username explicitly using:

    sudo usermod -aG docker username
    newgrp docker  (new subshell starts)




3. Working with images

  You can search for images available on Docker Hub by using the docker command with the search subcommand. 
  For example, to search for the Ubuntu image, type:

    docker search ubuntu

    docker pull ubuntu

    docker commit -m "What you did to the image" -a "Author Name" container_id repository/new_image_name



4. Pushing Docker Images to a Docker Repository (Docker Hub)

 -- To push your image, first log into Docker Hub
    docker login -u docker-registry-username

 -- If your Docker registry username is different from the local username you used to create the image
    docker tag sammy/ubuntu-nodejs docker-registry-username/ubuntu-nodejs

 -- you may push your own image using
    docker push docker-registry-username/docker-image-name




5. Private Docker Registry
(https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-18-04)




























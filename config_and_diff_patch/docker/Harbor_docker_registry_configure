

----------------
 install
----------------

1. Easist way on Ubuntu 18 or 20
(https://www.cyberithub.com/how-to-install-harbor-on-ubuntu-20-04-lts-step-by-step/)


    (1) requirements: docker, docker-compose 


    (2) Harbor download from github
        wget https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-offline-installer-v2.4.1.tgz
        tar -xvzf harbor-offline-installer-v2.4.1.tgz
        cd harbor
        cp harbor.yml.tmpl harbor.yml
        nano harbor.yml (or vim)
            -- hostname: harbor.example.com
            -- port: 80 (or 8080 whatever it's available)
            -- harbor_admin_password: Harbor12345
            -- comment-out all HTTPS settings


    (3) install Harbor
        harbor# ./install.sh


    (4) Open UI
        - open webbrower, and go to the hostname that was modified at harbor.yml
        - access with admin, admin_password(Harbor12345)
        - create a new user
        - login a new user 
        - go to project, make a new project or just use 'library' default project


    (5) Pull & Push
        use with the image name
             vmware-063.antd.nist.gov:8080/library/<image>






2. from Official Site
(https://goharbor.io/docs/1.10/install-config/run-installer-script/)

  2.1 Installation with Chart Repository Service
      sudo ./install.sh --with-chartmuseum


  2.2 Installation with Notary, Clair, and Chart Repository Service
      sudo ./install.sh --with-notary --with-clair --with-chartmuseum





3. Configure HTTPS access to Harbor
(https://goharbor.io/docs/2.0.0/install-config/configure-https/)
(https://www.techrepublic.com/article/how-to-install-harbor-on-ubuntu-server-18-04/)


  3.1 Generate a Certificate Authority Certificate (using Self-signed Certificate)

    (1) Generate a CA certificate private key
        openssl genrsa -out ca.key 4096


    (2) Generate the CA certificate

        openssl req -x509 -new -nodes -sha512 -days 3650 \
           -subj "/C=US/ST=Maryland/OU=Personal/CN=10.0.50.59" \
           -key ca.key \
           -out ca.crt
        

  3.2 Generate a Server Certificate

    (1) Generate a private key
        openssl genrsa -out 10.0.50.59.key 4096


    (2) Generate a certificate signing request (CSR)

        openssl req -sha512 -new \
            -subj "/C=US/CN=10.0.50.59" \
            -key 10.0.50.59.key \
            -out 10.0.50.59.csr


    (3) Generate an x509 v3 extension file

        cat > extfile.cnf <<-EOF
        subjectAltName = IP:10.0.50.59
        EOF


    (4) Use the v3.ext file to generate a certificate for your Harbor host 

        openssl x509 -req -sha512 -days 3650 \
            -extfile extfile.cnf \
            -CA ca.crt -CAkey ca.key -CAcreateserial \
            -in 10.0.50.59.csr \
            -out 10.0.50.59.crt

 

  3.3 Provide the Certificates to Harbor and Docker

    (1) Copy the server certificate and key into the certficates folder on your Harbor host

        sudo mkdir -p /data/cert <-- if there is no this directory
        cp 10.0.50.59.crt /data/cert/
        cp 10.0.50.59.key /data/cert/


    (2) Convert yourdomain.com.crt to yourdomain.com.cert, for use by Docker
      (The Docker daemon interprets .crt files as CA certificates and .cert files as client certificates)

        openssl x509 -inform PEM -in 10.0.50.59.crt -out 10.0.50.59.cert


    (3) Copy the server certificate, key and CA files into the Docker certificates folder on the Harbor host
        (You must create the appropriate folders first)

        cp 10.0.50.59.cert /etc/docker/certs.d/10.0.50.59/
        cp 10.0.50.59.key /etc/docker/certs.d/10.0.50.59/
        cp ca.crt /etc/docker/certs.d/10.0.50.59/


    (4) Restart Docker Engine
        systemctl restart docker



  3.4 Deploy or Reconfigure Harbor

    (1) modify 'harbor.yml' 
        -- uncomment 'https' section
        -- set up the cert and key file
    

        < harbor.yml, excerpts >
        ...
        hostname: 10.0.50.59

        # http related config
        http:
          # port for http, default is 80. If https enabled, this port will redirect to https port
          port: 80

        # https related config
        https:
          # https port for harbor, default is 443
          port: 443
          # The path of cert and key files for nginx
          certificate: /etc/docker/certs.d/10.0.50.59/10.0.50.59.cert
          private_key: /etc/docker/certs.d/10.0.50.59/10.0.50.59.key
        ...


    (2) run 'prepare' script for cert and key file and other settings (https enable, etc) in harbor.yml
        sudo ./prepare


    (3) If Harbor is running, stop and remove the existing instance
        sudo docker-compose down -v


    (4) Restart Harbor
        sudo docker-compose up -d



    (5) Verify the HTTPS Connection

        docker login 10.0.50.59 -u admin -p Harbor12345


    (6) command logs

      vmware-059 [2074]{.../project/harbor}$ sudo ./prepare
      prepare base dir is set to /opt/project/harbor
      Clearing the configuration file: /config/portal/nginx.conf
      Clearing the configuration file: /config/log/logrotate.conf
      Clearing the configuration file: /config/log/rsyslog_docker.conf
      Generated configuration file: /config/portal/nginx.conf
      Generated configuration file: /config/log/logrotate.conf
      Generated configuration file: /config/log/rsyslog_docker.conf
      Generated configuration file: /config/nginx/nginx.conf
      Generated configuration file: /config/core/env
      Generated configuration file: /config/core/app.conf
      Generated configuration file: /config/registry/config.yml
      Generated configuration file: /config/registryctl/env
      Generated configuration file: /config/registryctl/config.yml
      Generated configuration file: /config/jobservice/env
      Generated configuration file: /config/jobservice/config.yml
      loaded secret from file: /data/secret/keys/secretkey
      Generated configuration file: /compose_location/docker-compose.yml
      
      vmware-059 [2074]{.../project/harbor}$ sudo docker-compose up -d
      Creating harbor-log ... done
      Creating redis ... done
      Creating harbor-core ... done
      Creating network "harbor_harbor" with the default driver
      Creating nginx ... done
      Creating registry ...
      Creating harbor-db ...
      Creating registryctl ...
      Creating redis ...
      Creating harbor-portal ...
      Creating harbor-core ...
      Creating harbor-jobservice ...
      Creating nginx ...


      vmware-059 [2076]{.../project/harbor}$ docker login 10.0.50.59 -u admin -p Harbor12345
      WARNING! Using --password via the CLI is insecure. Use --password-stdin.
      WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
      Configure a credential helper to remove this warning. See
      https://docs.docker.com/engine/reference/commandline/login/#credentials-store

      Login Succeeded




    (7) From another client (here, idac-server02)

      -- copy to /etc/docker/certs.d/10.0.50.59/ in idac-server02 host
        scp 10.0.50.59.cert idac-server02:/etc/docker/certs.d/10.0.50.59/
        scp 10.0.50.59.key idac-server02:/etc/docker/certs.d/10.0.50.59/
        scp ca.crt idac-server02:/etc/docker/certs.d/10.0.50.59/



        [root@idac-server02 certs.d]# docker login 10.0.50.59 -u admin -p Harbor12345   

        WARNING! Using --password via the CLI is insecure. Use --password-stdin.        
        WARNING! Your password will be stored unencrypted in /root/.docker/config.json. 
        Configure a credential helper to remove this warning. See                       
        https://docs.docker.com/engine/reference/commandline/login/#credentials-store   
                                                                                        
        Login Succeeded 




    (8) push, pull and check list 

      -- cat > dockerfile <<-EOF
         FROM busybox
         EOF
      -- docker build -t 10.0.50.59/library/busybox-test2 .


      -- push image (from vmware-059)

        vmware-059 [2087]{/tmp}$ docker push 10.0.50.59/library/busybox-test2
        Using default tag: latest
        The push refers to repository [10.0.50.59/library/busybox-test2]
        084326605ab6: Pushed
        latest: digest: sha256:98de1ad411c6d08e50f26f392f3bc6cd65f686469b7c22a85c7b5fb1b820c154 size: 527
        

      -- check list (in idac-server02)

        curl -X GET -u admin:Harbor12345 -k  https://10.0.50.59/v2/_catalog/library

        [root@idac-server02 certs.d]# curl -X GET -u admin:Harbor12345 -k  https://10.0.50.59/v2/_catalog/
        {"repositories":["library/busybox-test2"]}


      -- pull image (in idac-server02)

        [root@idac-server02 ]# docker pull 10.0.50.59/library/busybox-test2      
        Using default tag: latest                                                       
        latest: Pulling from library/busybox-test2                                      
        50783e0dfb64: Pull complete                                                     
        Digest: sha256:98de1ad411c6d08e50f26f392f3bc6cd65f686469b7c22a85c7b5fb1b820c154 
        Status: Downloaded newer image for 10.0.50.59/library/busybox-test2:latest      
        10.0.50.59/library/busybox-test2:latest                                         


        [root@idac-server02 ]# docker images | grep busy                           
        10.0.50.59/library/busybox-test2   latest    7a80323521cc   3 weeks ago     1.24MB





  ( Unsolved Issue)
    -- still don't know why domain address(vmware-059.antd.nist.gov) is not working with cert
    -- Errors regarding SAN (subject Alt Name)

        Error response from daemon: Get "https://vmware-059.antd.nist.gov/v2/": x509: certificate relies on 
        legacy Common Name field, use SANs instead





---------------------
 Docker Client setup
---------------------
(https://goharbor.io/docs/1.10/install-config/run-installer-script/#connect-http)

1. Connecting to Harbor via HTTP

    IMPORTANT: If your installation of Harbor uses HTTP rather than HTTPS, 
                you must add the option --insecure-registry to your client’s Docker daemon. 
                By default, the daemon file is located at /etc/docker/daemon.json.

    For example, add the following to your daemon.json file:

      {
      "insecure-registries" : ["myregistrydomain.com:5000", "0.0.0.0"]
      }

    After you update daemon.json, you must restart both Docker Engine and Harbor.

    (1) Restart Docker Engine.

        systemctl restart docker


    (2) Stop Harbor.

        docker-compose down -v


    (3)Restart Harbor.

        docker-compose up -d


  (*) in my case, not necessary to restart Harbor at all




2. some errors

  vmware-005 $ docker login vmware-063.antd.nist.gov:8080
  Username: kyehwanl
  Password:
  Error response from daemon: Get "https://vmware-063.antd.nist.gov:8080/v2/": http: server gave HTTP response to HTTPS client


  --> This means Docker client in vmware-005 has a setting for only accepting HTTPS connection,
        So, need to make daemon.json file under /etc/docker/ with 
            { 
            "insecure-registries" : ["vmware-063.antd.nist.gov:8080"] 
            }

        And then, restart docker 

          sudo systemctl daemon-reload ( <-- is it really necessary ?) 
          sudo systemctl restart docker








3. Running logs

  vmware-005 $ docker login vmware-063.antd.nist.gov:8080
  Username: kyehwanl
  Password:
  WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
  Configure a credential helper to remove this warning. See
  https://docs.docker.com/engine/reference/commandline/login/#credentials-store

  Login Succeeded


  vmware-005 [2012]{/etc/docker}$ docker pull vmware-063.antd.nist.gov:8080/library/busybox-test1
  Using default tag: latest
  latest: Pulling from library/busybox-test1
  50783e0dfb64: Pull complete
  Digest: sha256:98de1ad411c6d08e50f26f392f3bc6cd65f686469b7c22a85c7b5fb1b820c154
  Status: Downloaded newer image for vmware-063.antd.nist.gov:8080/library/busybox-test1:latest
  vmware-063.antd.nist.gov:8080/library/busybox-test1:latest


  vmware-005 $ docker images
  REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE
  vmware-063.antd.nist.gov:8080/library/busybox-test1   latest    7a80323521cc   3 weeks ago     1.24MB
  nist/srx-grpc                                         1.2-614   efb4a39b7608   8 months ago    1.68GB
  ...


  vmware-005 $ docker run --rm -it vmware-063.antd.nist.gov:8080/library/busybox-test1 /bin/sh
  / # ls /etc/
  group        hostname     hosts        localtime    mtab         network      passwd       resolv.conf  shadow
  / # exit

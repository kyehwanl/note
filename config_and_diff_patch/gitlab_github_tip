
1. GitLab in ANTD NIST
======================

1.1 configuration
        git config --global http.sslVerify false

1.2 Init or Cloning 
  git init 을 이용해서 새로 생성하거나 기존의 repository를 upload시킨다

      git svn clone -r HEAD https://is1.antd.nist.gov/svn/proj-bgp/bgp-srx/srx-crypto-api/trunk api
      cd api
      [kyehwanl@node6 api]$ git lgodb
      * c88d367 (HEAD, git-svn, master) Some spellers in the documentation

  remote repository 생성
        git remote add origin https://kyehwanl@gitlab.antd.nist.gov:4433/kyehwanl/proj-bgp.git

1.3 Upload (push)
  Upload Using ‘push’ 

      [kyehwanl@node6 capi]$ git push -u origin master
      Password:
      Counting objects: 51, done.
      Delta compression using up to 24 threads.
      Compressing objects: 100% (49/49), done.
      Writing objects: 100% (51/51), 340.17 KiB, done.
      Total 51 (delta 6), reused 0 (delta 0)
      To https://kyehwanl@gitlab.antd.nist.gov:4433/kyehwanl/proj-bgp.git
       * [new branch]         master -> master
      Branch master set up to track remote branch master from origin.

  참고
      [kyehwanl@node6 api]$ git config --local -l
      core.repositoryformatversion=0
      core.filemode=true
      core.bare=false
      core.logallrefupdates=true
      svn-remote.svn.url=https://is1.antd.nist.gov/svn/proj-bgp/bgp-srx/srx-crypto-api/trunk
      svn-remote.svn.fetch=:refs/remotes/git-svn
      remote.origin.url=https://kyehwanl@gitlab.antd.nist.gov:4433/kyehwanl/proj-bgp.git
      remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
      branch.master.remote=origin
      branch.master.merge=refs/heads/master


1.4 gitlab에 기존의 것이 있을경우는 rebase를 한후 push를 이용해서 remote repo(gitlab)에 upload
      [kyehwanl@node6 api]$ git br -a
      * master
        remotes/git-svn
        remotes/origin/master

      [kyehwanl@node6 api]$ git fetch origin → (주의) fetch를 하면 수동으로 merge/rebase를 해줘야됨 ( fetch + merge == pull )
      Password:
      [kyehwanl@node6 api]$ git br -a
      * master
        remotes/git-svn
        remotes/origin/master

      [kyehwanl@node6 api]$ git rebase origin/master
      First, rewinding head to replay your work on top of it...
      Applying: Some spellers in the documentation

      [kyehwanl@node6 api]$ git st
      # On branch master
      nothing to commit (working directory clean)

      [kyehwanl@node6 api]$ git lgodb
      * 6069225 (HEAD, master) Some spellers in the documentation
      * b712ce3 (origin/master) test1

      [kyehwanl@node6 api]$ git push -u origin master
      Password:
      Counting objects: 52, done.
      Delta compression using up to 24 threads.
      Compressing objects: 100% (49/49), done.
      Writing objects: 100% (51/51), 340.26 KiB, done.
      Total 51 (delta 6), reused 0 (delta 0)
      To https://kyehwanl@gitlab.antd.nist.gov:4433/kyehwanl/proj-bgp.git
         b712ce3..6069225  master -> master
      Branch master set up to track remote branch master from origin.

      [kyehwanl@node6 api]$ git br -a
      * master
        remotes/git-svn
        remotes/origin/master



1.5 외부에서 git clone해서 쓸때

        git clone https://kyehwanl@gitlab.antd.nist.gov:4433/kyehwanl/quaggasrx.git



1.6 project를 만들었을때, GitLab에서 제공하는  instruction

  GitLab을 통해 project를 만들었을경우 생성되는 project 주소: 
        git@gitlab.antd.nist.gov:kyehwanl/proj-bgp-qsrx.git 

  Command line instructions
      Git global setup
      git config --global user.name "Kyehwan Lee"
      git config --global user.email "kyehwanl@nist.gov"


  Create a new repository
      git clone git@gitlab.antd.nist.gov:kyehwanl/proj-bgp-qsrx.git
      cd proj-bgp-qsrx
      touch README.md
      git add README.md
      git commit -m "add README"
      git push -u origin master


  Existing folder or Git repository
      cd existing_folder
      git init
      git remote add origin git@gitlab.antd.nist.gov:kyehwanl/proj-bgp-qsrx.git
      git add .
      git commit
      git push -u origin master







2. NIST Github 
==============

2.0 ssh key gen
    $ ssh-keygen -t rsa -b 4096 -C "kyehwan.lee@nist.gov"
    Generating public/private rsa key pair.
    Enter file in which to save the key (/users/kyehwanl/.ssh/id_rsa): /users/kyehwanl/.ssh/id_rsa_github
    Enter passphrase (empty for no passphrase):
    Enter same passphrase again:
    Your identification has been saved in /users/kyehwanl/.ssh/id_rsa_github.
    Your public key has been saved in /users/kyehwanl/.ssh/id_rsa_github.pub.
    The key fingerprint is:
    SHA256:3/jp+fVt3MlP6+3s/1nh13kXZyHeE4C9U4QER8RJOWA kyehwan.lee@nist.gov
    The key's randomart image is:
    +---[RSA 4096]----+
    |           E@B=. |
    |          ...B.. |
    |             .+o |
    |            .oo o|
    |        S    ..=o|
    |         . o  ..B|
    |          o . .+@|
    |           . o *#|
    |           .=.oB#|
    +----[SHA256]-----+


2.1 github ssh key authentication
    $ xclip -sel clip < ~/.ssh/id_rsa.pub  (Copies the contents of the id_rsa.pub file to your clipboard) 

    $ ssh -i ~/.ssh/id_rsa_github -T git@github.com 
    Hi kyehwanlee! You've successfully authenticated, but GitHub does not provide shell access

    * Then, paste in Settings --> SSH and GPG keys in github account page


2.2 push with ssh-key
    (1) change HTTPS with SSH url

    $ git remote add nistgithub git@github.com:usnistgov/gobgpsec.git   
    (OR  git remote set-url nistgithub git@github.com:usnistgov/gobgpsec.git)

    $ git remote -v
    nistgithub      git@github.com:usnistgov/gobgpsec.git (fetch)
    nistgithub      git@github.com:usnistgov/gobgpsec.git (push)


    (2) push with a specific ssh key

    $ ssh-agent bash -c "ssh-add ~/.ssh/id_rsa_github; git push nistgithub master"
    Identity added: /users/kyehwanl/.ssh/id_rsa_github (/users/kyehwanl/.ssh/id_rsa_github)
    Counting objects: 263, done.
    Delta compression using up to 2 threads.
    Compressing objects: 100% (224/224), done.
    Writing objects: 100% (263/263), 1.04 MiB | 0 bytes/s, done.
    Total 263 (delta 30), reused 263 (delta 30)
    remote: Resolving deltas: 100% (30/30), done.
    To git@github.com:usnistgov/gobgpsec.git
     * [new branch]      master -> master


    (3) clone

    $ ssh-agent bash -c "ssh-add  ~/.ssh/id_rsa_github; git clone git@github.com:usnistgov/gobgpsec.git"
    Identity added: /users/kyehwanl/.ssh/id_rsa_github (/users/kyehwanl/.ssh/id_rsa_github)
    Cloning into 'gobgpsec'...
    remote: Enumerating objects: 263, done.
    remote: Counting objects: 100% (263/263), done.
    remote: Compressing objects: 100% (224/224), done.
    remote: Total 263 (delta 30), reused 263 (delta 30), pack-reused 0
    Receiving objects: 100% (263/263), 1.04 MiB | 0 bytes/s, done.
    Resolving deltas: 100% (30/30), done.



3. using Access Token
----------------------
(https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html)

(1) create Access Token for NIST Gitlab
    https://gitlab.nist.gov/gitlab/-/user_settings/personal_access_tokens

        --> access token: glpat-<Hexadecimal codes>

(2) cloning with Access Token,

    git clone https://<username>:<personal_token>@gitlab.com/gitlab-org/gitlab.git

    (example)
    root@ric:~# git clone https://kyehwanl:glpat-RLxcxSYJjz96TxPvRU56@gitlab.nist.gov/gitlab/itrg-students/ansible-testbed-automation.git
    Cloning into 'ansible-testbed-automation'...
    remote: Enumerating objects: 5, done.
    remote: Counting objects: 100% (5/5), done.
    remote: Compressing objects: 100% (4/4), done.
    remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
    Unpacking objects: 100% (5/5), 3.03 KiB | 1.01 MiB/s, done












    















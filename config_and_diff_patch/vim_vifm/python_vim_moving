

python vim efficient moving
===========================


python.vim
----------

Makes it much easier to navigate around python code blocks.
(** where, code block means: a group which has same indentation)

Shortcuts:
  ]t -- Jump to beginning of block
  ]e -- Jump to end of block
  ]v -- Select (Visual Line Mode) block
  ]< -- Shift block to left
  ]> -- Shift block to right
  ]# -- Comment selection
  ]u -- Uncomment selection
  ]c -- Select current/previous class
  ]d -- Select current/previous function
  ]<up> -- Jump to previous line with the same/lower indentation
  ]<down> -- Jump to next line with the same/lower indentation



python_match.vim
----------------

extends %:

  % - cycle through if/elif/else, try/except/catch, for/continue/break
  g% - move opposite of %
  [% - move to the beginning of the current code block
  ]% - move to the end of the current code block

 (** where, current code block means: a same indentation group which is lead 
  by if/else, try/except, for/continue/break clauses. It's subtle different from python.vim's block)

All the above motions work with Normal, Visual, and Operator-pending modes, so:

  d]% - delete until the end of the current block
  v]%d - should do the same, going through Visual mode so that you can see what is being deleted
  V]%d - above, but with line selection





python-mode
-----------

This vim plugin provides motions similar to built-in ones:
2.4 Vim motion ~ 
*pymode-motion* Support Vim motion (See |operator|) for python objects (such as functions, class and methods). 

`C` — means class 
`M` — means method or function *pymode-motion-keys* 

========== ============================ 
Key        Command (modes) 
========== ============================ 
[[         Jump to previous class or function (normal, visual, operator) 
]]         Jump to next class or function (normal, visual, operator) 
[M         Jump to previous class or method (normal, visual, operator)  (** lower case 'm' is ok)
]M         Jump to next class or method (normal, visual, operator)      (** lower case 'm' is ok)
[C         Jump to previous class                                       (** only upper case ‘C’)
]C         Jump to next class                                           (** only upper case ‘C’)
aC         Select a class. Ex: vaC, daC, yaC, caC (normal, operator) 
iC         Select inner class. Ex: viC, diC, yiC, ciC (normal, operator) 
aM         Select a function or method. Ex: vaM, daM, yaM, caM (normal, operator) 
iM         Select inner func. or method. Ex: viM, diM, yiM, ciM (normal, operator) 
========== ============================


Update vim8 runtime files on 2016-09-08

$VIMRUNTIME/ftplugin/python.vim now includes

]]       Jump forward to begin of next toplevel 
[[       Jump backwards to begin of current toplevel (if already there, previous toplevel) 
]m       Jump forward to begin of next method/scope 
[m       Jump backwords to begin of previous method/scope







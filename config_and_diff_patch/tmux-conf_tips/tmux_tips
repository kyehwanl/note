
tmux tips
=========

1.[tmux]  tmux session lost in unknown pts, how to survive ?
------------------------------------------------------------

<문제점> 
  tmux를 오랜동안 동작시키다가 혹은 갑작스런 cut-off로 인해 socket을 잃어버려서 다시 접속하려고 하니 
  아래와 같은 메시지가 나올때

  $ tmux ls
  failed to connect to server: No such file or directory

  이때, 분명 ps aux 를 통해서 확인해 보면 tmux process는 있지만 socket은 ?로 나온다
  $ ps aux | grep tmux
  kyehwanl  2491  0.0  0.2  35464 31424 ?        Ss   Jan23   8:40 tmux

<solution>

  Solution courtesy of the Webfaction-support:
  As the process was still running, the issue was a deleted socket, possibly caused by a purged tmp-directory.
  According to the tmux mapage:
  If the socket is accidentally removed, the SIGUSR1 signal may be sent to the tmux server process to recreate it.
  So sending the signal and attaching works:
    killall -s SIGUSR1 tmux 
    tmux attach



    <case 1> 아래는 전체 script

    [kyehwanl@node4 ~]$ tmux ls
    failed to connect to server: No such file or directory

    [kyehwanl@node4 ~]$ ps aux | grep tmux
    kyehwanl  2491  0.0  0.2  35464 31424 ?        Ss   Jan23   8:40 tmux

    [kyehwanl@node4 ~]$ killall -s SIGUSR1 tmux  (Or kill -s SIGUSR1 <PID> )

    [kyehwanl@node4 ~]$ ps aux | grep tmux
    kyehwanl  2491  0.0  0.2  35464 31432 ?        Ss   Jan23   8:40 tmux

    [kyehwanl@node4 ~]$ tmux a
    Attach 되어 실행됨!!!

    [kyehwanl@node4 api]$ tmux ls
    0: 2 windows (created Tue Jan 23 12:41:50 2018) [134x79] (attached)

    $ ps aux | grep tmu[x]
    kyehwanl  2491  0.0  0.2  35468 31440 ?        Ss   Jan23   8:40 tmux
    kyehwanl 29448  0.0  0.0   5368   856 pts/0    S+   13:59   0:00 tmux a

    -------- Detached후에 상황을 봄----------------
    [detached (from session 0)]
    [kyehwanl@node4 ~]$ tmux ls             
    0: 2 windows (created Tue Jan 23 12:41:50 2018) [134x79]

    [kyehwanl@node4 ~]$ ps aux | grep tmu[x]
    kyehwanl  2491  0.0  0.2  35468 31440 ?        Ss   Jan23   8:40 tmux


    → pid 2491은 여전히 ?로 남아있는걸로 봐선 tmux가 새로이 socket을 할당하고 pid 29448로 session 0을 열었는것이 확인가능



    <case 2>

    Node1에 동작하고 있었던 tmux session이 socket loss로 인해 connection자체가 가능하게 되지 않게 되었을때,
    SIGUSR1을 tmux process에게 보낸후 다시 tmux ls를 해보면
    모든 세션이 제대로 동작하고 있는것이 보인다

    [kyehwanl@node1 ~]$ tmux ls
    failed to connect to server: Connection refused

    [kyehwanl@node1 ~]$ ps aux | grep tmu[x]
    kyehwanl  1956  0.1  0.0  11348  7384 ?        Ss   Jan23  21:22 tmux
    kyehwanl  6607  0.0  0.0   5368   856 pts/0    S+   Jan25   0:00 tmux a

    [kyehwanl@node1 ~]$ killall -s SIGUSR1 tmux

    [kyehwanl@node1 ~]$ ps aux | grep tmu[x]   
    kyehwanl  1956  0.1  0.0  11348  7384 ?        Ss   Jan23  21:22 tmux
    kyehwanl  6607  0.0  0.0   5368   856 pts/0    S+   Jan25   0:00 tmux a

    [kyehwanl@node1 ~]$ tmux ls
    0: 1 windows (created Tue Jan 23 11:55:28 2018) [272x79] (attached)
    1: 1 windows (created Tue Jan 23 12:05:39 2018) [134x79]
 


    < case 3 > tmux 소켓이 다른경우

	(1) tmux ls를 실행했지만 no server
	open5g@open5g-18:/opt/phoenix$ tmux ls
	no server running on /tmp/tmux-1000/default

	(2) 하지만 process에서는 확인가능하다
	open5g@open5g-18:/opt/phoenix$ ps aux | grep tmux
	root       42104  0.4  0.0  12528  8960 ?        Ss   06:24   0:05 tmux -S /opt/phoenix-tmux new-session -d -s ph_netns -n root

	--> -S (socket option) 만들때 tmp/tmux-xxx소켓을 쓰지않고 /opt/phoenix-tmux 를 썼다
		-s (session name) 

	(3) 따러서 -S 로 소켓을 지정하고 ls를 하면 볼수 있다
	open5g@open5g-18:/opt/phoenix$ tmux -S /opt/phoenix-tmux ls
	ph_netns: 17 windows (created Fri Jan 20 06:24:19 2023)

	(4) attach 하기 위한 command
	open5g@open5g-18:/opt/phoenix$ tmux -S /opt/phoenix-tmux a -t ph_netns
		(where, -t : target session)



2. split panes into windows or move a pane to another window
------------------------------------------------------------

  (1) break the pane out via break-pane. This is bound to "<prefix> + !" by default 
        if "Can't break with only one pane", then make another pane and then break
    
    
  (2) :join-pane -t <int> (int: index of the session number you want to move it into)
        optionally, -h or -v  as a horizontal-split or a vertical-split on the target window, respectively

  
  (3) example
    Here's an example. Let's say you're in session 0, window 4 and in session 2 that you want window 3's pane 1. 
    In the tmux prompt (ctrl+b : by default)

    : join-pane -s 2:3.1

    This will move pane 1 from window 3, session 2 (-s is the source window and takes the format session:window.pane) 
    to your current session (session 0).

    Below are the full docs for join-pane, which you can get from the tmux man page. The most confusing part for me 
    reading the docs was figuring out the format that was expected for src-pane specifying session, 
    window and pane numbers (session:window.pane per the example above). You can also name your sessions 
    and windows and use those names instead of the index numbers.


     join-pane [-dhv] [-l size | -p percentage] [-s src-pane] [-t dst-pane]
       (alias: joinp)
       Like split-window, but instead of splitting dst-pane and 
       creating a new pane, split it and move src-pane into the 
       space.  This can be used to reverse break-pane.


  (4) my example
    :join-pane -s 6:1.1 -t 4:0 




3. get and change focus to a certain window or panae 
----------------------------------------------------

  (1) get a number 
    <prefix> q : show pane numbers
    <prefix> w : get current windows list


  (2) change focus to 
    window - <C-B> <number>
    pane - hit the pane number while displaying the pane number by '<preifx>+q'


    *** <change display time> ***
    You can jump directly to a pane by typing pane's index while it is showed by display-panes command (c-b q)
    If the pane number's show too quick for you to select a pane, use the following in your .tmux.conf file to 
    change the amount of time the pane #'s are displayed. 

    set display-panes-time 4000 

    Note that you can hit the esc key to cancel the operation if you want 



4. rename session and window
-----------------------------
    <prefix> $ : rename session
    <prefix> , : rename window





5. select buffer
-----------------
    <prefix> = : list all buffers to paste, then choose a number with cursor or cancel with Ctrl-c



6. status bar
--------------
    # on Command line, <prefix> + ':'
    # enable / disable
    set -g status on | off


    # Status bar color 
    # Set status line message background colour, where colour is one of:
    # black, red, green, yellow, blue, magenta, cyan, white, colour0 to colour255
    # from the 256-colour palette, or default.
    #
    set -g status-bg colour240
    set -g status-fg white

    
    # these below are favorate colors personally
    set -g status-bg colour3 --> yellow
    set -g status-bg colour20 --> dark blue
    set -g status-bg colour53 --> dark purple                                                                                               set -g status-bg colour17 --> dark blue
    set -g status-bg colour97 --> light purple 
    set -g status-bg colour94 --> dark orange
    set -g status-bg colour136 --> dark orange
    set -g status-bg colour240 --> dark gray


    (c.f) colors.sh  -- print all 8 bit colors

	  #!/usr/bin/env bash
	  for i in {0..255} ; do
		  printf "\x1b[38;5;${i}mcolour${i}\n"
	  done





7. Rotate and Swap the panes
----------------------------
    # Rotate
    <prefix> + Ctrl-o  : clock-wise rotating
    <prefix> + Alt or Esc -o : couter-clock wise rotating


    # Swap
    # rotate doesn't change the panes' order itself, it is just to rotate panes
    # if panes are needed to be inserted at some position, use swap 
    # 
    <prefix> + {    :  1 step up the current pane, in other words, swap the current with the previous pane
    <prefix> + }    :  1 step down the current pane 
    
    (where, 'previous' means, the pane numbers shown in the command '<prefix>+q' is previous number of the current)
    


8. Resize Pane
---------------
    (1) in command line
        ": resize-pane -U 50" -- upward 50 increase
        ": resize-pane -D 20" -- downward 20 increase




9. Key Bindings for moving windows and panes
--------------------------------------------
    (1) show current key bindings : <prefix> + ? 

    (2) useful bindings

      bind-key -n F6 last-window  
      bind-key -n F7 select-pane -t :.+
      bind-key -n F8 select-pane -t :.-
      bind-key -n F9 previous-window
      bind-key -n F10 next-window

     (-n : using root table, root tables means no need <prefix>)

     (-r : allows you to do PREFIX then hit several times the command bound)
        for example: 
        CTRL-B CTRL-J CTRL-J CTRL-J will extend the current pane by 3 lines 
        instead of CTRL-B CTRL-J CTRL-B CTRL-J CTRL-B CTRL-J




10. status bar options
----------------------

(1) status bar left reset
    # set -g status-left "[#S] "  --> tmux session name

(2) show current options (version 1.8) in vmware-011

(2-1) in vmware-011 status options

    > tmux show-options -g | grep status
    status on
    status-attr none
    status-bg colour94
    status-fg white
    status-interval 15
    status-justify left
    status-keys emacs
    status-left "[#S]"
    status-left-attr none
    status-left-bg default
    status-left-fg default
    status-left-length 10
    status-position bottom
    status-right ""#22T" %H:%M %d-%b-%y"
    status-right-attr none
    status-right-bg default
    status-right-fg default
    status-right-length 40
    status-utf8 on


(2-2) in vmware-059, Window options

    > tmux show-window-options -g | grep window
    ...
    window-status-current-format "#[fg=black]#[bg=white] #I #W #F"
    window-status-format "#[fg=white]#[bg=colour53]#I #W #F #[fg=#44475a] "
    ...


    #I : Window Index, #W: window name, #F: Flags


    
(2-3) in vmware-059, Window options

    > tmux show-window-options -g | grep window
    window-status-activity-style reverse
    window-status-bell-style reverse
    window-status-current-format "#[fg=#44475a]#[bg=#bd93f9]#[fg=#f8f8f2]#[bg=#bd93f9] #I #W #[fg=#bd93f9]#[bg=#44475a]"
    window-status-current-style fg=colour212,bg=colour236
    window-status-format "#[fg=#f8f8f2]#[bg=#44475a]#I #W #[fg=#44475a] "
    window-status-last-style default
    window-status-separator " "
    window-status-style fg=colour141


(3) tmux-mem-cpu-load

    Example output:

    2885/7987MB [|||||     ]  51.2% 2.11 2.35 2.44

     ^    ^          ^         ^     ^    ^    ^
     |    |          |         |     |    |    |
     1    2          3         4     5    6    7
    1. Currently used memory.
    2. Available memory.
    3. CPU usage bar graph.
    4. CPU usage percentage.
    5. Load average for the past minute.
    6. Load average for the past 5 minutes.
    7. Load average for the past 15 minutes.


    Once installed (https://github.com/thewtex/tmux-mem-cpu-load), 
    you can add the following lines to your ~/.tmux.config:


      set -g status-interval 2
      set -g status-left "#S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2)#[default]"
      set -g status-left-length 60


    Putting the lines below in ~/.tmux.conf , will produce the tmux status line in the screenshot below.

        set-option -g status on
        set-option -g status-interval 1
        set-option -g status-justify centre
        set-option -g status-keys vi
        set-option -g status-position bottom
        set-option -g status-style fg=colour136,bg=colour235
        set-option -g status-left-length 20
        set-option -g status-left-style default
        set-option -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r)#[default]"
        set-option -g status-right-length 140
        set-option -g status-right-style default
        set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "
        set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
        set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"
        set-window-option -g window-status-style fg=colour244
        set-window-option -g window-status-style bg=default
        set-window-option -g window-status-current-style fg=colour166
        set-window-option -g window-status-current-style bg=default



    (*) To install tmux-mem-cpu-load, it needs cmake version > 3.5
        - download here, https://github.com/Kitware/CMake/releases
        - https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-linux-x86_64.sh
        - run this shell program, it will extract itself. Then put 'cmake' into the /usr/bin or in the path 
        - cd tmux-mem-cpu-load directory, and cmake . && make
        - copy or move the executable file, tmux-mem-cpu-load in to the /usr/bin or in the path directory
    


    (*) simple applying without changing window style and colors

        - tmux set-option -g status-right-length 140
        - tmux set-option -g status-right "#[fg=white,bg=default,bright]#(tmux-mem-cpu-load --interval 2) "
        - tmux set-option -ga status-right ""#22T" %H:%M %d-%b-%y"
          (or status-right " "#{=21:pane_title}" %H:%M %d-%b-%y")
          (or set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d")

        or 
        - tmux set-option -g status-right-length 140
        - tmux set-option -g status-right "#[fg=white,bg=default,bright]#(tmux-mem-cpu-load --colors --interval 2)#[default]"






** Other Useful config tips
----------------------------
    # Switching tmux zoom between panes without zooming out
        bind -r a select-pane -t .+2 \;  resize-pane -Z

    # display pane time
    set -g display-panes-time 4000

    # Tmux Resurrect plugin installation
    # prefix + Ctrl-s - save
    # prefix + Ctrl-r - restore
    set -g @plugin 'tmux-plugins/tmux-resurrect'


    # send-keys
    tmux send-keys -t {session}:{window}.{pane} C-m
















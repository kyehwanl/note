
1. switches
===========
(https://unix.stackexchange.com/questions/109625/shell-scripting-z-and-n-options-with-if)

-n
   string is not null.

-z
  string is null, that is, has zero length

    $ foo="bar";
    $ [ -n "$foo" ] && echo "foo is not null"
    foo is not null
    $ [ -z "$foo" ] && echo "foo is null"
    $ foo="";
    $ [ -n "$foo" ] && echo "foo is not null"
    $ [ -z "$foo" ] && echo "foo is null"
    foo is null


-b file     Checks if file is a block special file; if yes, then the condition becomes true.    [ -b $file ] is false.
-c file     Checks if file is a character special file; if yes, then the condition becomes true.    [ -c $file ] is false.
-d file     Checks if file is a directory; if yes, then the condition becomes true.     [ -d $file ] is not true.
-f file     Checks if file is an ordinary file as opposed to a directory or special file; if yes, then the condition becomes true.  [ -f $file ] is true.
-g file     Checks if file has its set group ID (SGID) bit set; if yes, then the condition becomes true.    [ -g $file ] is false.
-k file     Checks if file has its sticky bit set; if yes, then the condition becomes true.     [ -k $file ] is false.
-p file     Checks if file is a named pipe; if yes, then the condition becomes true.    [ -p $file ] is false.
-t file     Checks if file descriptor is open and associated with a terminal; if yes, then the condition becomes true.  [ -t $file ] is false.
-u file     Checks if file has its Set User ID (SUID) bit set; if yes, then the condition becomes true.     [ -u $file ] is false.
-r file     Checks if file is readable; if yes, then the condition becomes true.    [ -r $file ] is true.
-w file     Checks if file is writable; if yes, then the condition becomes true.    [ -w $file ] is true.
-x file     Checks if file is executable; if yes, then the condition becomes true.  [ -x $file ] is true.
-s file     Checks if file has size greater than 0; if yes, then condition becomes true.    [ -s $file ] is true.
-e file     Checks if file exists; is true even if file is a directory but exists.  [ -e $file ] is true.


<Helpful Links>
https://tldp.org/LDP/abs/html/comparison-ops.html
https://www.tutorialspoint.com/unix/unix-basic-operators.htm








2. escape from Infinite loop 
============================

(1) while loop
(https://unix.stackexchange.com/questions/42287/terminating-an-infinite-loop)

  while :;  do iperf3 -c 10.5.0.1 -B 172.250.237.124; test $? -eq 1 && break || echo $?; done 
    --> it should be -gt 128 (according to the above link), but I don't know the reason why Ctrl-C makes the number 1

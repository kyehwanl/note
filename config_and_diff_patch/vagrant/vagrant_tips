
Vagrant Usage
==============
(http://www.codebind.com/linux-tutorials/install-vagrant-ubuntu-18-04-lts-linux/)

----------------------------------------------------------
Setup Ubuntu 18.04 to be used with Vagrant and Virtualbox
----------------------------------------------------------
Step 1 – Install VirtualBox.

sudo apt-get install virtualbox


Step 2 – Install Vagrant.

sudo apt-get install vagrant


Step 3 – Verify Vagrant version
once vagrant is installed on Ubuntu operating system, we can verify it by following command:

$ vagrant -v





Step 4 Install Ubuntu Box

We can find Vagrant Boxes on the Vagrant Cloud. ubuntu/trusty64 is one of the most popular box (machine), 
which has nearly 30 million installs. So we will install this box.

Run the following command in your terminal.

$ vagrant box add ubuntu/trusty64
Output:

==> box: Loading metadata for box 'ubuntu/trusty64'
    box: URL: https://vagrantcloud.com/ubuntu/trusty64
==> box: Adding box 'ubuntu/trusty64' (v20170619.0.0) for provider: virtualbox
    box: Downloading: https://app.vagrantup.com/ubuntu/boxes/trusty64/versions/20170619.0.0/providers/virtualbox.box
==> box: Successfully added box 'ubuntu/trusty64' (v20170619.0.0) for 'virtualbox'!
Now initialize the vagrant box using the following command.

$ vagrant init ubuntu/trusty64
Output

`Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
Finally run the following command to start your box.

$ vagrant up

Output:

Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'ubuntu/trusty64'...

...

==> default: Machine booted and ready!
Now connect to you newly created machine via ssh using following command

vagrant ssh
if the above command works fine then you will see the following output:

Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 3.13.0-133-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 1.0

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

0 packages can be updated.
0 updates are security updates.

New release '18.04.3 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


Last login: Wed Oct 18 21:08:02 2017 from 10.0.2.2
vagrant@vagrant-ubuntu-trusty-64:~$
If the vagrant ssh command does not work then use the following command to know your ssh config

λ vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /c/Users/ProgrammingKnowledge/Videos/vagrant/ubuntu/.vagrant/machines/default/virtualbox/private_key
  IdentitiesOnly yes
  LogLevel FATAL
And use the following ssh command to connect via ssh

λ ssh vagrant@127.0.0.1 -p 2222 -i /c/Users/ProgrammingKnowledge/Videos/vagrant/ubuntu/.vagrant/machines/default/virtualbox/private_key



---------------------------
 In Windows 10
---------------------------

https://www.youtube.com/watch?v=mPBWWu7sZU4







---------------------------------------------
Where does Vagrant download its .box files
---------------------------------------------

 - Mac OS X and Linux: ~/.vagrant.d/boxes
 - Windows: C:/Users/USERNAME/.vagrant.d/boxes

    unsuccessful boxes are located at:
    ~/.vagrant.d/tmp


-------------------------
To change the Path, 
-------------------------
you can set a new Path to an Enviroment-Variable named: VAGRANT_HOME

export VAGRANT_HOME=my/new/path/goes/here/



(1) VirtualBox 실행폴더 바꾸기
vboxmanage setproperty machinefolder /path/to/directory/ → /opt/VirtualBoxVMs

(2) Vagrant Home directory 바꾸기
    .bash_profile에 export VAGRANT_HOME=/opt/.vagrant.d/






-----------------
remove
-----------------

# vagrant box remove bento/ubuntu-18.04 --provider vmware_desktop                        

Removing box 'bento/ubuntu-18.04' (v202112.20.0) with provider 'vmware_desktop'...                   
Vagrant-libvirt plugin removed box only from you LOCAL ~/.vagrant/boxes directory                    
From libvirt storage pool you have to delete image manually(virsh, virt-manager or by any other tool)







--------------------------------
Saving an existing Vagrant box:
--------------------------------
1. If your Vagrant box is still running, make sure to shut it down first:
      
vagrant halt
      
 -- updated. It will shut the machine down and start saving it to a file.
    (https://stackoverflow.com/questions/22181325/saving-and-sharing-changes-made-to-vagrant-box)
    

2. Execute create Vagrant box package:

vagrant package --output centos7drupal.box
      
    
3. The Vagrant box package will be saved as centos7drupal.box file.



-- one of Smart ways is to use git clone or inline shell script inside Vagrantfile
-- Later, it will be used in Vagrantfile with the name of image, instead of default.



---------------------------------
Removing an existing Vagrant box:
---------------------------------
1. If your Vagrant box is still running, make sure it is shutdown:

vagrant halt
      

2. Execute destroy Vagrant box:

vagrant destroy
    

Note: If you received this error message:

Vagrant is attempting to interface with the UI in a way that requires
a TTY. Most actions in Vagrant that require a TTY have configuration
switches to disable this requirement. Please do that or run Vagrant
with TTY.
      
... execute this command instead:

vagrant destroy -f
      

3. Backup the existing Vagrant config file and delete it:

cp Vagrantfile Vagrantfile.bak
rm Vagrantfile
      

4. Delete the actual Vagrant box image:

rm ~/.vagrant.d/boxes/centos7drupal
      

    
-----------------------------
Restoring saved Vagrant box:
-----------------------------
1. Execute add Vagrant box:

vagrant box add centos7drupal centos7drupal.box

    
2. Initialize your Vagrant box:

vagrant init centos7drupal
      

    
3. That command will create generic Vagrant config file. 
If you prefer to use the previous Vagrant config file, execute the following commands:

rm Vagrantfile
mv Vagrantfile.bak Vagrantfile
      

4. Boot your Vagrant box:

vagrant up
    
Only the initial boot-up will take longer time than the succeeding boots.






--------------------
 Save with Sanpshot
--------------------

(1) Usage: vagrant snapshot save [options] [vm-name] <name>
	Usage: vagrant snapshot restore [options] [vm-name] <name>

  If no vm-name is given, Vagrant will take a snapshot of
  the entire environment with the same snapshot name


	< Options >
	--[no-]provision - Force the provisioners to run (or prevent them from doing so).
	--no-delete - Prevents deletion of the snapshot after restoring (so that you can restore to the same point again later).
	--no-start - Prevents the guest from being started after restore

	** When "restore", --no-delete will be useful


(2) example.1
  root@pwct1:~# vagrant snapshot save aiab-4g                              
  ==> default: Snapshotting the machine as 'aiab-4g'...                    
  ==> default: Snapshot saved! You can restore the snapshot at any time by 
  ==> default: using `vagrant snapshot restore`. You can delete it using   
  ==> default: `vagrant snapshot delete`.                                  

  root@pwct1:~# vagrant snapshot list 
  aiab-4g



(3) example.2
	kyehwanl@pwct1:~/vagrant-test/aiab-ueransim-s1$ vagrant status
	Current machine states:

	sdcore                    running (virtualbox)
	ran                       running (virtualbox)

	This environment represents multiple VMs. The VMs are all listed
	above with their current state. For more information about a specific
	VM, run `vagrant status NAME`.

	kyehwanl@pwct1:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot save sdcore sdcore-upf2
	==> sdcore: Snapshotting the machine as 'sdcore-upf2'...
	==> sdcore: Snapshot saved! You can restore the snapshot at any time by
	==> sdcore: using `vagrant snapshot restore`. You can delete it using
	==> sdcore: `vagrant snapshot delete`.

	kyehwanl@pwct1:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot list
	==> sdcore:
	sdcore-upf2
	==> ran: No snapshots have been taken yet!                             
		ran: You can take a snapshot using `vagrant snapshot save`. Note that
		ran: not all providers support this yet. Once a snapshot is taken, you
		ran: can list them using this command, and use commands such as
		ran: `vagrant snapshot restore` to go back to a certain snapshot.


	kyehwanl@pwct1:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot save ran ran-upf2
	==> ran: Snapshotting the machine as 'ran-upf2'...
	==> ran: Snapshot saved! You can restore the snapshot at any time by
	==> ran: using `vagrant snapshot restore`. You can delete it using
	==> ran: `vagrant snapshot delete`.

	kyehwanl@pwct1:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot list 
	==> sdcore:
	sdcore-upf2        
	==> ran:
	ran-upf2


(4) push, pop

	-- push
	$ vagrant snapshot push --help
	Usage: vagrant snapshot push [options] [vm-name]

	Take a snapshot of the current state of the machine and 'push'
	it onto the stack of states. You can use `vagrant snapshot pop`
	to restore back to this state at any time.

	If you use `vagrant snapshot save` or restore at any point after
	a push, pop will still bring you back to this pushed state.
		-h, --help                       Print this help

	-- pop 
	$ vagrant snapshot pop --help
	Usage: vagrant snapshot pop [options] [vm-name]

	Restore state that was pushed onto the snapshot stack
	with `vagrant snapshot push`.

			--[no-]provision             Enable or disable provisioning
			--provision-with x,y,z       Enable only certain provisioners, by type or by name.
			--no-delete                  Don't delete the snapshot after the restore
			--no-start                   Don't start the snapshot after the restore
		-h, --help                       Print this help



	< example >

	  kyehwanl@pwct1:~/vagrant-test/aiab-5g-1$ vagrant snapshot push
	  ==> default: Snapshotting the machine as 'push_1679442862_1610'...
	  ==> default: Snapshot saved! You can restore the snapshot at any time by
	  ==> default: using `vagrant snapshot restore`. You can delete it using
	  ==> default: `vagrant snapshot delete`.

	  kyehwanl@pwct1:~/vagrant-test/aiab-5g-1$ vagrant snapshot list
	  ==> default:
	  push_1679442862_1610





 1. vagrant ssh and private key info
=====================================

(1) first, go to the folder, vagrant is running, (the place where running  'vagrant up'
    Need to find '.vagarnt

    --> here /opt/vagrant


    idac-server02 [1999]{/opt/vagrant}$ ll -al                                                                                     3/4
    total 12K
    -rw-r-----   1 kyehwanl admin 3.3K May  1 13:03 Vagrantfile
    drwxr-xr-x. 11 root     root  4.0K May  1 13:08 ../
    drwxr-xr-x   2 kyehwanl root    28 May  1 13:08 bin/
    drwxr-xr-x  10 kyehwanl root  4.0K May  1 13:08 embedded/
    drwxr-xr-x   5 kyehwanl root    84 May  1 13:10 ./
    drwxr-x---   4 kyehwanl admin   48 May  1 13:10 .vagrant/

    idac-server02 [2000]{/opt/vagrant}$ vagrant ssh-config
    Host default
      HostName 127.0.0.1
      User vagrant
      Port 2222
      UserKnownHostsFile /dev/null
      StrictHostKeyChecking no
      PasswordAuthentication no
      IdentityFile /opt/vagrant/.vagrant/machines/default/virtualbox/private_key
      IdentitiesOnly yes
      LogLevel FATAL

(2) use ip address: 127.0.0.1, port: 2222, key: IdentifyFile

    idac-server02 [2001]{/opt/vagrant}$ ssh vagrant@127.0.0.1 -p 2222 \
                    -i /opt/vagrant/.vagrant/machines/default/virtualbox/private_key
    Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-163-generic x86_64)

     * Documentation:  https://help.ubuntu.com
     * Management:     https://landscape.canonical.com
     * Support:        https://ubuntu.com/advantage

      System information as of Sun May  1 17:32:18 UTC 2022

      System load:  3.72               Processes:              272
      Usage of /:   12.8% of 61.80GB   Users logged in:        1
      Memory usage: 12%                IP address for eth0:    10.0.2.15
      Swap usage:   0%                 IP address for docker0: 172.17.0.1


    This system is built by the Bento project by Chef Software
    More information can be found at https://github.com/chef/bento
    Last login: Sun May  1 17:13:31 2022 from 10.0.2.2
    vagrant@vagrant:~$




2. Vagrantfile with username and password
==========================================
    Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
      # All Vagrant configuration is done here. The most common configuration
      # options are documented and commented below. For a complete reference,
      # please see the online documentation at vagrantup.com.

      # Every Vagrant virtual environment requires a box to build off of.
      config.vm.box = "centos64"
      config.ssh.username="uaccount"
      config.ssh.password="passw0rd"



3. vagrant package
===================

(1) Exporting 
     vagrant package --base=CentOS --output=centos64.box

(2) Importing 
    vagrant box add centos64.box --name=centos64

- List all Vagrant Box
    vagrant box list

- Add the new packaged Vagrant box 
    vagrant box add <list_name>  <name-of-vagrant.box>

    (example) 
    vagrant box add psnc vagrant-packaged-box-psnc-01.box
    vagrant box list
      geerlingguy/ubuntu1604 (virtualbox, 1.1.5)
      geerlingguy/ubuntu1604 (virtualbox, 1.1.6)
      psnc                   (virtualbox, 0)

    mkdir psnc
    cd psnc
    vagrant init
      ➜ Copy a previous build Vagrantfile to ~/vagrant/psnc/
      ➜ Change the Vagrant Box inside the "Vagrantfile" file to "psnc"
      ➜ config.vm.box = "psnc"
    vagrant up



(3) How to add a downloaded .box file to Vagrant

- Importing in the same directory
    vagrant box add my-box name-of-the-box.box

- Importing any directory
    vagrant box add my-box file:///d:/path/to/file.box (has to be URL format)


 
(4) Add
  root@pwct1:~/riab# vagrant box add aiab-4g ./aiab-4g.box                
  ==> box: Box file was not detected as metadata. Adding it directly...   
  ==> box: Adding box 'aiab-4g' (v0) for provider:                        
      box: Unpacking necessary files from: file:///root/riab/aiab-4g.box  
  ==> box: Successfully added box 'aiab-4g' (v0) for 'virtualbox'!

  root@pwct1:~/riab# vagrant box list         
  aiab-4g            (virtualbox, 0)          
  bento/ubuntu-18.04 (virtualbox, 202112.19.0)



  - vagrant init
  - edit Vagrantfile
        substitue vm.box name with 'config.vm.box="aiab-4g"'
  - vagrant up




4. Global status
=================
root@pwct1:~# vagrant global-status
id       name    provider   state   directory
------------------------------------------------------------------------
809d1cb  default virtualbox running /root
117a112  default virtualbox running /root/riab
b59a137  default virtualbox running /root/aiab-4g

The above shows information about all known Vagrant environments
on this machine. This data is cached and may not be completely
up-to-date. To interact with any of the machines, you can go to
that directory and run Vagrant, or you can use the ID directly
with Vagrant commands from any directory. For example:
"vagrant destroy 1a2b3c4d"





5. Use with Environment Variable
================================

(1) userfile other than Vagrantfile 

    VAGRANT_VAGRANTFILE=Vagrantfile.other vagrant up


(2) Working Directory Change 

    VAGRANT_CWD=~/some/path/ vagrant ssh-config

    VAGRANT_CWD is the directory where vagrant looks for Vagrantfile
    Quote from official docs :

      VAGRANT_CWD can be set to change the working directory of Vagrant.
      By default, Vagrant uses the current directory you are in.
      The working directory is important because it is where Vagrant looks for the Vagrantfile.



---------------------------------------------
6. GUI - the way to use GUI in Vagrant image
---------------------------------------------
(https://stackoverflow.com/questions/18878117/using-vagrant-to-run-virtual-machines-with-desktop-environment)

1. Get a basic Ubuntu image working. You should be able to boot it and vagrant ssh.

2. Next, enable the VirtualBox display, which is off by default. Halt the VM and uncomment these lines in Vagrantfile:
	config.vm.provider :virtualbox do |vb|
	  vb.gui = true
	end

3. Boot the VM and observe the new display window. Now you just need to install and start xfce4. Use vagrant ssh and:
	sudo apt-get install xfce4
	sudo startxfce4&


	Here's Air's excellent answer in the form of a Vagrantfile
	----------------------------------------------------------

	Vagrant.configure(2) do |config|
	  # Ubuntu 15.10
	  config.vm.box = "ubuntu/wily64"

	  config.vm.provider "virtualbox" do |vb|
		# Display the VirtualBox GUI when booting the machine
		vb.gui = true
	  end

	  # Install xfce and virtualbox additions
	  config.vm.provision "shell", inline: "sudo apt-get update"
	  config.vm.provision "shell", inline: "sudo apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
	  # Permit anyone to start the GUI
	  config.vm.provision "shell", inline: "sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config"
	end



--------------------
7. Ubuntu OS images
--------------------

  (1) Ubuntu 18.04
	.vm.box = "generic/ubuntu1804"	: A generic Ubuntu image, ready for use as an appliance or development environment 
	.vm.box = "bento/ubuntu-18.04" 	: Vanilla Ubuntu Vagrant box created with Bento by Chef 
	.vm.box = "ubuntu/bionic64" 	: Official Ubuntu builds

  (2) Ubuntu 20.04
	.vm.box = "generic/ubuntu2004"
	.vm.box = "bento/ubuntu-20.04"
	.vm.box = "ubuntu/focal64"  	

  (3) Ubuntu 22.04
	.vm.box = "generic/ubuntu2204"
	.vm.box = "bento/ubuntu-22.04"
	.vm.box = "ubuntu/jammy64"  	






---------------------------
8. Provisioning for user
---------------------------
(https://stackoverflow.com/questions/22547575/execute-commands-as-user-after-vagrant-provisioning)
The key is to specify privileged: false so that it will use the default user and not root.

  Vagrant.configure("2") do |config|
	$script = <<-SCRIPT
	rbenv install 2.0.0-p353
	rbenv global 2.0.0-p353
	gem update --system
	yes | gem update
	gem install rdoc
	gem install rails pg
	SCRIPT

	config.vm.provision "shell", inline: $script, privileged: false
  end


  ***********< My example >*************
  $script = <<-SCRIPT
  apt update
  apt install -y make vifm bash-completion git
  SCRIPT

  $script_user = <<-SCRIPT_USER
  git clone https://github.com/kyehwanl/config_ready_to_use.git
  config_ready_to_use/vagrant_vim_env_config.sh
  SCRIPT_USER


  Vagrant.configure("2") do |config|
	servers.each do |conf|
	  config.vm.define conf[:vm] do |node|
	  ...

		node.vm.provision "shell", inline: $script, privileged: true
		node.vm.provision "shell", inline: $script_user, privileged: false
	  end
	end
  end





-----------------------------------------
9. Moving vagrant VM image with snapshot
-----------------------------------------

vagrant-test/ace : working directory which include Vagrantfile

(1) moving vagrant working directory 

	All files under vagrant-test/ace/ --> move to new machine

(2) moving VirtualBox VM image

	all files under ~/VirtualBox VMs/ace_aiab_1677857454721_5507/ --> move to new machine


(3) if it has snapshot
	vagrant-test/ace/.vagrant/machines/aiab/virtualbox/ is not empty
	vagrant-test/ace/.vagrant/machines/ran/virtualbox/ is not empty

	A. VirtualBox GUI (VirtualBox Manager), 
		Machine -> Add -> select and open ace_aiab_1677857***_5507/ace_aiab_....vbox 
		-> 

	B. status file copy

	  go to 
		  vagrant-test/ace/.vagrant/machines/aiab/virtualbox/
		  vagrant-test/ace/.vagrant/machines/rn/virtualbox/

	  --> files:  action_provision  action_set_name  box_meta  creator_uid  id  index_uuid  
				  private_key  synced_folders  vagrant_cwd

	  So, move these files into the same location in a new machine


	C. if vboxnet3 error occurrs, when it has only vboxnet0

		go to GUI, VirtualBox Manager, Tools -> Network --> create interface until reachs to vboxnet3
		and then remove vboxnet1,2(however, it's fine not to remove them) 
		go to the individual setting, -> Network -> Adaptor2 -> Name -> vboxnet0 and Ok

		** When Error: Host Only Network- Failed to save host network interface parameter - E_ACCESSDENIED
		--> see TroubleShooting


	D. Check out in vagrant status and snapshot list

		kyehwanl@pwct2:~/vagrant-test/aiab-ueransim-s1$ vagrant status
		Current machine states:

		sdcore                    poweroff (virtualbox)
		ran                       poweroff (virtualbox)


		kyehwanl@pwct2:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot list
		==> sdcore:
		push_1679443121_1357
		sdcore-upf2
		==> ran:
		push_1679443155_8030
		ran-upf2


	E. testing 
		vagrant snapshot pop --no-delete ran (or aiab, or both - without vm-name)
	
		kyehwanl@pwct2:~/vagrant-test/aiab-ueransim-s1$ vagrant snapshot pop --no-delete
		==> sdcore: Restoring the snapshot 'push_1679443121_1357'...
		==> sdcore: You assigned a static IP ending in ".1" to this machine.
		==> sdcore: This is very often used by the router and can cause the
		==> sdcore: network to not work properly. If the network doesn't work
		==> sdcore: properly, try changing this IP.
		==> sdcore: Checking if box 'bento/ubuntu-18.04' version '202212.11.0' is up to date...
		==> sdcore: A newer version of the box 'bento/ubuntu-18.04' is available and already
		==> sdcore: installed, but your Vagrant machine is running against
		==> sdcore: version '202212.11.0'. To update to version '202303.13.0',
		==> sdcore: destroy and recreate your machine.
		==> sdcore: Resuming suspended VM...
		==> sdcore: Booting VM...
		==> sdcore: Waiting for machine to boot. This may take a few minutes...
			sdcore: SSH address: 127.0.0.1:2203
			sdcore: SSH username: vagrant
			sdcore: SSH auth method: private key
		==> sdcore: Machine booted and ready!
		==> sdcore: Machine already provisioned. Run `vagrant provision` or use the `--provision`
		==> sdcore: flag to force provisioning. Provisioners marked to run always will still run.
		==> ran: Restoring the snapshot 'push_1679443155_8030'...
		==> ran: Checking if box 'bento/ubuntu-18.04' version '202212.11.0' is up to date...
		==> ran: A newer version of the box 'bento/ubuntu-18.04' is available and already
		==> ran: installed, but your Vagrant machine is running against
		==> ran: version '202212.11.0'. To update to version '202303.13.0',
		==> ran: destroy and recreate your machine.
		==> ran: Resuming suspended VM...
		==> ran: Booting VM...
		==> ran: Waiting for machine to boot. This may take a few minutes...
			ran: SSH address: 127.0.0.1:2205
			ran: SSH username: vagrant
			ran: SSH auth method: private key
		==> ran: Machine booted and ready!
		==> ran: Machine already provisioned. Run `vagrant provision` or use the `--provision`
		==> ran: flag to force provisioning. Provisioners marked to run always will still run.


		kyehwanl@pwct2:~/vagrant-test/aiab-ueransim-s1$ vagrant status
		Current machine states:

		sdcore                    running (virtualbox)
		ran                       running (virtualbox)



  	F. one by one, by using "vagrant status", check out vagrant running status and register into "global" record.
		Otherwise, "vagrant global-status" command doesn't show all the instances








(4) ---- TroubleShooting -----

A. When adding vboxnet0,1,2,3,
	Error: Host Only Network- Failed to save host network interface parameter - E_ACCESSDENIED
	(https://forums.virtualbox.org/viewtopic.php?t=104357)


	On Linux, Mac OS X and Solaris Oracle VM VirtualBox will only allow IP addresses in 192.68.56.0/21 range to be assigned 
	to host-only adapters. For IPv6 only link-local addresses are allowed. 
	If other ranges are desired, they can be enabled by creating /etc/vbox/networks.conf and specifying allowed ranges there. 

	For example, to allow 10.0.0.0/8 and 192.168.0.0/16 IPv4 ranges as well as 2001::/64 range 
	put the following lines into /etc/vbox/networks.conf:

	  * 10.0.0.0/8 192.168.0.0/16
	  * 2001::/64

	Lines starting with the hash # are ignored. Next example allows any addresses, effectively disabling range control:

	* 0.0.0.0/0 ::/0

	If the file exists, but no ranges are specified in it, no addresses will be assigned to host-only adapters. 
	The following example effectively disables all ranges:

    # No addresses are allowed for host-only adapters





B.  When uid is different
  kyehwanl@pwct1:~/vagrant-test/ace$ vagrant status 

  The VirtualBox VM was created with a user that doesn't match the
  current user running Vagrant. VirtualBox requires that the same user
  be used to manage the VM that was created. Please re-run Vagrant with
  that user. This is not a Vagrant issue.

  The UID used to create the VM was: 1003
  Your UID is: 40835

  --> where, id can be found by hittimg a command, "id"
  kyehwanl@pwct1:~$ id
  uid=40835(kyehwanl) gid=40835(kyehwanl) groups=40835(kyehwanl),27(sudo)


  (Solution)
	https://github.com/hashicorp/vagrant/issues/8630

	  You need to update the creator_uid file in .vagrant/
	  The file should be in: .vagrant/machines/web/virtualbox/creator_uid
	  You may also need to assign the ownership for .vagrant/machines/web to the new uid as well.

	  Read this for more information:
	  http://albertech.blogspot.com/2016/11/fix-vagrant-error-virtualbox-vm-was.html

	  In addition you may need to change ownership of other files in your VM install such as:
	  provisioning/site.retry


	--> my case,
	change the uid in  ~/vagrant-test/ace/.vagrant/machines/ran/virtualbox/creator_uid
	1003 --> 40835





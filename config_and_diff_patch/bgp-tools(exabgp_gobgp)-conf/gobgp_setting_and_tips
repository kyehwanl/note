
gobgp configuration
===================

(0) Installation of go language
      Untar go language tarball file into /usr/local/
      Then, add /usr/local/go/bin into the PATH env variable

(1) prepare .go config file

  (A) filename: .go                         
      #!/bin/sh                                              
      export GOPATH=$HOME/srx_test1/gowork       
      export PATH=$PATH:$GOPATH/bin:/usr/local/go/bin 


  (B) put .go file into account root directory 
  (C) modify .bashrc with following line
  
    source ~/.go


(2) gobgp install

    refer to READMEfile 

        ----------- below is from the website --------------
        You need a working Go environment (1.9 or newer).

        $ go get -u github.com/golang/dep/cmd/dep
        $ go get github.com/osrg/gobgp
        $ cd $GOPATH/src/github.com/osrg/gobgp && dep ensure
        -----------------------------------------------------

    * 'go get' should be run in GOPATH (same with go build or go install)
        
        --> 'go build' should be accomplished based on $GOPATH, so if $GOPATH is modified to 
            other directory and if there are customized sources (for example, github.com/gobgpd),
            then, it can be done to build another version as well as 'src','bin'

            (Example)
            A. new version of goBGP already exists in ~/go/
            B. modify env variable GOPATH, export GOPATH=~/project/gowork
            C. copy a prepared old version sources (github.com/osrg/gobgp and etc) into $GOPATH/src
            D. go to gobgp ($GOPATH/src/github.com/osrg/gobgp) and "go build ./..." or go get ./...


    * if "go get <snip>/gobgp" has an error, 
        "can't load package: package github.com/osrg/gobgp: no Go files in...""

      --> then use this command :  go get github.com/osrg/gobgp/...
          OR
          hit the command "dep ensure"


(2-2) gobgp Compilation ( in case copied from another place)
    (A) Check go version first ( need to be > go1.10)
    (B) if lower than go version 1.10, there will be cgo error
    (C) then version up with > go1.10.2
    (D) recommend to install protoc and grpc again ( high chance of some errors with protocol buffer issues)
        go get -u github.com/golang/protobuf/protoc-gen-go
        go get -u google.golang.org/grpc

    (E) protocol buffer compile with grpc plugins in api directory
        gobgp/api}-> protoc -I=. --go_out=plugins=grpc:. ./gobgp.proto

    (F) build 
        osrg/gobgp}-> go build -ldflags="-r /opt/project/srx_test1/srxcryptoapi-0.3.0.0/_inst/lib64/srx" -gcflags='-N -l' ./...




 (*) UPDATED
  A. gobgp version 2.13 
      - need go version > 1.13
      - need protoc version == 3.7.1

  B. go install 
    - go get github.com/osrg/gobgp/cmd/gobgpd  
    - go get github.com/osrg/gobgp/cmd/gobgp  





(3) gobgpd config file (in toml form)
    --> refer to "bgpd-tools-conf/gobgpd.policy.conf" for more detail


  bgpsec1.antd [53]{.../gowork/bin}-> cat gobgpd.conf
  [global.config]
    as = 61417
    router-id = "129.6.141.7"

  [[neighbors]]
    [neighbors.config]
      neighbor-address = "129.6.141.8"
      peer-as = 61418


  * Additional configuration info

    -----------------------------------------------------
   [[neighbors.afi-safis]]
    [neighbors.afi-safis.config]
      afi-safi-name = "ipv4-unicast" 

    -----------------------------------------------------
    [zebra]
      [zebra.config]
        enabled = true
        url = "unix:/var/run/quagga/zserv.api"
        redistribute-route-type-list = ["connect"]


    -----------------------------------------------------
    [[defined-sets.bgp-defined-sets.community-sets]]                                        
      community-set-name = "cs0"
      community-list = ["200:50"]

    [[policy-definitions]]
        name = "policy1"
    [[policy-definitions.statements]]
        name = "Drop community 200:50"
        [policy-definitions.statements.conditions.bgp-conditions.match-community-set]   
            community-set = "cs0"
            match-set-options = "any"
        [policy-definitions.statements.actions.route-disposition]
            accept-route = false

    -----------------------------------------------------
     [global.apply-policy.config]
       export-policy-list = ["policy1"]


    -----------------------------------------------------
    [[neighbors]]
      [neighbors.config]
        neighbor-address = "172.40.1.3"
        peer-as = 65001

      [neighbors.route-reflector.config]
        route-reflector-client = true
        route-reflector-cluster-id = "172.40.1.2"

      [neighbors.ebgp-multihop.config]
        enabled = true

      [neighbors.transport.config]
           passive-mode = true




(4) run command
  sudo -E ./gobgpd -f ./gobgpd.conf



(5) client side using gobgp command
    A. gobgp monitor global rib 

        bgpsec1.antd [60]{.../gowork/bin}-> ./gobgp monitor global rib
        [DELROUTE] 200.0.0.0/8 via 129.6.141.8 aspath [61418] attrs [{Origin: i} {Med: 0}]
        [ROUTE] 200.0.0.0/8 via 129.6.141.8 aspath [61418] attrs [{Origin: i} {Med: 0}]


    B. gobgp global rib add -a ipv4 100.1.1.0/24 (send prefix data to a neighbor)
       gobgp global rib                          (show rib information)

        bgpsec1.antd [58]{.../gowork/bin}-> ./gobgp global rib add -a ipv4 100.1.1.0/24 
        bgpsec1.antd [59]{.../gowork/bin}-> ./gobgp global rib 
            Network             Next Hop             AS_PATH              Age        Attrs
        *>  100.1.1.0/24        0.0.0.0                                   00:00:27   [{Origin: ?}]
        *>  200.0.0.0/8         129.6.141.8          61418                00:02:26   [{Origin: i} {Med: 0}]


    C. gobgp neigh(bor) [ip] [adj-in|adj-out]

        bgpsec1.antd [61]{.../gowork/bin}-> gobgp neighbor
        Peer           AS  Up/Down State       |#Received  Accepted
        129.6.141.8 61418 00:04:28 Establ      |        1         1


    D. examples
        gobgp global rib add 10.50.1.0/24 origin igp nexthop 10.1.1.1 community 100:50 -a ipv4


(6) go test

    vmware.005-antd [1006]{.../gobgp/cmd}-> go test -v -run="Parse" 
    RUN   Test_ParsePath
    { 10.0.0.0/24 | src: <nil>, nh: 10.0.0.1 }
    --- PASS: Test_ParsePath (0.00s)
    PASS
    ok      github.com/osrg/gobgp/gobgp/cmd 0.005s


    -v: verbose output
    -run: regular expression if there are multiple Tests


    (Requirements) go get github.com/stretchr/testify/assert



Modify gobgpd
=============

(1) goto /users/kyehwanl/srx_test1/gowork/src/github.com/osrg/gobgp/server
(2) server.go 
        --> func (server *BgpServer) handleFSMMessage(peer *Peer, e *FsmMsg) 
                case *bgp.BGPMessage: 
(3) peer.go 
        --> func (peer *Peer) handleUpdate
(4) add time measure code

    var start time.Time      
    var elapsed time.Time    

    start = time.Now()
    elapsed = time.Now()
    diff := elapsed.Sub(start)
    fmt.Println(diff)


(5) build
 go to /users/kyehwanl/srx_test1/gowork/src/gobgp_test
 hit the command "go get ./..."  (three dots: means including subdirectories)

(6) run
  sudo -E ./gobgpd -f ./gobgpd.conf [-l debug]

   ** suppress terminal out:  gobgpd -f /etc/gobgpd_test.conf --disable-stdlog 




Check Dependencies and build
============================
(1) look for any library dependencies
    cd osrg/gobgp
    "go get ./..."

(2) build src code using or install the binary using go install ./...
    "go build ./..."

(3) compiled binaries in $GOPATH/bin/ 



 * To print local variable, (No optimization, same with -O0)

     go build -gcflags '-N -l' ./... or
     go get   -gcflags '-N -l' ./...

    
    (c.f) https://github.com/golang/go/issues/19340

   "You are not seeing the value of some local variables because the compiler is optimizing them away.
    You should use dlv debug or dlv test to compile your code. If you build the executable yourself 
    you should pass the option -gcflags='-N -l' to the compiler.
    If you used delve to compile or remembered to use -gcflags='-N -l' and the missing local variables 
    are in a package other than main you may be victim of this go bug. 
    If this is the case your only option is to manually purge the offending packages from $GOPATH/pkg/."


(4) external C library to include the path to the C library in the code
    - LD_LIBRARY_PATH=/path/to/lib go build [source|./...] 
    - go build -ldflags="-r /path/to/lib" [source|./...]   
    - go install -ldflags="-r /path/to/lib/go_srx_test" -gcflags='-N -l' ./...


(5) Avoiding the LD_LIBRARY_PATH for Shared Libs in Go (cgo) Applications 
      export CGO_LDFLAGS="-L/path/to/the/lib -Wl,-rpath -Wl,\$ORIGIN/../lib"
      export CGO_CFLAGS="-I/path/to/include/file/of/the/lib/include"
      go build

    or 
      put "-Wl,-rpath -Wl, /path/lib" into #cgo LD_FLAGS line at source code 
      in source code, #cgo LDFLAGS: -L. -lSRxBGPSecOpenSSL -Wl,-rpath -Wl,/path/lib/

(6) -v and -x switch for more information
    -x: show command like gcc compilation
    -v: verbose including fils generated
    

(7) build in different directory
    Replace './...' with a path after $GOPATH/src/
    (example)
        go build github.com/osrg/gobgp/...



Running
=========

  (0) go run filename.go

      go run == go build + go install
      go get == go build + go install + go run [+ download external dependencies in import statement]


  (1) log-level 
      -l or --log-level=<info|debug>

  (2) -p: plain display  (default: JSON format)

      vmware.005-antd [1009]{.../gowork/bin}-> sudo ./gobgpd --log-level=info -f ./gobgpd.conf -p     
      INFO[0000] Policy config is updated                     
      INFO[0000] gobgpd started                               
      INFO[0000] Finished reading the config file              Topic=Config
      INFO[0000] Peer 10.0.50.11 is added                     
      INFO[0000] Add a peer configuration for:10.0.50.11       Topic=Peer
      INFO[0013] Peer Up                                       Key=10.0.50.11 State="BGP_FSM_OPENCONFIRM" Topic=Peer
      INFO[0014]  +++++++++ gobgpd update                     



      vmware.005-antd [1008]{.../gowork/bin}-> sudo ./gobgpd --log-level=debug -f ./gobgpd.conf -p
      INFO[0000] Policy config is updated                     
      INFO[0000] gobgpd started                               
      INFO[0000] Finished reading the config file              Topic=Config
      INFO[0000] Peer 10.0.50.11 is added                     
      DEBU[0000] failed to set md5 10.0.50.11 no such file or directory  Topic=Peer
      INFO[0000] Add a peer configuration for:10.0.50.11       Topic=Peer
      DEBU[0000] IdleHoldTimer expired                         Duration=0 Key=10.0.50.11 Topic=Peer
      DEBU[0000] state changed                                 Key=10.0.50.11 Topic=Peer new="BGP_FSM_ACTIVE" old="BGP_FSM_IDLE" reason=idle-hold-timer-expired
      DEBU[0017] state changed                                 Key=10.0.50.11 Topic=Peer new="BGP_FSM_OPENSENT" old="BGP_FSM_ACTIVE" reason=new-connection
      DEBU[0017] state changed                                 Key=10.0.50.11 Topic=Peer new="BGP_FSM_OPENCONFIRM" old="BGP_FSM_OPENSENT" reason=open-msg-received
      INFO[0017] Peer Up                                       Key=10.0.50.11 State="BGP_FSM_OPENCONFIRM" Topic=Peer
      DEBU[0017] state changed                                 Key=10.0.50.11 Topic=Peer new="BGP_FSM_ESTABLISHED" old="BGP_FSM_OPENCONFIRM" reason=open-msg-negotiated
      DEBU[0018] received update                               Key=10.0.50.11 Topic=Peer attributes=[{Origin: i} {Nexthop: 10.0.50.11} {Med: 0} 65011] nlri=[100.0.0.0/8 100.0.30.0/23] withdrawals=[]
      INFO[0018]  +++++++++ gobgpd update                     
      DEBU[0018] create Destination                            Key="100.0.0.0/8" Topic=Table
      DEBU[0018] create Destination                            Key="100.0.30.0/23" Topic=Table
      DEBU[0018] Processing destination                        Key="100.0.0.0/8" Topic=table
      DEBU[0018] computeKnownBestPath known pathlist: 1        Topic=Table
      DEBU[0018] Processing destination                        Key="100.0.30.0/23" Topic=table
      DEBU[0018] computeKnownBestPath known pathlist: 1        Topic=Table
      DEBU[0018] From me, ignore.                              Data={ 100.0.0.0/8 | src: { 10.0.50.11 | as: 65011, id: 10.0.50.11 }, nh: 10.0.50.11 } Key=10.0.50.11 Topic=Peer
      DEBU[0018] From me, ignore.                              Data={ 100.0.30.0/23 | src: { 10.0.50.11 | as: 65011, id: 10.0.50.11 }, nh: 10.0.50.11 } Key=10.0.50.11 Topic=Peer
      DEBU[0044] sent                                          Key=10.0.50.11 State="BGP_FSM_ESTABLISHED" Topic=Peer data=&{{[] 19 4} 0x15863f8}
      DEBU[0074] sent                                          Key=10.0.50.11 State="BGP_FSM_ESTABLISHED" Topic=Peer data=&{{[] 19 4} 0x15863f8}





MISC
=====
  (1) gotags
    * install
    go get -u github.com/jstemmer/gotags

    * configure in vim
    :set tags+=../gotags


    * to generate:
        vmware.005-antd [1004]{.../osrg/gobgp}-> find $PWD -name '*.go' | gotags -f gotags -R -L -

    * to apply in vim:
        :set tags+=../gotags
    


    (2) C shared library
    vmware.005-antd [999]{.../gobgp/lib}-> go build --buildmode=c-shared -o libgobgp.so *.go



    (3) vim-go
    * install
        following Pathogen way: git clone https://github.com/fatih/vim-go.git ~/.vim/bundle/vim-go
        and 
        in .vimrc.bundles or .vimrc.local, put "Bundle 'fatih/vim-go'"
    * set filetype=go

    * Trouble-Shoot:
        - when conflict with 'gd'
        <solution> :nnoremap <buffer> <silent> gd gd



Debugging
===========

  1. GDB
  ------
    Basically, Go consist of C language, so gdb can be used for debugging
        sudo gdb --args ./gobgpd -f ./gobgpd.conf

        # gdb ./gobgp --args global rib add  100.10.1.0/24



  2. delve (a.k.a 'godebug' previously)
  -------------------------------------

    usage: dlv debug|attach|exec
    
    2.1 installation required: go version >= 1.7 or 1.8
    2.2 installation 
      $ go get -u github.com/derekparker/delve/cmd/dlv

    2.3 run:    sudo ./dlv attach <pid of gobgpd>
            
      * arguments
      [root@vmware-005 bin]# dlv exec gobgpd -- -f ./gobgpd.conf -p

      * source optimization build
         go build -gcflags '-N -l' ./... or
         go get   -gcflags '-N -l' ./...


    2.4 breakpoint:
        (dlv) b /opt/project/gobgp_test/gowork/src/github.com/osrg/gobgp/server/peer.go:465
        Breakpoint 1 set at 0x969ce3 for github.com/osrg/gobgp/server.(*Peer).handleUpdate() /opt/project/gobgp_test/gowork/src/github.com/osrg/gobgp/server/peer.go:465


    2.5 ETC
        
      A. 
        (dlv) p e.MsgData.Body.NLRI[0]
        (dlv) p e.MsgData.(*bgp.BGPMessage)

      B. 
        (dlv) p "some/package".A --> not works (need more search)


      C. gobgp client example

          vmware.005-antd [1017]{.../gowork/bin}-> sudo -s
          [root@vmware-005 bin]# export GOPATH=/opt/project/gobgp_test/gowork
          [root@vmware-005 bin]# export PATH=$PATH:$GOPATH/bin:/usr/local/go/bin

          [root@vmware-005 bin]# dlv exec gobgp -- global rib add  100.10.0.0/24     
          Type 'help' for list of commands.
          (dlv) c
          Process 4926 has exited with status 0

        
      D. Not necessarily to be a sudo user (in case of gobgp), just normal user is ok to run

          vmware.005-antd [1000]{.../gowork/bin}-> dlv exec gobgp -- global rib 
          vmware.005-antd [1001]{.../gowork/bin}-> dlv exec gobgp -- global rib add  100.10.4.0/24
          vmware.005-antd [1005]{.../gowork/bin}-> dlv exec gobgp -- global rib add bgpsec -a ipv4 15.18.20.0/24 nexthop 10.0.50.5


      E. in case of Server, it need to have root authority to open the port 179.
       
          vmware.005-antd [1007]{.../gowork/bin}-> cat ~/.go
          #!/bin/sh
          export GOPATH=/opt/project/gobgp_test/gowork
          export PATH=$PATH:$GOPATH/bin:/usr/local/go/bin
          vmware.005-antd [1008]{.../gowork/bin}-> sudo -s
          [root@vmware-005 bin]# export GOPATH=/opt/project/gobgp_test/gowork
          [root@vmware-005 bin]# export PATH=$PATH:$GOPATH/bin:/usr/local/go/bin
          [root@vmware-005 bin]# /opt/project/gobgp_test/gowork/bin/dlv exec gobgpd -- -f ./gobgpd.conf -p 


      F. show parameter arguments
          (dlv) args



    3. gRPC  install (including Protocol Buffer)
    --------------------------------------------
        3.0. Need to set GOPATH into environment variable
             (GOPATH has normally /bin /src /pkg directories)


        3.1 install protocol buffer compiler, "protoc" 
            (1) download from https://github.com/protocolbuffers/protobuf/releases
            (2) simply place this binary(protoc) somewhere in your PATH
            (3) And place 'include' folder to somewhere CFLAGS is able to find (ex. /usr/include or /usr/local/include)
            ** current version used
                protoc-3.6.1-linux-x86_64.zip

            Here: https://github.com/protocolbuffers/protobuf/releases/tag/v3.6.1
            https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip
            https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_32.zip


        3.2 install Go protocol buffer plugin and grpc-go
            go get -u github.com/golang/protobuf/protoc-gen-go
            go get -u google.golang.org/grpc


        3.3 protocol buffer with gRPC compile:
            protoc -I=$SRC_DIR --go_out=$DST_DIR $SRC_DIR/filename.proto                (without gRPC)
            protoc -I=$SRC_DIR --go_out=plugins=gprc:$DST_DIR $SRC_DIR/filename.proto   (with gRPC)

            (where SRC_DIR means the place where .proto file located)
            (where DST_DIR means the place where the output file will be generated)


            (example)
            vmware.005-antd [1001]{.../gobgp/api}-> protoc -I=. --go_out=plugins=grpc:. ./gobgp.proto 
            ==> Then, gobgp.pb.go will be generated

            vmware.005-antd [1003]{.../gobgp/api}-> protoc --version
            libprotoc 3.6.1 


        3.4 protoc v3.11 install (for gobgp-v2.0)
            go mod download
            go install github.com/golang/protobuf/protoc-gen-go

            GOBGP="${PWD}" --> repository root, that is, gobgp's installation directory
            protoc -I "${GOBGP}"/api --go_out=plugins=grpc:${GOBGP}/api "${GOBGP}"/api/*.proto

            <example>
            protoc -I./api -I /usr/local/include/  --go_out=plugins=grpc:./api ./api/*.proto  
            (where in gobgp root, and protocol buffer include files are in /usr/local/include/google/protobuf)




Debugging Script
================

(1) receiving update

bgpsec1.antd [51]{.../gowork/bin}-> sudo ./gobgpd -l debug --config-file=./gobgpd.conf 
{"level":"info","msg":"gobgpd started","time":"2017-04-04T17:27:44-04:00"}
{"Topic":"Config","level":"info","msg":"Finished reading the config file","time":"2017-04-04T17:27:44-04:00"}
{"level":"info","msg":"Peer 129.6.141.8 is added","time":"2017-04-04T17:27:44-04:00"}
{"Topic":"Peer","level":"debug","msg":"failed to set md5 129.6.141.8 no such file or directory","time":"2017-04-04T17:27:44-04:00"}
{"Topic":"Peer","level":"info","msg":"Add a peer configuration for:129.6.141.8","time":"2017-04-04T17:27:44-04:00"}
{"Duration":0,"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"IdleHoldTimer expired","time":"2017-04-04T17:27:44-04:00"}
{"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"state changed","new":"BGP_FSM_ACTIVE","old":"BGP_FSM_IDLE","reason":"idle-hold-timer-expired","time":"2017-04-04T17:27:44-04:00"}



--------< start receiving update from here>----------------------------------------


{"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"state changed","new":"BGP_FSM_OPENSENT","old":"BGP_FSM_ACTIVE","reason":"new-connection","time":"2017-04-04T17:27:56-04:00"}
{"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"state changed","new":"BGP_FSM_OPENCONFIRM","old":"BGP_FSM_OPENSENT","reason":"open-msg-received","time":"2017-04-04T17:27:56-04:00"}
{"Key":"129.6.141.8","State":"BGP_FSM_OPENCONFIRM","Topic":"Peer","level":"info","msg":"Peer Up","time":"2017-04-04T17:27:56-04:00"}
{"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"state changed","new":"BGP_FSM_ESTABLISHED","old":"BGP_FSM_OPENCONFIRM","reason":"open-msg-negotiated","time":"2017-04-04T17:27:56-04:00"}

{"Key":"129.6.141.8","Topic":"Peer","attributes":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"level":"debug","msg":"received update","nl
ri":[{"prefix":"20.0.0.0/8"}],"time":"2017-04-04T17:27:57-04:00","withdrawals":[]}
{"Key":"20.0.0.0/8","Topic":"Table","level":"debug","msg":"create Destination","time":"2017-04-04T17:27:57-04:00"}
{"Key":"20.0.0.0/8","Topic":"table","level":"debug","msg":"Processing destination","time":"2017-04-04T17:27:57-04:00"}
{"Topic":"Table","level":"debug","msg":"computeKnownBestPath known pathlist: 1","time":"2017-04-04T17:27:57-04:00"}
{"Data":{"nlri":{"prefix":"20.0.0.0/8"},"attrs":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"age":1491341277,"source-id":"129.6.141.8","
neighbor-ip":"129.6.141.8","uuid":"00000000-0000-0000-0000-000000000000"},"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"From me, ignore.","time":"2017-04-04T17:27:57-04:00"}

{"Key":"129.6.141.8","Topic":"Peer","attributes":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"level":"debug","msg":"received update","nl
ri":[{"prefix":"20.0.30.0/23"}],"time":"2017-04-04T17:27:57-04:00","withdrawals":[]}
{"Key":"20.0.30.0/23","Topic":"Table","level":"debug","msg":"create Destination","time":"2017-04-04T17:27:57-04:00"}
{"Key":"20.0.30.0/23","Topic":"table","level":"debug","msg":"Processing destination","time":"2017-04-04T17:27:57-04:00"}
{"Topic":"Table","level":"debug","msg":"computeKnownBestPath known pathlist: 1","time":"2017-04-04T17:27:57-04:00"}
{"Data":{"nlri":{"prefix":"20.0.30.0/23"},"attrs":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"age":1491341277,"source-id":"129.6.141.8"
,"neighbor-ip":"129.6.141.8","uuid":"00000000-0000-0000-0000-000000000000"},"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"From me, ignore.","time":"2017-04-04T17:27:57-04:00"}

{"Key":"129.6.141.8","Topic":"Peer","attributes":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"level":"debug","msg":"received update","nl
ri":[{"prefix":"20.0.30.0/24"}],"time":"2017-04-04T17:27:57-04:00","withdrawals":[]}
{"Key":"20.0.30.0/24","Topic":"Table","level":"debug","msg":"create Destination","time":"2017-04-04T17:27:57-04:00"}
{"Key":"20.0.30.0/24","Topic":"table","level":"debug","msg":"Processing destination","time":"2017-04-04T17:27:57-04:00"}
{"Topic":"Table","level":"debug","msg":"computeKnownBestPath known pathlist: 1","time":"2017-04-04T17:27:57-04:00"}
{"Data":{"nlri":{"prefix":"20.0.30.0/24"},"attrs":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"age":1491341277,"source-id":"129.6.141.8"
,"neighbor-ip":"129.6.141.8","uuid":"00000000-0000-0000-0000-000000000000"},"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"From me, ignore.","time":"2017-04-04T17:27:57-04:00"}

{"Key":"129.6.141.8","Topic":"Peer","attributes":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"level":"debug","msg":"received update","nl
ri":[{"prefix":"20.0.30.0/25"}],"time":"2017-04-04T17:27:57-04:00","withdrawals":[]}
{"Key":"20.0.30.0/25","Topic":"Table","level":"debug","msg":"create Destination","time":"2017-04-04T17:27:57-04:00"}
{"Key":"20.0.30.0/25","Topic":"table","level":"debug","msg":"Processing destination","time":"2017-04-04T17:27:57-04:00"}
{"Topic":"Table","level":"debug","msg":"computeKnownBestPath known pathlist: 1","time":"2017-04-04T17:27:57-04:00"}
{"Data":{"nlri":{"prefix":"20.0.30.0/25"},"attrs":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"age":1491341277,"source-id":"129.6.141.8"
,"neighbor-ip":"129.6.141.8","uuid":"00000000-0000-0000-0000-000000000000"},"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"From me, ignore.","time":"2017-04-04T17:27:57-04:00"}

{"Key":"129.6.141.8","Topic":"Peer","attributes":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"level":"debug","msg":"received update","nl
ri":[{"prefix":"20.0.30.0/26"}],"time":"2017-04-04T17:27:57-04:00","withdrawals":[]}
{"Key":"20.0.30.0/26","Topic":"Table","level":"debug","msg":"create Destination","time":"2017-04-04T17:27:57-04:00"}
{"Key":"20.0.30.0/26","Topic":"table","level":"debug","msg":"Processing destination","time":"2017-04-04T17:27:57-04:00"}
{"Topic":"Table","level":"debug","msg":"computeKnownBestPath known pathlist: 1","time":"2017-04-04T17:27:57-04:00"}
{"Data":{"nlri":{"prefix":"20.0.30.0/26"},"attrs":[{"type":1,"value":0},{"type":3,"nexthop":"129.6.141.8"},{"type":4,"metric":0},{"type":2,"as_paths":[{"segment_type":2,"num":1,"asns":[61418]}]}],"age":1491341277,"source-id":"129.6.141.8"
,"neighbor-ip":"129.6.141.8","uuid":"00000000-0000-0000-0000-000000000000"},"Key":"129.6.141.8","Topic":"Peer","level":"debug","msg":"From me, ignore.","time":"2017-04-04T17:27:57-04:00"}

{"Key":"129.6.141.8","State":"BGP_FSM_ESTABLISHED","Topic":"Peer","data":{"Header":{"Marker":null,"Len":19,"Type":4},"Body":{}},"level":"debug","msg":"sent","time":"2017-04-04T17:28:26-04:00"}
{"Key":"129.6.141.8","State":"BGP_FSM_ESTABLISHED","Topic":"Peer","data":{"Header":{"Marker":null,"Len":19,"Type":4},"Body":{}},"level":"debug","msg":"sent","time":"2017-04-04T17:28:56-04:00"}





(2) time measure result

bgpsec1.antd [86]{.../gowork/bin}-> sudo -E ./gobgpd -f ./gobgpd.conf
{"level":"info","msg":"gobgpd started","time":"2017-04-05T13:41:22-04:00"}
{"level":"info","msg":"--------------------gobgpd started","time":"2017-04-05T13:41:22-04:00"}
{"Topic":"Config","level":"info","msg":"Finished reading the config file","time":"2017-04-05T13:41:22-04:00"}
{"level":"info","msg":"Peer 129.6.141.8 is added","time":"2017-04-05T13:41:22-04:00"}
{"Topic":"Peer","level":"info","msg":"Add a peer configuration for:129.6.141.8","time":"2017-04-05T13:41:22-04:00"}
{"Key":"129.6.141.8","State":"BGP_FSM_OPENCONFIRM","Topic":"Peer","level":"info","msg":"Peer Up","time":"2017-04-05T13:41:24-04:00"}

count:2  time took : 11263 us
11.263042ms







GoBGPd BGPSec Configuration
===========================

gobgpd utilize SRxCryptoAPI and BGPSecOpenSSL library only, not using Dynamic Library Loading (dlopen(), dlsym()).
So it only needs to configure a key location and flags (cflag, ldflag)


(1) for key and SKI setting

   in gobgpd.conf

     [global.config]
      key-path = "/opt/project/srx_test1/keys/"                                                                                              
     [neighbors.config] 
       bgpsec-enable = true
       SKI = "45CAD0AC44F77EFAA94602E9984305215BF47DCD"  <-- SKI for signing with private key 

(2) srxcryptoapi's library 

    in bgpsec.go
        #cgo CFLAGS: -I/opt/project/gobgp_test/tools/go_srx_test/srxcryptoapi-0.3.0.0/_inst/include/srx
        #cgo LDFLAGS: -L/opt/project/gobgp_test/tools/go_srx_test/srxcryptoapi-0.3.0.0/_inst/lib64/srx -lSRxBGPSecOpenSSL -lSRxCryptoAPI
    Or 
      export CGO_LDFLAGS="-L/path/to/the/lib -Wl,-rpath -Wl,\$ORIGIN/../lib"
      export CGO_CFLAGS="-I/path/to/include/file/of/the/lib/include"
      Run gobgpd (sudo gobgpd -f <conf> [options])











NAME: aether-roc-umbrella
LAST DEPLOYED: Thu Apr  7 12:22:53 2022
NAMESPACE: aether-roc
STATUS: deployed
REVISION: 2
USER-SUPPLIED VALUES:
aether-roc-gui-v4:
  ingress:
    enabled: false
  service:
    type: NodePort
global:
  storage:
    controller: atomix-controller.kube-system:5679
  store:
    consensus:
      clusters: 1
      enabled: true
      partitions: 1
      replicas: 1
import:
  aether-roc-gui:
    v2_1:
      enabled: false
    v3:
      enabled: false
    v4:
      enabled: true
  sdcore-adapter:
    v2_1:
      enabled: false
    v3:
      enabled: false
    v4:
      enabled: true
  sdcore-test-dummy:
    enabled: false
onos-gui:
  ingress:
    enabled: false
  service:
    type: NodePort
prometheus-acc:
  alertmanager:
    persistentVolume:
      enabled: false
  server:
    persistentVolume:
      enabled: false
prometheus-ace:
  alertmanager:
    persistentVolume:
      enabled: false
  server:
    persistentVolume:
      enabled: false
prometheus-amp:
  alertmanager:
    persistentVolume:
      enabled: false
  server:
    persistentVolume:
      enabled: false

COMPUTED VALUES:
aether-roc-api:
  affinity: {}
  corsOrigins:
  - http://localhost:4200
  fullnameOverride: aether-roc-api
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/aether-roc-api
    tag: v0.8.14
  imagePullSecrets: []
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  nameOverride: ""
  nodeSelector: {}
  openidc: {}
  replicaCount: 1
  resources: {}
  service:
    type: ClusterIP
  store: {}
  tolerations: []
aether-roc-gui:
  Nginx:
    port: 80
  aetherservices:
    aether-roc-api:
      http: 8181
      protocol: http
      streamTimeout: 3600
  affinity: {}
  fullnameOverride: aether-roc-gui
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  grafana:
    port: 80
    protocol: http
    proxyEnabled: true
    service: aether-roc-umbrella-grafana
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/aether-roc-gui
    tag: v0.7.29
  imagePullSecrets: []
  ingress:
    enabled: true
  nameOverride: ""
  nodeSelector: {}
  openidc:
    issuer: null
  ports:
    web:
      containerPort: 80
      protocol: TCP
  prometheus:
    port: 80
    protocol: http
    proxyEnabled: true
    service: aether-roc-umbrella-prometheus-acc-server
  replicaCount: 1
  resources: {}
  service:
    enabled: true
    external:
      nodePort: 31190
    name: aether-roc-gui
    type: LoadBalancer
  tolerations: []
  websocket:
    port: 80
    protocol: http
    proxyEnabled: true
    service: aether-roc-websocket
aether-roc-gui-v4:
  Nginx:
    port: 80
  aetherservices:
    aether-roc-api:
      http: 8181
      protocol: http
      streamTimeout: 3600
  affinity: {}
  fullnameOverride: aether-roc-gui-v4
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  grafana:
    port: 80
    protocol: http
    proxyEnabled: true
    service: aether-roc-umbrella-grafana
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/aether-roc-gui
    tag: v0.8.15
  imagePullSecrets: []
  ingress:
    enabled: false
  nameOverride: aether-roc-gui-v4
  nodeSelector: {}
  openidc: {}
  ports:
    web:
      containerPort: 80
      protocol: TCP
  prometheus:
    acc:
      port: 8080
      protocol: http
      proxyEnabled: true
      service: prom-label-proxy-acc
    amp:
      port: 8080
      protocol: http
      proxyEnabled: true
      service: prom-label-proxy-amp
    site:
    - name: ace1
      port: 80
      protocol: http
      service: aether-roc-umbrella-prometheus-ace-server
  replicaCount: 1
  resources: {}
  service:
    enabled: true
    external:
      nodePort: 31194
    name: aether-roc-gui
    type: NodePort
  tolerations: []
  websocket:
    port: 80
    protocol: http
    proxyEnabled: true
    service: aether-roc-websocket
aether-roc-websocket:
  affinity: {}
  fullnameOverride: aether-roc-websocket
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/aether-roc-websocket
    tag: v0.8.7
  imagePullSecrets: []
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  nameOverride: ""
  nodeSelector: {}
  openidc: {}
  port: 8120
  replicaCount: 1
  resources: {}
  service:
    type: ClusterIP
  tolerations: []
config-model-aether-3:
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
config-model-aether-4:
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
config-model-plproxy-1-0-0:
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
demo-exporter:
  annotations: {}
  fullnameOverride: demo-exporter
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/sdcore-adapter
    tag: v0.2.12
  nameOverride: ""
  replicaCount: 1
  service:
    type: ClusterIP
global:
  fullnameOverride: onos
  image:
    registry: ""
    tag: ""
  nameOverride: ""
  storage:
    controller: atomix-controller.kube-system:5679
  store:
    consensus:
      clusters: 1
      enabled: true
      image:
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: ""
        repository: atomix/atomix-raft-storage-node
        tag: ""
      name: ""
      partitions: 1
      persistence:
        storageClass: ""
        storageSize: 1Gi
      raft: {}
      replicas: 1
grafana:
  admin:
    existingSecret: ""
    passwordKey: admin-password
    userKey: admin-user
  adminUser: admin
  affinity: {}
  autoscaling:
    enabled: false
  containerSecurityContext: {}
  dashboardProviders: {}
  dashboards: {}
  dashboardsConfigMaps: {}
  datasources: {}
  deploymentStrategy:
    type: RollingUpdate
  downloadDashboards:
    env: {}
    envFromSecret: ""
    resources: {}
  downloadDashboardsImage:
    pullPolicy: IfNotPresent
    repository: curlimages/curl
    sha: ""
    tag: 7.73.0
  enableServiceLinks: true
  env: {}
  envFromSecret: ""
  envFromSecrets: []
  envRenderSecret: {}
  envValueFrom: {}
  extraConfigmapMounts: []
  extraContainerVolumes: []
  extraContainers: ""
  extraEmptyDirMounts: []
  extraExposePorts: []
  extraInitContainers: []
  extraLabels: {}
  extraSecretMounts: []
  extraVolumeMounts: []
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  grafana.ini:
    analytics:
      check_for_updates: true
    auth:
      disable_login_form: true
      oauth_auto_login: true
    auth.anonymous:
      enabled: false
      hide_version: false
    auth.generic_oauth:
      allow_sign_up: true
      allowed_domains: opennetworking.org
      api_url: http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/userinfo
      auth_url: http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/auth
      client_id: aether-roc-gui
      empty_scopes: false
      enabled: true
      name: KeyCloak
      scopes: openid profile email groups
      token_url: http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/token
    auth.jwt:
      cache_ttl: 60m
      email_claim: email
      enabled: false
      header_name: X-JWT-Assertion
      jwk_set_url: https://keycloak.opennetworking.org/auth/realms/master/protocol/openid-connect/certs
      username_claim: name
    auth.proxy:
      auto_sign_up: true
      enable_login_token: true
      enabled: false
      header_name: X-WEBAUTH-USER
      header_property: username
    grafana_net:
      url: https://grafana.net
    log:
      level: debug
      mode: console
    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    security:
      allow_embedding: true
    server:
      domain: aether-roc-gui:8183
      root_url: '%(protocol)s://%(domain)s/grafana/'
      serve_from_sub_path: true
  hostAliases: []
  image:
    pullPolicy: IfNotPresent
    repository: grafana/grafana
    sha: ""
    tag: 8.1.2
  imageRenderer:
    enabled: false
    env:
      HTTP_HOST: 0.0.0.0
    grafanaSubPath: ""
    hostAliases: []
    image:
      pullPolicy: Always
      repository: grafana/grafana-image-renderer
      sha: ""
      tag: latest
    networkPolicy:
      limitEgress: false
      limitIngress: true
    podPortName: http
    priorityClassName: ""
    replicas: 1
    resources: {}
    revisionHistoryLimit: 10
    securityContext: {}
    service:
      enabled: true
      port: 8081
      portName: http
      targetPort: 8081
    serviceAccountName: ""
  ingress:
    annotations: {}
    enabled: false
    extraPaths: []
    hosts:
    - chart-example.local
    labels: {}
    path: /
    pathType: Prefix
    tls: []
  initChownData:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      repository: busybox
      sha: ""
      tag: 1.31.1
    resources: {}
  ldap:
    config: ""
    enabled: false
    existingSecret: ""
  livenessProbe:
    failureThreshold: 10
    httpGet:
      path: /api/health
      port: 3000
    initialDelaySeconds: 60
    timeoutSeconds: 30
  namespaceOverride: ""
  nodeSelector: {}
  notifiers: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: false
    finalizers:
    - kubernetes.io/pvc-protection
    inMemory:
      enabled: false
    size: 10Gi
    type: pvc
  plugins: []
  podDisruptionBudget: {}
  podPortName: grafana
  rbac:
    create: true
    extraClusterRoleRules: []
    extraRoleRules: []
    namespaced: false
    pspEnabled: true
    pspUseAppArmor: true
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3000
  replicas: 1
  resources: {}
  revisionHistoryLimit: 10
  securityContext:
    fsGroup: 472
    runAsGroup: 472
    runAsUser: 472
  service:
    annotations: {}
    enabled: true
    labels: {}
    port: 80
    portName: service
    targetPort: 3000
    type: ClusterIP
  serviceAccount:
    autoMount: true
    create: true
  serviceMonitor:
    enabled: false
    interval: 1m
    labels: {}
    path: /metrics
    relabelings: []
    scheme: http
    scrapeTimeout: 30s
    tlsConfig: {}
  sidecar:
    dashboards:
      SCProvider: true
      defaultFolderName: null
      enabled: true
      folder: /tmp/dashboards
      folderAnnotation: null
      label: grafana_dashboard
      labelValue: aether-roc-gui
      provider:
        allowUiUpdates: false
        disableDelete: false
        folder: ""
        foldersFromFilesStructure: false
        name: sidecarProvider
        orgid: 1
        type: file
      resource: both
      searchNamespace: null
    datasources:
      enabled: true
      label: grafana_datasource
      labelValue: aether-roc-gui
      resource: both
      searchNamespace: null
    enableUniqueFilenames: false
    image:
      repository: quay.io/kiwigrid/k8s-sidecar
      sha: ""
      tag: 1.12.3
    imagePullPolicy: IfNotPresent
    notifiers:
      enabled: false
      label: grafana_notifier
      resource: both
    resources: {}
  smtp:
    existingSecret: ""
    passwordKey: password
    userKey: user
  source:
  - name: acc
    port: 80
    protocol: http
    service: aether-roc-umbrella-prometheus-acc-server
  - name: amp
    port: 80
    protocol: http
    service: aether-roc-umbrella-prometheus-amp-server
  - name: acme-chicago
    port: 80
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
  - name: starbucks-newyork
    port: 80
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
  - name: starbucks-seattle
    port: 80
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
  testFramework:
    enabled: true
    image: bats/bats
    imagePullPolicy: IfNotPresent
    securityContext: {}
    tag: v1.1.0
  tolerations: []
import:
  aether-roc-api:
    enabled: true
  aether-roc-gui:
    v2_1:
      enabled: false
    v3:
      enabled: false
    v4:
      enabled: true
  aether-roc-websocket:
    enabled: true
  demo-exporter:
    enabled: true
  grafana:
    enabled: true
  onos-cli:
    enabled: true
  onos-config:
    enabled: true
  onos-gui:
    enabled: false
  onos-topo:
    enabled: true
  prom-label-proxy:
    acc:
      enabled: true
    amp:
      enabled: true
  prometheus:
    acc:
      enabled: true
    ace:
      enabled: true
    amp:
      enabled: true
  sdcore-adapter:
    v2_1:
      enabled: false
    v3:
      enabled: false
    v4:
      enabled: true
  sdcore-test-dummy:
    enabled: false
  subscriber-proxy:
    enabled: true
onos-cli:
  affinity: {}
  fullnameOverride: onos-cli
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: onosproject/onos-cli
    tag: v0.8.15
  imagePullSecrets: []
  nameOverride: ""
  nodeSelector: {}
  replicaCount: 1
  resources: {}
  store:
    controller: atomix-controller.kube-system.svc.cluster.local:5679
    raftgroup: onos-cli
  tolerations: []
onos-config:
  affinity: {}
  config: {}
  debug: false
  devices: []
  fullnameOverride: onos-config
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    openpolicyagent:
      enabled: false
      image:
        registry: ""
        tag: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: onosproject/onos-config
    tag: v0.10.7
  imagePullSecrets: []
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  models:
    aether:
      v3:
        enabled: true
      v4:
        enabled: true
    plproxy:
      v1:
        enabled: true
  nameOverride: ""
  nodeSelector: {}
  openidc:
    admingroups:
    - AetherROCAdmin
    - EnterpriseAdmin
  openpolicyagent:
    enabled: true
    image:
      registry: ""
      repository: openpolicyagent/opa
      tag: 0.29.4
    regoConfigMap: aether-roc-umbrella-opa-rbac
  plugin:
    cache:
      enabled: false
      storage:
        class: standard
        size: 1Gi
    compiler:
      target: ""
      version: v1.0.1
  replicaCount: 1
  resources: {}
  service:
    type: ClusterIP
  store:
    consensus:
      clusters: 1
      enabled: false
      image:
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: ""
        repository: atomix/atomix-raft-storage-node
        tag: ""
      name: ""
      partitions: 1
      persistence:
        storageClass: ""
        storageSize: 1Gi
      raft: {}
      replicas: 1
  tolerations: []
onos-gui:
  ingress:
    enabled: false
  service:
    type: NodePort
onos-topo:
  affinity: {}
  debug: false
  fullnameOverride: onos-topo
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: onosproject/onos-topo
    tag: v0.8.13
  imagePullSecrets: []
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  nameOverride: ""
  nodeSelector: {}
  openidc: {}
  replicaCount: 1
  resources: {}
  service:
    type: ClusterIP
  store:
    consensus:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: ""
        repository: atomix/atomix-raft-storage-node
        tag: ""
      name: ""
      partitions: 1
      persistence:
        storageClass: ""
        storageSize: 1Gi
      raft: {}
      replicas: 1
  tolerations: []
prom-label-proxy-acc:
  annotations: {}
  config:
    admingroup: AetherROCAdmin
    gnmi:
      port: 5150
    http:
      port: 8080
    label: ent
    model:
      version: ""
    onos_config_url: onos-config:5150
    openidc:
      issuer: ""
    plproxy:
      target: plproxy-service-v1
    upstream: http://aether-roc-umbrella-prometheus-acc-server
  fullnameOverride: prom-label-proxy-acc
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/prom-label-proxy
    tag: v0.3.4
  nameOverride: prom-label-proxy-acc
  prometheusEnabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 0.5
      memory: 128Mi
  service:
    gnmi:
      port: 5150
    http:
      port: 8080
    type: ClusterIP
prom-label-proxy-amp:
  annotations: {}
  config:
    admingroup: AetherROCAdmin
    gnmi:
      port: 5150
    http:
      port: 8080
    label: ent
    model:
      version: ""
    onos_config_url: onos-config:5150
    openidc:
      issuer: ""
    plproxy:
      target: plproxy-service-v1
    upstream: http://aether-roc-umbrella-prometheus-amp-server
  fullnameOverride: prom-label-proxy-amp
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/prom-label-proxy
    tag: v0.3.4
  nameOverride: prom-label-proxy-amp
  prometheusEnabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 0.5
      memory: 128Mi
  service:
    gnmi:
      port: 5150
    http:
      port: 8080
    type: ClusterIP
prometheus-acc:
  alertRelabelConfigs: null
  alertmanager:
    affinity: {}
    baseURL: http://localhost:9093
    configFileName: alertmanager.yml
    configFromSecret: ""
    configMapOverrideName: alertmanager
    deploymentAnnotations: {}
    dnsConfig: {}
    emptyDir:
      sizeLimit: ""
    enabled: true
    extraArgs: {}
    extraEnv: {}
    extraInitContainers: []
    extraSecretMounts: []
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/alertmanager
      tag: v0.21.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: alertmanager
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      type: ClusterIP
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        enableMeshPeer: false
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    tolerations: []
    useClusterRole: true
    useExistingRole: false
    webhook_url: http://aether-roc-websocket/webhook
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
      - name: default-receiver
      route:
        group_interval: 5m
        group_wait: 10s
        receiver: default-receiver
        repeat_interval: 3h
  configmapReload:
    alertmanager:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
    prometheus:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
  extraScrapeConfigs: null
  forceNamespace: null
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  imagePullSecrets: null
  kubeStateMetrics:
    enabled: false
  networkPolicy:
    enabled: false
  nodeExporter:
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    extraInitContainers: []
    hostNetwork: true
    hostPID: true
    hostRootfs: true
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/node-exporter
      tag: v1.1.2
    name: node-exporter
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      hostPort: 9100
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9100
      type: ClusterIP
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  podSecurityPolicy:
    enabled: false
  pushgateway:
    deploymentAnnotations: {}
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraInitContainers: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/pushgateway
      tag: v1.3.1
    ingress:
      annotations: {}
      enabled: false
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: pushgateway
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/probe: pushgateway
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9091
      type: ClusterIP
    tolerations: []
  rbac:
    create: true
  server:
    affinity: {}
    alertmanagers: []
    baseURL: ""
    configMapOverrideName: ""
    configPath: /etc/config/prometheus.yml
    deploymentAnnotations: {}
    dnsConfig: {}
    dnsPolicy: ClusterFirst
    emptyDir:
      sizeLimit: ""
    enableServiceLinks: true
    enabled: true
    env: []
    extraArgs: {}
    extraConfigmapMounts: []
    extraFlags:
    - web.enable-lifecycle
    extraHostPathMounts: []
    extraInitContainers: []
    extraSecretMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    hostAliases: []
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/prometheus
      tag: v2.26.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    livenessProbeFailureThreshold: 3
    livenessProbeInitialDelay: 30
    livenessProbePeriodSeconds: 15
    livenessProbeSuccessThreshold: 1
    livenessProbeTimeout: 10
    name: server
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    readinessProbeFailureThreshold: 3
    readinessProbeInitialDelay: 30
    readinessProbePeriodSeconds: 5
    readinessProbeSuccessThreshold: 1
    readinessProbeTimeout: 4
    remoteRead: []
    remoteWrite: []
    replicaCount: 1
    resources: {}
    retention: 15d
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      gRPC:
        enabled: false
        servicePort: 10901
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      statefulsetReplica:
        enabled: false
        replica: 0
      type: ClusterIP
    sidecarContainers: []
    sidecarTemplateValues: {}
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        gRPC:
          enabled: false
          servicePort: 10901
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    storagePath: ""
    terminationGracePeriodSeconds: 300
    tolerations: []
    verticalAutoscaler:
      enabled: false
  serverFiles:
    alerting_rules.yml:
      groups:
      - name: UeAlerts
        rules:
        - alert: UeThroughputLow
          annotations:
            description: UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput
              has been low for more than 1 minutes.
            summary: UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput low
          expr: ue_throughput < 9000
          for: 1m
          labels:
            severity: info
        - alert: UeLatencyHigh
          annotations:
            description: UE {{ $labels.id }} on VCS {{ $labels.slice }} latency has
              been high for more than 1 minutes.
            summary: UE {{ $labels.id }} on VCS {{ $labels.slice }} latency high
          expr: ue_latency > 8
          for: 1m
          labels:
            severity: info
      - name: VcsAlerts
        rules:
        - alert: VcsThroughputLow
          annotations:
            description: VCS {{ $labels.vcs_id }} throughput has been low for more
              than 1 minutes.
            summary: VCS {{ $labels.vcs_id }} throughput low
          expr: vcs_throughput < 9000
          for: 1m
          labels:
            severity: info
        - alert: VcsLatencyHigh
          annotations:
            description: VCS {{ $labels.vcs_id }} latency has been high for more than
              1 minutes.
            summary: VCS {{ $labels.vcs_id }} latency high
          expr: vcs_latency > 30
          for: 1m
          labels:
            severity: warn
        - alert: VcsJitterHigh
          annotations:
            description: VCS {{ $labels.vcs_id }} jitter has been high for more than
              1 minutes.
            summary: VCS {{ $labels.vcs_id }} jitter high
          expr: vcs_jitter > 8
          for: 1m
          labels:
            severity: page
    alerts: {}
    prometheus.yml:
      rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: demo-exporter
        scrape_interval: 2s
        static_configs:
        - targets:
          - demo-exporter:2112
    recording_rules.yml: {}
    rules: {}
  serviceAccounts:
    alertmanager:
      annotations: {}
      create: true
    nodeExporter:
      annotations: {}
      create: true
    pushgateway:
      annotations: {}
      create: true
    server:
      annotations: {}
      create: true
prometheus-ace:
  alertRelabelConfigs: null
  alertmanager:
    affinity: {}
    baseURL: http://localhost:9093
    configFileName: alertmanager.yml
    configFromSecret: ""
    configMapOverrideName: ""
    deploymentAnnotations: {}
    dnsConfig: {}
    emptyDir:
      sizeLimit: ""
    enabled: false
    extraArgs: {}
    extraEnv: {}
    extraInitContainers: []
    extraSecretMounts: []
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/alertmanager
      tag: v0.21.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: alertmanager
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      type: ClusterIP
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        enableMeshPeer: false
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    tolerations: []
    useClusterRole: true
    useExistingRole: false
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
      - name: default-receiver
      route:
        group_interval: 5m
        group_wait: 10s
        receiver: default-receiver
        repeat_interval: 3h
  configmapReload:
    alertmanager:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
    prometheus:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
  extraScrapeConfigs: null
  forceNamespace: null
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  imagePullSecrets: null
  kube-state-metrics:
    affinity: {}
    autosharding:
      enabled: false
    collectors:
    - certificatesigningrequests
    - configmaps
    - cronjobs
    - daemonsets
    - deployments
    - endpoints
    - horizontalpodautoscalers
    - ingresses
    - jobs
    - limitranges
    - mutatingwebhookconfigurations
    - namespaces
    - networkpolicies
    - nodes
    - persistentvolumeclaims
    - persistentvolumes
    - poddisruptionbudgets
    - pods
    - replicasets
    - replicationcontrollers
    - resourcequotas
    - secrets
    - services
    - statefulsets
    - storageclasses
    - validatingwebhookconfigurations
    - volumeattachments
    containerSecurityContext: {}
    customLabels: {}
    extraArgs: []
    global:
      fullnameOverride: onos
      image:
        registry: ""
        tag: ""
      nameOverride: ""
      storage:
        controller: atomix-controller.kube-system:5679
      store:
        consensus:
          clusters: 1
          enabled: true
          image:
            pullPolicy: IfNotPresent
            pullSecrets: []
            registry: ""
            repository: atomix/atomix-raft-storage-node
            tag: ""
          name: ""
          partitions: 1
          persistence:
            storageClass: ""
            storageSize: 1Gi
          raft: {}
          replicas: 1
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/kube-state-metrics/kube-state-metrics
      tag: v2.1.1
    imagePullSecrets: []
    kubeTargetVersionOverride: ""
    kubeconfig:
      enabled: false
    metricAllowlist: []
    metricDenylist: []
    metricLabelsAllowlist: []
    namespaceOverride: ""
    namespaces: ""
    nodeSelector: {}
    podAnnotations: {}
    podDisruptionBudget: {}
    podSecurityPolicy:
      additionalVolumes: []
      annotations: {}
      enabled: false
    prometheus:
      monitor:
        additionalLabels: {}
        enabled: false
        honorLabels: false
        namespace: ""
    prometheusScrape: true
    rbac:
      create: true
      useClusterRole: true
    replicas: 1
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    selfMonitor:
      enabled: false
    service:
      annotations: {}
      loadBalancerIP: ""
      nodePort: 0
      port: 8080
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: true
      imagePullSecrets: []
    tolerations: []
  kubeStateMetrics:
    enabled: true
  networkPolicy:
    enabled: false
  nodeExporter:
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    extraInitContainers: []
    hostNetwork: true
    hostPID: true
    hostRootfs: true
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/node-exporter
      tag: v1.1.2
    name: node-exporter
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      hostPort: 9100
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9100
      type: ClusterIP
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  podSecurityPolicy:
    enabled: false
  pushgateway:
    deploymentAnnotations: {}
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraInitContainers: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/pushgateway
      tag: v1.3.1
    ingress:
      annotations: {}
      enabled: false
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: pushgateway
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/probe: pushgateway
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9091
      type: ClusterIP
    tolerations: []
  rbac:
    create: true
  server:
    affinity: {}
    alertmanagers: []
    baseURL: ""
    configMapOverrideName: ""
    configPath: /etc/config/prometheus.yml
    deploymentAnnotations: {}
    dnsConfig: {}
    dnsPolicy: ClusterFirst
    emptyDir:
      sizeLimit: ""
    enableServiceLinks: true
    enabled: true
    env: []
    extraArgs: {}
    extraConfigmapMounts: []
    extraFlags:
    - web.enable-lifecycle
    extraHostPathMounts: []
    extraInitContainers: []
    extraSecretMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    hostAliases: []
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/prometheus
      tag: v2.26.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    livenessProbeFailureThreshold: 3
    livenessProbeInitialDelay: 30
    livenessProbePeriodSeconds: 15
    livenessProbeSuccessThreshold: 1
    livenessProbeTimeout: 10
    name: server
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    readinessProbeFailureThreshold: 3
    readinessProbeInitialDelay: 30
    readinessProbePeriodSeconds: 5
    readinessProbeSuccessThreshold: 1
    readinessProbeTimeout: 4
    remoteRead: []
    remoteWrite: []
    replicaCount: 1
    resources: {}
    retention: 15d
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      gRPC:
        enabled: false
        servicePort: 10901
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      statefulsetReplica:
        enabled: false
        replica: 0
      type: ClusterIP
    sidecarContainers: []
    sidecarTemplateValues: {}
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        gRPC:
          enabled: false
          servicePort: 10901
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    storagePath: ""
    terminationGracePeriodSeconds: 300
    tolerations: []
    verticalAutoscaler:
      enabled: false
  serverFiles:
    alerting_rules.yml: {}
    alerts: {}
    prometheus.yml:
      rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: demo-exporter
        scrape_interval: 2s
        static_configs:
        - targets:
          - demo-exporter:2112
      - job_name: kube-state-metrics
        scrape_interval: 2s
        static_configs:
        - targets:
          - aether-roc-umbrella-kube-state-metrics:8080
    recording_rules.yml: {}
    rules: {}
  serviceAccounts:
    alertmanager:
      annotations: {}
      create: true
    nodeExporter:
      annotations: {}
      create: true
    pushgateway:
      annotations: {}
      create: true
    server:
      annotations: {}
      create: true
prometheus-amp:
  alertRelabelConfigs: null
  alertmanager:
    affinity: {}
    baseURL: http://localhost:9093
    configFileName: alertmanager.yml
    configFromSecret: ""
    configMapOverrideName: ""
    deploymentAnnotations: {}
    dnsConfig: {}
    emptyDir:
      sizeLimit: ""
    enabled: false
    extraArgs: {}
    extraEnv: {}
    extraInitContainers: []
    extraSecretMounts: []
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/alertmanager
      tag: v0.21.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: alertmanager
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      type: ClusterIP
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        enableMeshPeer: false
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    tolerations: []
    useClusterRole: true
    useExistingRole: false
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
      - name: default-receiver
      route:
        group_interval: 5m
        group_wait: 10s
        receiver: default-receiver
        repeat_interval: 3h
  configmapReload:
    alertmanager:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
    prometheus:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
      name: configmap-reload
      resources: {}
  extraScrapeConfigs: null
  forceNamespace: null
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  imagePullSecrets: null
  kubeStateMetrics:
    enabled: false
  networkPolicy:
    enabled: false
  nodeExporter:
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    extraInitContainers: []
    hostNetwork: true
    hostPID: true
    hostRootfs: true
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/node-exporter
      tag: v1.1.2
    name: node-exporter
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      hostPort: 9100
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9100
      type: ClusterIP
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  podSecurityPolicy:
    enabled: false
  pushgateway:
    deploymentAnnotations: {}
    dnsConfig: {}
    enabled: false
    extraArgs: {}
    extraInitContainers: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/pushgateway
      tag: v1.3.1
    ingress:
      annotations: {}
      enabled: false
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    name: pushgateway
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/probe: pushgateway
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9091
      type: ClusterIP
    tolerations: []
  rbac:
    create: true
  server:
    affinity: {}
    alertmanagers: []
    baseURL: ""
    configMapOverrideName: ""
    configPath: /etc/config/prometheus.yml
    deploymentAnnotations: {}
    dnsConfig: {}
    dnsPolicy: ClusterFirst
    emptyDir:
      sizeLimit: ""
    enableServiceLinks: true
    enabled: true
    env: []
    extraArgs: {}
    extraConfigmapMounts: []
    extraFlags:
    - web.enable-lifecycle
    extraHostPathMounts: []
    extraInitContainers: []
    extraSecretMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    hostAliases: []
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/prometheus/prometheus
      tag: v2.26.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      path: /
      pathType: Prefix
      tls: []
    livenessProbeFailureThreshold: 3
    livenessProbeInitialDelay: 30
    livenessProbePeriodSeconds: 15
    livenessProbeSuccessThreshold: 1
    livenessProbeTimeout: 10
    name: server
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    readinessProbeFailureThreshold: 3
    readinessProbeInitialDelay: 30
    readinessProbePeriodSeconds: 5
    readinessProbeSuccessThreshold: 1
    readinessProbeTimeout: 4
    remoteRead: []
    remoteWrite: []
    replicaCount: 1
    resources: {}
    retention: 15d
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      gRPC:
        enabled: false
        servicePort: 10901
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      statefulsetReplica:
        enabled: false
        replica: 0
      type: ClusterIP
    sidecarContainers: []
    sidecarTemplateValues: {}
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        gRPC:
          enabled: false
          servicePort: 10901
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    storagePath: ""
    terminationGracePeriodSeconds: 300
    tolerations: []
    verticalAutoscaler:
      enabled: false
  serverFiles:
    alerting_rules.yml: {}
    alerts: {}
    prometheus.yml:
      rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: demo-exporter
        scrape_interval: 2s
        static_configs:
        - targets:
          - demo-exporter:2112
    recording_rules.yml: {}
    rules: {}
  serviceAccounts:
    alertmanager:
      annotations: {}
      create: true
    nodeExporter:
      annotations: {}
      create: true
    pushgateway:
      annotations: {}
      create: true
    server:
      annotations: {}
      create: true
sdcore-adapter:
  affinity: {}
  annotations: {}
  fullnameOverride: sdcore-adapter-v3
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/sdcore-adapter
    tag: v0.1.39
  initialConfig: ""
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  model:
    version: v3
  nameOverride: sdcore-adapter-v3
  nodeSelector: {}
  output: ""
  ports:
    diagApi: 8080
    gnmi:
      secure: 5150
    prometheus: 9851
  prometheusEnabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 0.5
      memory: 512Mi
  secure: true
  service:
    type: ClusterIP
  spgwEndpoint: ""
  tolerations: []
sdcore-adapter-v4:
  affinity: {}
  annotations: {}
  fullnameOverride: sdcore-adapter-v4
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/sdcore-adapter
    tag: v0.2.21
  initialConfig: ""
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  nameOverride: ""
  nodeSelector: {}
  output: ""
  partialUpdateEnabled: false
  ports:
    diagApi: 8080
    gnmi:
      secure: 5150
    prometheus: 9851
  prometheusEnabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 0.5
      memory: 512Mi
  secure: true
  service:
    type: ClusterIP
  spgwEndpoint: ""
  tolerations: []
sdcore-test-dummy:
  affinity: {}
  autoscaling:
    enabled: false
  cloneStaticSiteFromGit:
    enabled: false
    extraEnvVars: []
    extraVolumeMounts: []
    gitClone:
      args: null
      command: []
    gitSync:
      args: []
      command: []
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/git
      tag: 2.31.1-debian-10-r31
    interval: 60
  clusterDomain: cluster.local
  common:
    exampleValue: common-chart
    global:
      fullnameOverride: onos
      image:
        registry: ""
        tag: ""
      nameOverride: ""
      storage:
        controller: atomix-controller.kube-system:5679
      store:
        consensus:
          clusters: 1
          enabled: true
          image:
            pullPolicy: IfNotPresent
            pullSecrets: []
            registry: ""
            repository: atomix/atomix-raft-storage-node
            tag: ""
          name: ""
          partitions: 1
          persistence:
            storageClass: ""
            storageSize: 1Gi
          raft: {}
          replicas: 1
  commonAnnotations: {}
  commonLabels: {}
  containerPorts:
    http: 8080
  containerSecurityContext:
    enabled: false
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  existingServerBlockConfigmap: aether-roc-umbrella-sdcore-test-dummy
  extraDeploy: []
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  healthIngress:
    annotations: {}
    certManager: false
    enabled: false
    extraHosts: []
    extraTls: []
    hostname: example.local
    pathType: ImplementationSpecific
    secrets: []
    tls: false
  hostAliases: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.19.10-debian-10-r14
  ingress:
    annotations: {}
    apiVersion: null
    certManager: false
    enabled: false
    hostname: nginx.local
    path: /
    pathType: ImplementationSpecific
    secrets: []
    tls: false
  initContainers: null
  kubeVersion: null
  ldapDaemon:
    customLivenessProbe: {}
    customReadinessProbe: {}
    enabled: false
    existingNginxServerBlockSecret: null
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/nginx-ldap-auth-daemon
      tag: 0.20200116.0-debian-10-r327
    ldapConfig:
      baseDN: ""
      bindDN: ""
      bindPassword: ""
      filter: ""
      httpCookieName: ""
      httpRealm: ""
      uri: ""
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    nginxServerBlock: |-
      server {
      listen 0.0.0.0:{{ .Values.containerPorts.http }};

      # You can provide a special subPath or the root
      location = / {
          auth_request /auth-proxy;
      }

      location = /auth-proxy {
          internal;

          proxy_pass http://127.0.0.1:{{ .Values.ldapDaemon.port }};

          ###############################################################
          # YOU SHOULD CHANGE THE FOLLOWING TO YOUR LDAP CONFIGURATION  #
          ###############################################################

          # URL and port for connecting to the LDAP server
          # proxy_set_header X-Ldap-URL "ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT";

          # Base DN
          # proxy_set_header X-Ldap-BaseDN "dc=example,dc=org";

          # Bind DN
          # proxy_set_header X-Ldap-BindDN "cn=admin,dc=example,dc=org";

          # Bind password
          # proxy_set_header X-Ldap-BindPass "adminpassword";
      }
      }
    port: 8888
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  metrics:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/nginx-exporter
      tag: 0.9.0-debian-10-r34
    podAnnotations: {}
    resources:
      limits: {}
      requests: {}
    service:
      annotations:
        prometheus.io/port: '{{ .Values.metrics.service.port }}'
        prometheus.io/scrape: "true"
      port: 9113
    serviceMonitor:
      enabled: false
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  pdb:
    create: false
    minAvailable: 1
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: false
    fsGroup: 1001
    sysctls: {}
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  service:
    annotations: {}
    externalTrafficPolicy: Cluster
    httpsPort: 443
    nodePorts:
      http: ""
      https: ""
    port: 80
    targetPort:
      http: http
      https: https
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: false
  sidecars: null
  tolerations: {}
subscriber-proxy:
  affinity: {}
  annotations: {}
  config:
    aether_config_endpt:
      addr: onos-config
      port: 5150
    openidc:
      credentials:
        password: cGFzc3dvcmQ=
        username: YWxpY2VhQG9wZW5uZXR3b3JraW5nLm9yZw==
    port: 5000
    webui_endpt:
      addr: aether-roc-umbrella-sdcore-test-dummy
      port: 80
  fullnameOverride: subscriber-proxy
  global:
    fullnameOverride: onos
    image:
      registry: ""
      tag: ""
    nameOverride: ""
    storage:
      controller: atomix-controller.kube-system:5679
    store:
      consensus:
        clusters: 1
        enabled: true
        image:
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: ""
          repository: atomix/atomix-raft-storage-node
          tag: ""
        name: ""
        partitions: 1
        persistence:
          storageClass: ""
          storageSize: 1Gi
        raft: {}
        replicas: 1
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: onosproject/sdcore-adapter
    tag: v0.2.18
  logging:
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
  model:
    version: v3
  nameOverride: subscriber-proxy
  nodeSelector: {}
  prometheusEnabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 0.5
      memory: 512Mi
  secure: true
  service:
    type: ClusterIP
  tolerations: []

HOOKS:
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: aether-roc-umbrella-grafana-test
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
  namespace: aether-roc
spec:
  serviceAccountName: aether-roc-umbrella-grafana-test
  containers:
    - name: aether-roc-umbrella-test
      image: "bats/bats:v1.1.0"
      imagePullPolicy: "IfNotPresent"
      command: ["/opt/bats/bin/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
  volumes:
  - name: tests
    configMap:
      name: aether-roc-umbrella-grafana-test
  restartPolicy: Never
MANIFEST:
---
# Source: aether-roc-umbrella/charts/grafana/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: aether-roc-umbrella-grafana
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    # Default set from Docker, with DAC_OVERRIDE and CHOWN
      - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'csi'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test-podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: aether-roc-umbrella-grafana-test
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  allowPrivilegeEscalation: true
  privileged: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - csi
  - secret
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aether-roc-api
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aether-roc-websocket
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  name: aether-roc-umbrella-grafana-test
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/onos-config/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: onos-config
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: onos-topo
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/alertmanager/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-alertmanager
  namespace: aether-roc
  annotations:
    {}
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
  namespace: aether-roc
  annotations:
    {}
---
# Source: aether-roc-umbrella/charts/prometheus-ace/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-3.4.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: aether-roc-umbrella
  name: aether-roc-umbrella-kube-state-metrics
  namespace: aether-roc
imagePullSecrets:
  []
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
  namespace: aether-roc
  annotations:
    {}
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
  namespace: aether-roc
  annotations:
    {}
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: subscriber-proxy
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: aether-roc-api-secret
  labels:
     chart: "aether-roc-api-1.2.12"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacrt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0='
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkekNDQWw4Q0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakF3T0RJM01URXhPVFEzV2hjTk16QXdPREkxTVRFeE9UUTMKV2pCK01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVxTUNnR0ExVUVBd3doCllXVjBhR1Z5TFhKdll5MWhjR2t1YjNCbGJtNWxkSGR2Y210cGJtY3ViM0puTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMkwwRVl3eWlMT3UyTzdNUlcxSm1wa3Jxd201dWc3akd1SHp5amphZQp6WEx0dG96dXF5SVgyUGxRcGRXNHM4RGllYlJud2MvRm5rUVY2Y1NxWUltZFJ0bjY3VWNBMGdBaG5uM1VWUW1QClpISTA4MDZNN2ZUWnRvaVB1c3RxZzJJNENwUUdBNERlY2xTVUN0QU1Vc1ZGb001Q1VwazZ1KzA2czBJdEpRYUYKVk5UdFMzdU9Ma25oaHh4enJsbXp1TVJUVDcvb0UvWlZlRmF1Vll5U0xydUJLbTJJNHR0TS9OMzVhaXhFbzFBUQpiT1gveXdxREpJekFCZGVWSXNETXVqc0tGTWFIMDBSZ2FmR0VySExNcng1TWNCTkd2QlBaL1ZPV0xmdmFWZXV1CkRJM3RXMTdNL3pKRE5GRkpGU1JoR0h3SFpsdGNDVER4UWxJRWVoSld4eVNGMXdJREFRQUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDRWIzbTcydHdFSmxkSnNrSzM5NjZyVnIvNTNLVW82TFZxQnBmb1dvMEFsYWtHZXg3MwpNUDZnZDhjMnF2U0NmNkF3MC9MekFuRk02N3Q4ZTlqcHJ0ZE9NUnh5dHFTRWFSMHhrTWhPVFdFQThWb0U4SWVlCmlhRFVjN1VNZnRwOWNaYkdIVEZtbXVUTnBaNlJZcFEza3V6b096WHZvTUJ6N255NVN6dVlOSEtvSERhcEVrb0QKSlpPcFZyc0Yvbjdqb3hYUDZZd0pVN3hLUFhuS2tUWjVzMWxEZDNSVFVkWkwwQkZKZEh0MlVmRnlaTjZ0ZWxHSwpuU2F2OW10bUJ5ZzVKOU83eVJMOGg1aS9kRjduYlE4K2JsMXhQQ1BWOTFnNDEvUysza0dxb3FTWlpKUTF2TW5iCmdPd1hEb1RjWjJxUnF2Y0hDTFpGVVd0QUMxTVRJa0tUUU43WAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFl2UVJqREtJczY3WTcKc3hGYlVtYW1TdXJDYm02RHVNYTRmUEtPTnA3TmN1MjJqTzZySWhmWStWQ2wxYml6d09KNXRHZkJ6OFdlUkJYcAp4S3BnaVoxRzJmcnRSd0RTQUNHZWZkUlZDWTlrY2pUelRvenQ5Tm0yaUkrNnkycURZamdLbEFZRGdONXlWSlFLCjBBeFN4VVdnemtKU21UcTc3VHF6UWkwbEJvVlUxTzFMZTQ0dVNlR0hISE91V2JPNHhGTlB2K2dUOWxWNFZxNVYKakpJdXU0RXFiWWppMjB6ODNmbHFMRVNqVUJCczVmL0xDb01rak1BRjE1VWl3TXk2T3dvVXhvZlRSR0JwOFlTcwpjc3l2SGt4d0UwYThFOW45VTVZdCs5cFY2NjRNamUxYlhzei9Na00wVVVrVkpHRVlmQWRtVzF3Sk1QRkNVZ1I2CkVsYkhKSVhYQWdNQkFBRUNnZ0VBVHlCQ2w3Nm0vbXRYYmxnamdBbUhQREtobmpZZTFxd0FzSjI5RjdwTkk0aFAKekpPTEZxTXR2YUxYbEpPQUNPL2tQclprSXRldHQrZjNjQTdDZk5nQXVUc2ZacnpEU2VlT1hvUmxubDROSVlpbwpXQ05YUkJCZDQwdmIzVUFpTkxFSThLTzF4bFduNEdtTVdwNDF3WW9QcjNOZHR6WUZ3VklNV2lGUXhmR3BmNXhJCnRpRVBJdm9GQmYvbTlzdTBIRlkrd3lVZThVY0NKUllLR2l4M0lXaVJlT0grTzlTdmlzTHVMUytoNUdiZHY3RnoKNUtSZzFWWElEcmU1ZDhXRi9aTDZQMElycjIyeTlNYXBkVkdrV2VCSUdhcXQ1ZTBvbE9TYm4zaXBWRlpxb2dwYQpqM3JUdEdMbm1PbVZBYVplOXRvVzdFZVdmMDhLaVF0djE5aDVaaEM1VVFLQmdRRHdmRWNLWHd4VmVEN0RUelVsClUzWktESDZLbEFhdG83eExtWkl4b2hja3BsZnI4dmFxUk42Z0RvMkY5U2lHa3FxQ0ptelZqZmh4bHFMS1dtekgKWFZDZ0l6WmNucDJ4bnlWNWtNUlhBWDdzdFBaTE90QUtZckNZSHB5Mkk5eVRxSEMxM3hxTDZkUXFSdjlRSFpVUApkVzJPSU9pRlJDamZQNys5VzRnTDNXaVpmUUtCZ1FEbXVJdTBHMzdGcjZ3Q3hkK3UvSWVzbHJ3OU9hN0hiNjZTCjdGc1dqVW1JaE5GV1Y3WjJiWlpFdE5DQ0U3cVh6SUNvWmRsTlc4bndoMlBJZEpVRFllbXFzZ1l0QjJYc29aQ04KQUk2SkVqYkdPL004cmtjWjIrOUdoR3hBSjF5dnhsa0s5SW1OenZVUjJJZGkxbkM3a21XSFRpY1R1Z21HOU5WVgpjWEFRcmdIYzR3S0JnRTB0RlA5WEVYWThhS2YxTzNFSEgrY1RxMmg5cU1jQXpPVFdHL3loc0J1cTVueHFOSTdnCkd6SHllYWlMekwyalErVVF2OHlwQ3hvbzVZVmJENTNMYkp4M3NISjQxTkt6NkNyak1wOVpjNG96YVBjcm9LZzAKazhlOXl6MEl0VGtOelY0UWcweHpkZ3M3VGFSQVdoM2o2WXk3TXVQUncrd2hZVDg3cUtWbUlMTmhBb0dBUDFZMApDOHBzZjhwYzl4bm84UG1rS1Mzc0dRYW53MW9XVzRFRTlHanU0Y3BNU1Y2azJWZjJJNEJicVFuUGRIS1FjeW9hCmdGRU5XN2xmSEIxYzl1Ty9LTHZjVkNvdXdjb01pNWkyaUV4MnV1NmtOR2xIWFlMeDZiTGFvTFh0ak5kdmhFRmoKTFltOTN4dEk5MG9WQW5rSzVCMEJQem9YK1hObXlTRHQrYlk3RHE4Q2dZRUF3enVVQzFqaW5kdmtXSFoxY21xOApLUytZZ0doOE9lY2N6S0Q0eDV5YVNuRzRJWG9VWVRXaFVDUTV3M3doSml0aFJhU2xzQ2hCSWdDSWRrRk5sRCs0Ck4zYkZqMkhCWTFaSzZsekFONHEwVEh2MFNXWmJpMGxKeHVrWFZoeG9oK3VKcEZhbEIrWkdDNHN2c0RwdHFjZEcKaTRmSm9Uc09tQXphaytEOVZKbXZITlU9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: aether-roc-gui-v4-secret
  labels:
     chart: "aether-roc-gui-v4-4.0.14"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  README.md: 'PCEtLQpTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIxIE9wZW4gTmV0d29ya2luZyBGb3VuZGF0aW9uCgpTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTGljZW5zZVJlZi1PTkYtTWVtYmVyLU9ubHktMS4wCi0tPgoKVGhpcyBmb2xkZXIgY29udGFpbnMgc2VsZi1zaWduZWQgY2VydGlmaWNhdGVzIGZvciB1c2UgaW4gdGVzdGluZy4gX0RPIE5PVCBVU0UgVEhFU0UKQ0VSVElGSUNBVEVTIElOIFBST0RVQ1RJT04hXwoKVGhlIGNlcnRpZmljYXRlcyB3ZXJlIGdlbmVyYXRlZCB3aXRoIHRoZQpodHRwczovL2dpdGh1Yi5jb20vb25vc3Byb2plY3Qvc2ltdWxhdG9ycy9ibG9iL21hc3Rlci9wa2cvY2VydHMvZ2VuZXJhdGVfY2VydHMuc2ggCnNjcmlwdCBhcwpgYGBiYXNoCmdlbmVyYXRlLWNlcnRzLnNoIG9ub3MtY29uZmlnLm9wZW5uZXR3b3JraW5nLm9yZwpgYGAKCkluIHRoaXMgZm9sZGVyIHRoZXkgKiptdXN0KiogYmUgKHJlKW5hbWVkCiogdGxzLmNhY3J0CiogdGxzLmNydAoqIHRscy5rZXkKClVzZQpgYGBiYXNoCm9wZW5zc2wgeDUwOSAtaW4gZGVwbG95bWVudHMvaGVsbS9vbm9zLWNvbmZpZy9maWxlcy9jZXJ0cy90bHMuY3J0IC10ZXh0IC1ub291dApgYGAKdG8gdmVyaWZ5IHRoZSBjb250ZW50cyAoZXNwZWNpYWxseSB0aGUgc3ViamVjdCkuCgpUaGVyZSBpcyBhbm90aGVyIENlcnQgZm9yIG9ub3MtY29uZmlnIGluIHRlc3QvY2VydHMgYnV0IHRoZXNlIHdlcmUgY3JlYXRlZCB3aXRoOgpgYGAKZ2VuZXJhdGUtY2VydHMuc2ggb25vcy1jb25maWcKYGBgCmFuZCBhcmUgbGVmdCBuYW1lZCBvbmYuY2FjcnQsIG9ub3MtY29uZmlnLmtleSBhbmQgb25vcy1jb25maWcuY3J0'
  
  aether-roc-gui.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVNekNDQXh1Z0F3SUJBZ0lVU3NFYk94Y2VqV1h4dVpsR1lPUVg2SFp1eDFnd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2NqRUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWtOQk1SSXdFQVlEVlFRSERBbE5aVzVzYjFCaApjbXN4RERBS0JnTlZCQW9NQTA5T1JqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4SGpBY0JnTlZCQU1NCkZXTmhMbTl3Wlc1dVpYUjNiM0pyYVc1bkxtOXlaekFlRncweU1EQTVNakV4TURJd016WmFGdzB6TURBNU1Ua3gKTURJd016WmFNR3N4Q3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdQpiRzlRWVhKck1Rd3dDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SY3dGUVlEClZRUUREQTVoWlhSb1pYSXRjbTlqTFdkMWFUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFNV0ZCalBkMzdLZGozSGFtRE9pYUZSMGtIejVkUkFyeEVmbHVibCtFNjVIZ3hHRWg2enEyV1VaSHRSTwpQTDhRL3FvUTUySUZBREt6bEdGQUhKSERVZXNFNkRSSXNFeXEvYkVmd0l1UXRiQml4WVJMNGg4QnZjQ1pCZjk3CktTSFZpZXpaQk1FQXlGZlZyYnJkUW5VZXVJS3V0OGRlSjU1OVdZdDhqL2JOVkhOTHVhK09KUEhsS3B0bWRwR1kKYXVOc0tGRjlHNEJuYXk3czlCNGVZUUtmT254T0xkcGNzaEZYalphWmRGZXNwNU1MSEhVUkhnbnV2VUZZczl1WApwZWdNWElnWnZWOE1jNDQzYkYyUWZSYzF0NHY3QmozaE5Id3VLbTFVODZ4TUhzNXNJdmwzcnVQdXBoaGU0SkZVCk9DSk9tVkorZUdLbTRya2lxc0FzVjJEOWlpRUNBd0VBQWFPQnh6Q0J4RENCamdZRFZSMGpCSUdHTUlHRG9YYWsKZERCeU1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVlTUJ3R0ExVUVBd3dWClkyRXViM0JsYm01bGRIZHZjbXRwYm1jdWIzSm5nZ2tBM3ZmWDBqZmFzVWt3Q1FZRFZSMFRCQUl3QURBTEJnTlYKSFE4RUJBTUNCUEF3R1FZRFZSMFJCQkl3RUlJT1lXVjBhR1Z5TFhKdll5MW5kV2t3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJWXFlYjFzNXZHZHRKRlZzVWZseFlPS0h1OUlrajJ0US96aytRK1ZDY2h4bThORm83c1dRVndCCjk0dmNjcDlMbzVmdy8zellVYTRRYy9UV2FLQzhLUXJWcHJ1WThTU2t3cWh0QWJqSFA0K1N1bHhZbWg4QUtsRVoKdk01SzdkL2YwT3RuM3Rpd01paEtmM1lTbE1xRWREODZBK3Q3OXlxTHVZU0l6NzY1ZUxmSG1weXhMZHJRQ3dFegpZelFBVzY2Vk9ybHgvSjBDdjdTMDdvZjAvdGpFTnVTaVgwVlRwNVYrVGhJOHF0djBIb3crUzFKYWgvWXRYZjdCCkF6NWVIY0EvZndRNHNKdUNIZytyUEVuc1J3TDNDVmJqWU8yY1Z3UmsrYS9SZ0w1NDl1cEJELzJlMS9LKzhuK2gKS044S2dhNUhLcFd0YmxFR1dXVnZOZGMyRm02dkpTMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  aether-roc-gui.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREZoUVl6M2QreW5ZOXgKMnBnem9taFVkSkI4K1hVUUs4Ukg1Ym01ZmhPdVI0TVJoSWVzNnRsbEdSN1VUankvRVA2cUVPZGlCUUF5czVSaApRQnlSdzFIckJPZzBTTEJNcXYyeEg4Q0xrTFd3WXNXRVMrSWZBYjNBbVFYL2V5a2gxWW5zMlFUQkFNaFgxYTI2CjNVSjFIcmlDcnJmSFhpZWVmVm1MZkkvMnpWUnpTN212amlUeDVTcWJabmFSbUdyamJDaFJmUnVBWjJzdTdQUWUKSG1FQ256cDhUaTNhWExJUlY0MldtWFJYcktlVEN4eDFFUjRKN3IxQldMUGJsNlhvREZ5SUdiMWZESE9PTjJ4ZAprSDBYTmJlTCt3WTk0VFI4TGlwdFZQT3NUQjdPYkNMNWQ2N2o3cVlZWHVDUlZEZ2lUcGxTZm5oaXB1SzVJcXJBCkxGZGcvWW9oQWdNQkFBRUNnZ0VCQUx5eEtBdkVtajk0WmVET2d6aFFubnFRSUxoRFY2SHJMY2ZCbm51bUJnY28KS2Y1Q0xacnpnRnNrZEY4OW5xcXBBYUJXSmJWdU1aSStIRElMblQ5aTZJOHNVT2doeU1wMVQ0WTJYeXIxUTUwTgp2c056K3NERVdSSDFIZFhEUXJnZjEzTjhueDRDTVdJM3I1QWtiNmlUZ0pEWGVKbnRTTXdQMDh0OVk4clN2U3FtCkxvWnF2SkJTTk9JMGVVbEpSalJBNzJKTUdZbmR3M0xsU0tkNUtkWTFCVHdRN0pyV3RqcFIybjRXWlBTRTlScXEKVnd0YlJhSW5GZDVpTXZSRDE1S2Yra3A4NlpESEdQRDhYcitpSkl6cmFhZ1ZlbFhpRTZZQURucEFyTmw5ZnNjbQo3dlMydzAvUStieG8rTks1d083R1c4Q1hoTjFlUHBmQzFRNTZoejVqU2tFQ2dZRUE3cXZBQUNaWDFzTWtuaHEyCkJXZlc3NCtkTmFlcksrRFJ1SDJ6eWcrMDEwekY1ZFc4KzZKaHd3U2lhRHdwY0tXRkZlbUJPdkVTU21zZ0w0V1UKNnExRVhvKzBWclBscWJIMG5IckxrZ3NrbHQrS0gxeUlhYWFFNUUydEsvZ2VwMXFkaTlHSVhzY0hTdkdJZkR3NAo1MGNkdFRuQkIrLzUyeUJkYytoQnU1M2ZGRWNDZ1lFQTA5eGgvTWJIL1pscHRPSXE0eHJiekZhWmRGQTdzOEZZCmpXc25sMWdRYXJSeVZFVDhpeDZGczd6Zy9NRDkrVjNLcGJJbThkUHJNNHpxQVFGMDJKUDh2RTdyMUNGdStjaEoKQnovK1J1ZWdZSU1ZNWVyNmkxZGhPWlh4akZMWjgvK29iSVNkb2QxY1N4Ri9ucVJTeDVCaCt3Z2I4LzVYVjVXZgp6aWxONWFkV0tsY0NnWUJmTEpJVi9UUk42ZWR5UE1pVkEwR01xa0pRb1JuN0YxM0tLaVpGejFtWCtYOTVGWENWCkQ3M1lYTUsrdWk3MFFxejlmZTRRcVExWUs3dmI5M0xZMmx0SE1oc0I4QjhIT25XRzZOakExanl6QlZVNUNGZEYKZWlmSU9zbHhuVEhzSHBCd3J3K29hOG1Xc3had0pEdTB6b0VrUVhHZVRxM2VHZHZxV3BYTDBUcWlCUUtCZ0RUWgpHS2hSZmJuSTl4RmtDWWExUUhic2MwTU1jSmdhZHRod0RtUTJWNElHbVM1a053c05CaFViM0pPd0lLcC90dmsyClEzaTNnRWhQc2wrbDJWdmRMb0phdllFaEJlblJDRWFDdEE5RDRFR3k4aGNJVW85SHNMMElwa1IydGwrak9vUTMKWUlyc0NRWEF5N0RyRktzclhRV2R0RHRkQ3JTU1lsYXUvdnQyam92cEFvR0FYYzhhMkE0N2JvSUZyQzNSbExEeApvUHJBRlBQdDY5VGFad3VvWXJpRjAyL2E5NjVaaGdiMmZSVVVqank1dlRJb2xXQ0tRbmZwYzgyMHVtRVZJcWZiCmM0NmphY1ZreHFqUXZvVDZuVVVuVWpEc1pGWXEvTTZtald0QnpWbUtUaXRjMUIxQVowaExvVWQ5cG81aXVFV0QKYmo3SlVhcUhqWHpIY3J5UFhUaWpxb3M9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
  tls.cacrt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0='
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjRENDQWxnQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFRNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakF3TlRBMU1EYzBNakV6V2hjTk16QXdOVEF6TURjME1qRXoKV2pCM01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVqTUNFR0ExVUVBd3dhClkyeHBaVzUwTVM1dmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFESzJhbWxoU0dlY1dCSTlqbGozT3ZDb0dNQWxIWGZmd0hBc0hza0UvYkZreVJLZVlzMApNSGxjTkJYU2pnQUR0SHQ3RnBHSjduYlpzTWR1MFhrTk9sTi9YMGk4RktVN1g5RG5PSGJIaE9pdGc0NjlKODlECjh0SG5OMndyVHlHeFkyS205NVB4ZUNRNE5IN3o0TVNTYmRGZkZYbnc5aytxcitlMW93c3dsb0pzWW8rZXlQN2gKank3UXZSMnNBWDhDQzZEMFphVnVxTEdLNWtISlV5TXhpZnFNYTRENHdEOHpmemFoY1RlMlFBZU94UXdoc2FLMgpwWi8wOWJJL0tDajh2eGJ4RzJua2N3VWdqbDBMZ2gwZzFCRk5TdTM5djFEanNpRldySXhuajNDTDJOY3UwcHMwCitkUFNkcHg5MEltdmpMNEJSUHo4VjRpTFBsam1CbVFmVTJIcEFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFERVJQVjV5a2NqVWFza2dQSGswODFBMExtc0tLTDlBZHFMZlJFcmVSSUpnUGcxVCtwcEU3UEFmK2k5bQpXNmxvanorcUNPa2pkOWQ3Q2Q3d1dSdnJuZFJzNnh0M0hvSXUzWitrbmRzL1NDNmVtei9SZitaWXNPRE5DM2IzCnp2N2FnRWV1RDJNL0xxOHBMZmg5TXNDeEZtYno0SnVpSjNra1Q4emhpUkFiVVc2TGtZRnpkU2VxNnVVcmhaUHYKQzZWQ1p0SFJRaUVIRTg0V3dreGN6N3NoeWtuUHd3RFp4TG9OZUdqUVBydUVTc1k5RHl0OTZkejh5QlE2dWtEMQpoUHBuTURiK3Nrc29YMFpPb0VZcE5kcUR2WldhMjVuNjRMQkJMdXhiQ3VlbFNWVXBzRWRqUnZoMTB6bkZZMzZ4Cm9wL1YxKzlXb3Q5ek1vaHc2YnU1QWo5SzZzOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREsyYW1saFNHZWNXQkkKOWpsajNPdkNvR01BbEhYZmZ3SEFzSHNrRS9iRmt5UktlWXMwTUhsY05CWFNqZ0FEdEh0N0ZwR0o3bmJac01kdQowWGtOT2xOL1gwaThGS1U3WDlEbk9IYkhoT2l0ZzQ2OUo4OUQ4dEhuTjJ3clR5R3hZMkttOTVQeGVDUTROSDd6CjRNU1NiZEZmRlhudzlrK3FyK2Uxb3dzd2xvSnNZbytleVA3aGp5N1F2UjJzQVg4Q0M2RDBaYVZ1cUxHSzVrSEoKVXlNeGlmcU1hNEQ0d0Q4emZ6YWhjVGUyUUFlT3hRd2hzYUsycFovMDliSS9LQ2o4dnhieEcybmtjd1VnamwwTApnaDBnMUJGTlN1Mzl2MURqc2lGV3JJeG5qM0NMMk5jdTBwczArZFBTZHB4OTBJbXZqTDRCUlB6OFY0aUxQbGptCkJtUWZVMkhwQWdNQkFBRUNnZ0VBVkVkOUNhMDNtNW5sZEVzQTZ6SFZybVp1MjhYUzk0blFVNXUvZmV6aGdaTXgKNTlONTk3UVFLRFBud1RTSVl3R3dzQ0pmVTV5Rk9zc05BVWo4NzNjRlRBMXRyZDh5QzJveTVHNThRMGRBV1I4bwp4Z1J0UkFEMkh3ZlM1R2ViU3hWTTNxeE1obTN4Tm56eEppaUQ0NGJIRDZkZm83TGl4THNUSFU5aGpjMXE0TmFSCkJmSkNsMDFmMUVnRXRQQjRMN2wzRTFpdmd5Mk9ROTFnU0pzSW5lQTRSRkxuNU5iTWFjN1pXT1RNR1RoakdGQXcKcVIzOFVhN1R6UVhMK3FOekhVMEpVT0JnNHNtazV0elB4RDhpazJwOFZUYzhXclBFQlgxMjlmbitKdW1oS29JQwo0THlzWm9hekxoS2VtNTZMQlZTVy9UTnliWFB5OXorbkJoYkZibm9MQVFLQmdRRHBQZnZjODNmL2Y1SXUzUGFHCjhCc0lvT29uYXNxR3NGb0RCN1hOL0RaZGprOGQ5TUtGKzJ0Szh0UnR3ZlorY1dKTDdtOTRaQ3VkdFU3MnVod04KMHgxRS9wK3FBVUJ2RTNXUjNNeFFRYjZSNWt5ek1VbHdUandyTTQ5a011UWRVN0NhTDJhYnFSdnZla2tFNkwxMwo5S2VzdkUwVFFTVHgrYmVNYnpVVWREeUNDUUtCZ1FEZXBJbkYvcG13Yk0wRTJ6S1lueTBSbzNjYVc2SG9VRW9KClpHY1ovTkxkVGdpUTNHSnNWZGRjME00amdYTW5kak9KRlpjRERlRlBnUkFnUVZuSkhiRERXTnlnbU5EQkthdmoKTE5jVElCMkFPNE9iV0lIMkM2eDM4VjZsKzYyTmM5UVBsSTUydGlla1dWTzF0QWh5M0ZKWFJIQVVoUDQzYmkzNgpWbkNnMG1KWTRRS0JnRnVTVEVucEJKbTQraW1QOHZIelhvbTZzM09hUjcwdGk0bFpBNVhGaVlxZGpvNVNRL1RhClNydDRMdEtRcmpmaVNCZExtMVFHNytEUkNCbHg1QVhCZHVKWm5WSGZmKzZjRXpLYkgxUDdHOWlvTkVDOS92a3EKbmhEUUEySHhZUUhxazVGVlB0R3FTUjl5UVN5K08zVFhCdVdZWUNKSkZ6b3hNbERlY0ZhQmRDZ1JBb0dCQUlSYwpxWlBPUXl5QjRua0tuOC9nZ2ZqRWgrQmhyYVhoWmNLanNDL2hBTE9VMnI3VVpxY2xlWDJ5blhxNlVPMmE5aFIvCmcySExkTEhCZHdiV0V6emZxK0RYQ1lOb2xtTGdGVkpmckJXd3VCa3VTSldvVHNzcU1ZUzFPS0hST0dLcUE5Nm4KWVBMdVpDN3U5RGRJS3VXdVdqMkxjRjZpbWtmMTl0dW5YQm9nT1Z2QkFvR0JBSnZJWVVHYmEzV1UrL1VnczN5Wgp1Yk5CQzUybVMya0xyT1RaZnpRT1A2c0wzT0M1ckZnbTdBNGUvQ01DV3BobnM5OGZ0QjBjMVJhWkJDY3dza1VFCm1DeFV4dml2UDdvVU5mMENNWmQ2Q1cyTTBMRVdNVnJJRkoxbzBCdE5wVVZaLytuaXBKYmxSQTFCL0pMc2dOdm4KMTFtcElXUjRLSGQ4QTV3amtrZmIyZC9lCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/secret.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: aether-roc-websocket-secret
  labels:
     chart: "aether-roc-websocket-1.0.1"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacrt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0='
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmakNDQW1ZQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV4TURFeE1URTBORE14V2hjTk16RXhNREE1TVRFME5ETXgKV2pDQmhERUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWtOQk1SSXdFQVlEVlFRSERBbE5aVzVzYjFCaApjbXN4RERBS0JnTlZCQW9NQTA5T1JqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4TURBdUJnTlZCQU1NCkoyRmxkR2hsY2kxeWIyTXRkMlZpYzI5amEyVjBMbTl3Wlc1dVpYUjNiM0pyYVc1bkxtOXlaekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2xkR1pURVFIUFdqY2hZNGhPWHVlQTl5SjFzVTNqSwozK2ovUC9EQjRpZ1lXWUJjSW1uVUdPWExvNW5QL3JaUkNqN3FqN1cyVUpnenhFQUgzZzVRMSt1cHNQSUJ5Z0ExCndDZ214dnhtSTdLSHdROHlsNVJKU1JvM09tUng3ZE9iZXVEM0lwcjFYNFNNU3BsUFBJSDArOXVoMjhGTVV6OTgKMlp3cVUvT2pQQThlbVBYTnF2UDA2WENLbWkvZnM0a2c5Y0lBQnhyNDIrOGhPbWV2eU5qem9sOUR6MWFDNlR3RApFWWhSbmcyZXhsM241OVhEenFtb2ppU2s5S1h6R2xxek56dURuK1ZBaFltTDhCL3ZmKzJiZDFINW8vRXlML1U0Ckk3S0tJakpmeE4xYXk3VHJkWjdTVW1LVkJPK2pIVk5OWWtucVBZdmNuZVRqVmh1b1EwRW5xaGtDQXdFQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBRlZjMG5WOU40R3JobWVjdThiNHMxcGRRRFZlZGFRb04yb1NFMVJWcApUNnNZWjdSekdTMnBMMnVtMmRsNjBuc2sxa0ozMXB0V3FwS0kxM0djY0owbENCRExSWVJvcWYxSHloemFaNS9vCkh0eDFHVFd1d3VQbGpnYzZsQVRKeHExU3MzUFZ2NFV6Zm9jTy9KZW9ZMmlCc0JXYi9UYVBVN08rNDFiWm92Q3MKVXg3d2NmMnFydUdlYUNYbkhTQkRzNDcxOWs3N1lLRURZSGxGRDlWS3BEV1h2NGtTWHNVWndxR2FqVzcyYkt2bAp3VHdhaEFhcXh2SlZVUlZpeWh5WFhFeHhRaUczQUVVUUxuaHZpVWZ6bFJVTGo1OE1UOXlpNTZhT09VRlN0czZrCnUybHpnR3RsYmE2dlNhVzdnT2pSN0MvYjBuUmkrVlpnSXVoaUpUUkppaGxiSFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ3BYUm1VeEVCejFvM0kKV09JVGw3bmdQY2lkYkZONHl0L28vei93d2VJb0dGbUFYQ0pwMUJqbHk2T1p6LzYyVVFvKzZvKzF0bENZTThSQQpCOTRPVU5mcnFiRHlBY29BTmNBb0pzYjhaaU95aDhFUE1wZVVTVWthTnpwa2NlM1RtM3JnOXlLYTlWK0VqRXFaClR6eUI5UHZib2R2QlRGTS9mTm1jS2xQem96d1BIcGoxemFyejlPbHdpcG92MzdPSklQWENBQWNhK052dklUcG4KcjhqWTg2SmZRODlXZ3VrOEF4R0lVWjRObnNaZDUrZlZ3ODZwcUk0a3BQU2w4eHBhc3pjN2c1L2xRSVdKaS9BZgo3My90bTNkUithUHhNaS8xT0NPeWlpSXlYOFRkV3N1MDYzV2UwbEppbFFUdm94MVRUV0pKNmoyTDNKM2s0MVliCnFFTkJKNm9aQWdNQkFBRUNnZ0VBRUJSRXIza0tYWFVMTlBBclZvemJHczBDMU45SjlYZmRWak9Wa0hmM3pyS3gKSEp5aXI4VnhMNi9yc2xpcTZBZzluc2VLS1VoTDBvZG5wR1NhMG1VZWVzTTdoMTVnSFREOU0xS3JKWjlVMkVoSApMZmd4cCtSbFNsWGY5MVZSclB0ZjZTZk5ZMFRVY3JNWENnTVp6WVRDdkpGYldiaXpWcDIxMHp1NWlMSUFxN2FtClc2ZHR1VWo4NVpUSzJNQ3VndUJiNEs5dW10amc3S2dFN1FqRXZtK2J0K1RLTEswNk8zQThGdTBKL0oweUpqaG4KTWlqS3pBK3hoTXA5RDVMMDhZMVdHNHZPc3NOMnY5TXdCQVlLWjFCM1YzU01MaFk4c05zNGVuNm1Nb1MyQnd4dQpOUk1ucUVma3RJVVVidUpla044amMySUFKaWlsUnNSZGRFWC9JV2FPQVFLQmdRRGJXakRNTTFtOFc1a1VDYlFXCnhzSjdNN21aNmRQbVJPZmRXQ0NwejN1dE9hMEdSQVU1cllMUkhqTDYwN2QxQy9VdkFSdUV2SlBkcjZDaVVqbUkKdnFXZTc4Y0lMaXFQTzVvZjRNck1pOW9CMFhrWExGMG5qN2tzK2xLakZXYlNLRWV5QmdxM2hCOHJvc0E2NlAycwpIM1hQYjFnUU5vaVROL0dRRGZHZWxJQTJPUUtCZ1FERnFONjZCYk1JUm41M2hUdXdYTFR1M25QaEN2dlRIM0pUCkQzMUdFeFQxUCthRk5MOWxvbEEyNTFFTEFhYmFyeE4vTkpzL2NMajBhRmdZK0NNS29wL3JDcnR1Tjl4aFR4bG0KbnRlK1JUOS9pMTVxUTRvZVBZSGZDRHk4Q29DZW5rTUYzelVrQURpcVQ5aGU0enFuZGtMZFlzZ0RYQXNUTE9zRQpVZDc5UGVnUzRRS0JnRjlla1VUWE5yYk1aSHZ2MUJyckEvZW8vNU5KdE5Xek05UnEwcGpDR3hXdnMraTdma0liCmpIcjdWRkwxNWhlL3dUUlVtUEJYUlRybmQwSGIyaVA0TCs0d2RpcTZWOHE2c1VJVzdGV09vSlNWekw0a2pjUDcKbXhsUkpNaS9MMXRFSkJma3hKZ1JtN1BQS1NEejJBY1VEcGJINUZQNFFkMHdQNWpRVnpNSmdjMFJBb0dBQklrNwprMGxPTW9KcnBKS0tMQ0gwaFFiVjRmUStrem5GaGVKMUhZYVNsSTVDM0F1NTJMdEEzQUd5K20ydlJwVjkvUTFZCkFyeXpnZWhqSFMrVW5rbmRJYWU5WldvaXhKanNIRTdJNUxUeUlCc3lyMzJkVGRSYmhxTEp3Z2I3cktnMUlZMWQKeXRXMmR6SWQ1UStSNlFYdHd1YmhjREpNanNRWklLQkFYYzl0NUFFQ2dZQTZSbXhDYzNFa1NocW5kVURFZ0ZxcQpsMWhzS3BXbzBoa01JNG0zNWFENzh4RmdvQnZCUmREK1ZSaDFSWnU1KzdFNHhNMU5zalkzdU05OEU4Vnhuc2VJCkl6NFBzNFhtTG5OdzVab3k0Uk5UcjlQeTlWQkQveWxhUzVEZ0FVMG5KLzdrSWM4dCtyQ0tJbUZxZ3VOUmFkRU0KQjQ2K1luRS9mcSt5RGk2VURHakswdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/demo-exporter/templates/secret.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: demo-exporter-secret
  labels:
     chart: "demo-exporter-0.0.1"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacert: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWtzQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFdNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV4TVRBMU1UUXlOelUwV2hjTk16RXhNVEF6TVRReU56VTAKV2pCcU1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOClpHVnRieTFsZUhCdmNuUmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFQVWYKalNsRno4d1FCZVVpZDRoVXE4Z0w5VGdnb2UzOFFYMjZqL1h1THNiTTBkeHpKTUQyazJuRFhPejBjYU1sVVlxWApzT1NuNUdSdG9ac1ZhOWxLYk5UeEY5SGtFUExWN0NXditncVJYWU9PUEk5V2pyNWxES3VmeGVLS1hyVyt6SnZ1CmdVV1JRK2w5YlpMYjdLSGJoUSttbUxRQzEvcitQZ1MxQ0lNYzFQUTU2MEZQcEk5dytjbDNJZVk4WHZFdktER0UKY3hyb0RmUHFydjBnVHRPZWt1R0JWUWoxaXZVZytTZGZ5UDhqNVJYL1J5Q1VmdVdKb05KRURXS2lvS0tCanJoSwpyUDE3eUlMcjBSWnN0OHRBdXd4SlhydU16TkRyaWJZZ0puM2JYSFVRalgxdGlGcjQ4UHJvamZRQ3I3N0VsdmQ5CkRTZDRYeHRQd29tSlBYY1FLTjBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYRnM3V1ZlbForNlgKQVNUbWhMWnR6b1d0Qk9qUENHRW5CcksyU0hWUkhiYVZMQkJhWnAvc1cyK1hrUE1Rckh3V1ZwRlArN3R0ckowVgpmc2ZHbFJyWjZ1eEI5TURLOUQyUlM2Wm84SEtVWENRV3M0VlJjdzdaenkxTlBhNE1MQkFYUnhMdjgzdDRVZkFqCmNVRmtaMFVoS2xGSk5VWjc0QWNNQnpLMTIxQnp4bURDRHduWld5ZXF6QjhTS2V4ZGs4SStzRW9jNS9LSU0vUVAKTGRUS2UzdncvV0dIN3A0NU02OTNCWFdjNWx5QWN3QjhpU21lY2psUEI1cGVONzFzWTNPZVNKR1V2UytRYmRsYQpGQlBDNXROYnA0YnlSVmNpeUxLbnd4ZzRIbU9mTmhDWmJSVllHMldIQmFUN29NdHgrNERhTnM4ZVB3V0l3dmtvCmdhMHBJblpVTmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRDFINDBwUmMvTUVBWGwKSW5lSVZLdklDL1U0SUtIdC9FRjl1by8xN2k3R3pOSGNjeVRBOXBOcHcxenM5SEdqSlZHS2w3RGtwK1JrYmFHYgpGV3ZaU216VThSZlI1QkR5MWV3bHIvb0trVjJEamp5UFZvNitaUXlybjhYaWlsNjF2c3liN29GRmtVUHBmVzJTCjIreWgyNFVQcHBpMEF0ZjYvajRFdFFpREhOVDBPZXRCVDZTUGNQbkpkeUhtUEY3eEx5Z3hoSE1hNkEzejZxNzkKSUU3VG5wTGhnVlVJOVlyMUlQa25YOGovSStVVi8wY2dsSDdsaWFEU1JBMWlvcUNpZ1k2NFNxejllOGlDNjlFVwpiTGZMUUxzTVNWNjdqTXpRNjRtMklDWjkyMXgxRUkxOWJZaGErUEQ2NkkzMEFxKyt4SmIzZlEwbmVGOGJUOEtKCmlUMTNFQ2pkQWdNQkFBRUNnZ0VBSEZmcm9Ld2IzUUsxUzh0eWV1Y2ZmZUEwR0t0ZFRnRnZLVFNiVk5xWHVoRVEKNnlhOVJ6cTd6T3owSDhvY0liczg5SU9aeHJiTEovbXRTQnR2L3c0bUMzRmRTYjNQWCtUd2kyTVB6STBHZlNIRApTdWU5VmJLbGhtclJIT0xYRkxqZE8rS1dQQThTQlR1bG9lZWdNdzhKRWNnM3ZBamdKSHVsZkRIYXJCNTNXVTNuClFYbTM0dTc1OWE0eEdGRkd0SFc3d3pEanNudDZDbTc4TW9pM0lJYnM0MGNFN0ViVWtHb0hZc3RhUUg4S2wyQ0kKVElGY1QyS3V6SjA1N2R4Y1M2S3NCTmJieUcwdmJjQmpWKzIyMUVHSWNqdWo3cDUzWGhoTElFMXA0dGR2KzlURwpTWkRQcGdLTGpNa0lxZWVxN0l0MlhBRzNzQ2tpcnd6RUY3bityVkNlQVFLQmdRRDZyblVYOFhyMHI1bGdQTklPCk5zZ29wL2FSUS9iZllOWmZNUDdrTkxvb3E5ZWZNUG94cWFhQ3lzTWErSWprQ2FDb3dsYWRvUVJ0YVdHcC9pVk0KaGp3RS9sL29FQVNlOE5EVVVxazJ3MlNkTm9zNkNtOXNqMDBUZkNCcU1oT0trQXhiRVpXTUp4SjczaFhZYmtUdApJLzVyVmoyZHFFN1lWQ08ydW1FeGU5MWVuUUtCZ1FENlV1ZSs3aUZkcDc3YWdoU2NFaWMxMDlwRVhvRGZkY29hCjZUaER1cm9TYitmL1lJbDVuYThJclhZUXZlNDB5Y2YyTzl6M00yU2c5R2N6WXFmU0wxd01hVm5rR1Vna2loSk4KVzV5aERwcWZrTk1WSkxRTFR6WDNkTlEzeTEwK1hBbmVTdWNsWTVnSDBSQnA0dmZubjFyN3ZyUCtaaEZ4OWtoaQphTnlRYmhTL1FRS0JnQXo2ZFVOOUZCR1ErYzdhdDBGWElydkFIbXJjNnU0YnRGMlBTdE1EeTlPSk9ndWEzSWt2CnNGZzdLU2kvVDA4SEZKTklKSFhhdlVEdzRNYU5TdDhRWUJFZUhsY0VaVWpaVE9hQk5ST0p3QzdIZ1NQTElJT3QKVTU4N29PMytrN1pyeU1mNlBCVGFmUUYrdVFEUWpLNytXeEN4a1ZVVlBxZkNpMnJOY1hTL1pmR2RBb0dBSDl6cApycjMwOVV6aTJFRnlpaU10Wm9hZTQ5RDdxblg5MGNzWjVGVWlWakowWDJkVVdHeWYyUVRyWUZvc3RmOXhPb0NJCk1kY1MyZ0lDR09KWDVrTXMvazl5cDd3b0dLNlNnZEpGYjZMQ1A4bFpkUG1GQ1dOOXhRL1Q2MzR4VWp5NDdOaXYKNzJ4cjc2TEc2aE4vNXJXOENRdFBNZlNnQjllSGd5OUIxQWlQRDRFQ2dZQk95aXBJWjlZSkcvZ2NPbVdxZ1JkdgoyMmxEOG5sMGhVN0VsNGdIaFdZekFCQXBnbHBDd3djRStHTEs5aC85S1piT0VJUXM3aXR6WkZFUUNYMVZidVVvCjgrSldSOFpzaW1NU21MYjV5U0YzaE1iZXZhQTZpWU5qanB2RHkxc3lGTlcrV1ZlZnA3bmYxelFCNHFSTVcxdmIKcDBkRjg4REYvTkpLMWtBQzJSQlpldz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: WnBKMEtWV3dFWnZRSHJaT2xoWUE4dUVNdnVlbFd5RWZnY3RBV2pOWA==
  ldap-toml: ""
---
# Source: aether-roc-umbrella/charts/onos-config/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: onos-config-secret
  labels:
     chart: "onos-config-1.4.6"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacrt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0='
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkRENDQWx3Q0ZCdmVoMHR5WVF0WGF5UVBhWGdXKzVkTHVLOERNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NVGt3TnpFMk1Ua3dOalUyV2hjTk1qa3dOekV6TVRrd05qVTIKV2pCN01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVuTUNVR0ExVUVBd3dlCmIyNXZjeTFqYjI1bWFXY3ViM0JsYm01bGRIZHZjbXRwYm1jdWIzSm5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzMUVSL0ZHOUNPd1lueURPeHhQSUdKYjhwOWw1OUdMcVlkbmIzUEg1RUk2eQpBZmhwSkRocCtaL1JOOHYrL05oSDZKUFlxdVB4UktXbUhoUlhtd0VIZ1lSRWZrcUsrSGlrVHY4Nkg1VHEvWHp6CkJxYWRIa29wTXorUTY2V280TG9EM00rVmwvMTFnVVU5czdTSVdCbWNKbHk5RVRRTjVuZGRlR2ErditNZzlRb1MKVy84Q0s3WTFpQ2d1dTNoMkZZanUrT1E3SEo5aE81YWJzM1hpdUpKSk45aFBKUnIxTzFVdGdVemxWYmoyUUxjVApCRG50SXhQS1VjMy9NNUlwemdMdDJ2Z0hXOVZNTzV2Rk9Yc3IrVXlRZC9sQnlWWFR4UUtTNWF3MGt3TVVKU2ROCnZhc1YzRkF6NHVzUDlJQng1UHEzTXdNUUYxdU81eko4WG8yeXRsc0kwd0lEQVFBQk1BMEdDU3FHU0liM0RRRUIKQ3dVQUE0SUJBUUI5VzgveWdHODdRTFIzN0daZnV0WUxpOWhCSlFIU3BwQ3haQjJTQlAxeWwvSnMxaEhNMHBhUAp5d2xiUmJtdUN2N0xNM0NpYVhkSm85dzdvblloYS9CdEpJWUcwWUhacW5YTGprMHV1ZlAwN0NCSVNHS1huZnAwCnkzNVlxcnVIalh0a29LZGNxT0dac3V6ODhpUTU3OVBydkpwV0NPb245MzZGTTd2QnpLZUJvTmJCc281MnZ0N2IKRnRLSVNvR0FyOFh3Q3JGWXhnSE9qWVVQOEE5ZDl5bGFhM0hnZmQ3WHVsMkJLTzN0UHgvN29GeGlhejQwQVR1UQp3TjlPRXN2Tm1QMlRjckxFRktvVUpCdHlZVjlnRkNxUVB1ZjdvYndiVFY1bTFKVysxK05Fc0tOY1dlbWRLVTZ4Ck4wdStqQ0M3RDdzbzhwanFmWlJvdUNXMmRLVmxJUmpqCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3pVUkg4VWIwSTdCaWYKSU03SEU4Z1lsdnluMlhuMFl1cGgyZHZjOGZrUWpySUIrR2trT0duNW45RTN5Lzc4MkVmb2s5aXE0L0ZFcGFZZQpGRmViQVFlQmhFUitTb3I0ZUtSTy96b2ZsT3I5ZlBNR3BwMGVTaWt6UDVEcnBhamd1Z1BjejVXWC9YV0JSVDJ6CnRJaFlHWndtWEwwUk5BM21kMTE0WnI2LzR5RDFDaEpiL3dJcnRqV0lLQzY3ZUhZVmlPNzQ1RHNjbjJFN2xwdXoKZGVLNGtrazMyRThsR3ZVN1ZTMkJUT1ZWdVBaQXR4TUVPZTBqRThwUnpmOHpraW5PQXUzYStBZGIxVXc3bThVNQpleXY1VEpCMytVSEpWZFBGQXBMbHJEU1RBeFFsSjAyOXF4WGNVRFBpNncvMGdISGsrcmN6QXhBWFc0N25NbnhlCmpiSzJXd2pUQWdNQkFBRUNnZ0VCQUxFNTdpSElrNkh1M3dMZmhSOURVTi9rMHIvK2RNZHl3QjZJR1FLTmNWSEoKQnV4bG5WMDhHSm1zT0RjQ2V2bGh0ZWlMdjNoZkk0VnFodjF4czRneWd6MmlBYVFrZnFmSGJQWGEwWktITjUzagowYnFBRUFmdzJqbVptTjBlZFFQdk5ZUVc4czR1cHVWbUR1Nisvb2E4Z1JWMVVUUmdrMkIyRno2NXBjdTNhMHBpCnlWZVp6ZUFPL3ZEN1dOUDN1TTdZdXYwQVFUS0tMdk9xWm1LTGVEd1BlQysyc2JpMDNvcFliSWFFbCtPSjk0RFgKOWhDbTEvdnFvamx6dytCSHJ4R1M4YnFYTW5KbnF4TGVwL2dtYnZMMEl5OTJTSmdFQms2bDh0N3h6cEJxU2pEVworRGpETHFwZGE2ci9EeTliNWhCWjBhLzRWK2ZSSlB6NFMvaytxanA5RHlFQ2dZRUE3S01RdXI3UVpjU0FXUFBNClpWNVRNNitTRFluNlRQOWNzYnlCNEliT2ZlTGRJa1ZLWStzdlZ6Mm03RnluZlFiNHdodHhFUmJNeTBRallFZ2MKdXMzcC9RVmpIQnMvSlpJZHRJZzVmZjZxZ09GQWt1YUNYRUpLeUg0d2NFQTA5MWNyNkhXc2xXQ0h6b3AyU0QrVApkcHZTZ1hKWHB4MVJZUC82WDNzVWYxbUtBT01DZ1lFQXdmMUs0Zk9ZWnd5VDQ0VlB1cnhobXpnRFdXMlBLbTZJCmdDT1pOOUVOMk12dDBKNXpLS29IdzhPUkhHTjl6eExNeUIxMTgwM1V3bTduY2VBcE0zRlVhY21MSFAwNVExVm8KdWtIVkxvRlFZd1hMUXpTV2laYnR4Y2JNSzNQMUVVMlNnNSt5Zm9SZjZ1c21SSVdEbHI0K1RJelQzYTIwbmhWMApvbE9qM3hGdEMxRUNnWUJIeWVpSFh1QUdINmo0VTI0TXlxTGZLVUpielNJY1BkUTNMNE1QUkpaY1puakRydFcwCm5tTE1TcTNiUXZpazIzcVlHSThpcWhJVEVHYlRETTE2ZG9Hbit2eG9TSFBOeUJndTdxelNabkgvaTFaMXVteU4KNUthZlVIa05kTTBjeEZ0VHVHOVZHZVhaYVBRZFV2dy9uV0l0Vnl6MFM5YW1ZTUhxT1lLc1o5T1FGUUtCZ1FDNgp0ZllxLy9DQnpxTlE2M0RQeEowVmJwWWFyczZMQXBReThSQjVucWI3TVZ5VjNNdnVLYWtMak9IUU54cFNBa0JECm84ZHhCRXB4VVpsR0M0RGNXSW5zditVN1k2YUgzbDdNVnF5KzlBdlJJelIrWE5FL1lKcytMcGM0ZzRVdXdFRHkKbXZTTHZSRXM1R09TdEFieFFlNW9jMnRBQS83QjROaS9uRTB2V0hCaDRRS0JnRFV1a0xqSzRpK0FxQ202WjRpdQovRmNLdE5DMitCTHhaMnNqYVJWbjc4YVEyRFhXYUtXVmFLd1NCSk90TGdoT3lqQXp2SDhWRE90dnA5MnJRZ0RrCmx0bm9UcDA5QjlCODBkTk9WcUlpMTEzSW5yODlOL1FETlZZY3RxUGJ6aXpiV0hsZjNFTndWa2x3QVhobU9JYk4KMWwwQ2dlOEVSS0djQUlsOVNzVGwrNVNlCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: onos-topo-secret
  labels:
     chart: "onos-topo-1.1.109"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacrt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0='
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtjQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFdNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV3TVRBMU1EZzFOakV4V2hjTk16RXdNVEF6TURnMU5qRXgKV2pCbU1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVTTUJBR0ExVUVBd3dKCmIyNXZjeTEwYjNCdk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeTVsa2ZwbkIKQlA5MEFUK3htSW5hNUE3WlQ3a2x3d3lwQ29iU1dDRS9XOGxmQ01KdnV5UmNLWlNhTjFSdEpJYmpTQ2tLSjgxdQpYL0RIK210MGNMbzdPT0NyWG43aHBqVSt1ZjRyRWU1TDFMcU8yQ2lrSkorb1pTdENpays0YmQ1OWNQaUVHRjViCmNXc1ozUEZ2UzBDd01nMnVkbkdESHRpTjZtcjh6aVJMek14M0VpT05IQkhkUUVBNkJkMUVTQjc4MXVwTk9CTHMKNnZ1NExnUEd0RUNPZGxZcmFhYWlQQms4anNscXEwUWY5eVdwT3dLamZjOVcxNVI3QzdRenBhLzJXdWZEV3FJYQppNEpvWXpGdjNhdFpCWnVUWHJQbG5ub1RVSkorQUkyTXk4aDRjK2t4UzY0UmVDK0QxQWxQMHRiclhRUHpXZ2w1CjJqTDFBYWl6U1RWTjNRSURBUUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDUWt1T3RCU1p3d2phN1RCU0UKWW1NanVYNWNIWDY2cjVRbEpmL0FXaEJmc1M3REJicnBWWVJmeVhyYmRnZDNpZWcyR3VUaFByRS9LcjE5VXE0MApxQTJ5K0x6ZjlkTWlxWDdLOXZsNDliZlUyWVd3cE1USjFnMlhLLzZXVHhjNWRDb0Q1OTFOakRVYk14TmdPQ2d3ClBYQTVZK2ZDWkhVS0lsa0d4RGpvRWF6VExBSVNKWENORjJxdWJ2ZW1ENDdGNFcyZm02TEx0TExDeXZMWTZYOFcKM01wSXhCWnhPSE1JRkg2L2FpZVBhK2FmMzFPbWVWMGF1Q0JNY2FTc21VZUdJTmNEeThQeGh3RUVBUUhrRFBmbgo5anZZbWUwMWFTWWhoNWZkRERRR0VpWjhYVms3N2lSckU0QWRZTUV2eXFRWXpRRlBsOTRVZXJHVFlSYkVibE9VClorU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRExtV1IrbWNFRS8zUUIKUDdHWWlkcmtEdGxQdVNYRERLa0todEpZSVQ5YnlWOEl3bSs3SkZ3cGxKbzNWRzBraHVOSUtRb256VzVmOE1mNgphM1J3dWpzNDRLdGVmdUdtTlQ2NS9pc1I3a3ZVdW83WUtLUWtuNmhsSzBLS1Q3aHQzbjF3K0lRWVhsdHhheG5jCjhXOUxRTEF5RGE1MmNZTWUySTNxYXZ6T0pFdk16SGNTSTQwY0VkMUFRRG9GM1VSSUh2elc2azA0RXV6cSs3Z3UKQThhMFFJNTJWaXRwcHFJOEdUeU95V3FyUkIvM0phazdBcU45ejFiWGxIc0x0RE9sci9aYTU4TmFvaHFMZ21oagpNVy9kcTFrRm01TmVzK1dlZWhOUWtuNEFqWXpMeUhoejZURkxyaEY0TDRQVUNVL1MxdXRkQS9OYUNYbmFNdlVCCnFMTkpOVTNkQWdNQkFBRUNnZ0VCQUkxSHV4R1MxZnNHM05QRkJCTHFqa2MwK3AwMHlEeHFPNTcvWVZVZ2RSdlgKUjZnSGJJcjdOeXp2WG5oSWtKZ0pOZ3dyMWswNlkzNFYwbDgyVTQycDNWQ2hycWthK0xCaVFFM0dUdExaZml0Mgo3WXFYNFJjODV4aVZCVTUrOVdiZ1BrRzNZY3FiSjI4enQ3VzJuOWtqWVdES1Y2Yi9LOUtxeVFmREIveHYrVjE1Cnc2bTIzb1d0U1J6YlhXelU5bDhUbjFMT3M5c0dEZ0ppd09PNjloRzhTQUhtWERzZG1aS0VTNjhKWUNabVNpMm8KdjVBSEVFaENwYzVMaWVEeHA3OFRaOUlhUUk0TWpIV012b2dHSlh2S216UlNDRE00STVISm02SjRra2ZCbnB6UQpXNGRxV2F3T0xXVkkyUlVicE5sY2ROMEt0MUdFS2l5NGVQNk5iWWx6THNFQ2dZRUE2c3Y2KzRodW0wa2wrTEdsCkpTUWpWTkIxSXhweTZoZ1dpZzhreFpuNjV1TWYydUJHRVRpRDBDS2N4WTJYMEtxajJpWDJLVFRmNWpic0tHcmcKaTRFVzIzNjRjYVNmeGdUZ2padlBXMStsWHlNU0hMSUFvWi9HUmozRkhlM1Z6YUhmR2JPZ2VjaHlGNUloWnFlQQpQQTE2ZTV5VmNiNFNYdG9OM2p0NWxzZndSbEVDZ1lFQTNmd3dBbGdDTEZIeHQ3Um92WFRkR3JUMm5EMEpYZ2dVCjJNcElHOHhQb1lvYy84K2FTTnVtbDIyTUx0dkpSa09scDQrTVhFdlZzbmtOMCs4dXVQRXJMWmpPN1NZZXUzdlkKYzdLb2ZNcHg4eitiOFAyUlZYZnJ3NjczaGN4ZFJaZTRrQmV0cU5YQS9JZlFwQXpnMWtXTnRxU3RKVzN4bEU0bApOQUd0UjAzNlQ4MENnWUVBcExIa0lSKzRCZkN2VTl5MzdHK0c0TzAvM1JtbVZaSUQ3VjlsK2IxaWd5WDVxRHY4CnFnT3NZZ2lGVXdWWTRpTnZ2NHMxT2Y0K3QycjdCL2EvL3RyVHY2OEpqWjFkL1RaYWxMb2dId1hlSi9lZnNzVWgKTUQyMGhIeTdrWnpNaGVydlpVWGNZTkE3UjFGWFlIeEp0TlgzZmxGOWVrVksrWUdXakxYSE9mNlJDYUVDZ1lBOApLM05INzFzSGNGNjRrS29qVUYzdU0wYjFLb1l6ZXJWTDNlaVZ3RmVGVGM1MmVHczFmSFEzYjNZajdXY3RLSURxClhqcUplZlMrbjVsajdOMFpQQ1djQW1OMFhIVFFGTTJpN3JaRXZRc09DQnZZd3FKMkxEODNsMkY0WHVDWlVIcXkKYy9pYVh2WWtmUnZNbThFRjAyeUtLVERWaUd1RzYzZWlGU0pHeFpnbnNRS0JnUUNuUW44dTUwVklVN3E3YkVNVApmWXFEWHZBaWM2NkNTMnFyVE9lQkNJT0NPNGx3VzE2TXFQbk9WOUpDUHM5NmtXdzFKVGI1SzVXcnNTRGdhdjFPCmRTMDhGYm9oSE1ObkhweXJDYTdLUHhGbmxZeFlPZHF0ZlFCRU5YUHFxS3o3OWFWbzJ0TkdQTlhjUGQyMm93YncKM3N3azNSZHZDdXNlMjYyYU5BV3lyNkxwQUE9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=='
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-acc/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: prom-label-proxy-acc-secret
  labels:
     chart: "prom-label-proxy-acc-0.0.2"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacert: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxBQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV4TURBM01UQXdPREF5V2hjTk16RXhNREExTVRBd09EQXkKV2pCdk1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekViTUJrR0ExVUVBd3dTCmNHeHdjbTk0ZVMxelpYSjJhV05sTFhZeE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXVvVG1wMWkvbmc4RzhSV2lrKzhkVVpPWTZlcFZGM3dPMW5PS1E4YzlWNzd6dXk0MFFDVHhSaUhpZVdCcQpRZTk1czhkNnlKanIwTnlOdHI4U2Jpc2ZYUy93aXpVc0p1UWlmOFc0VFhieG5qWU1IU29TbU1Jc0ZKRlpMem53CnNDTE9seHp5c0pkUUdqOUMyQlc2YWtJdGdyamlBdmhZeCt0RWEvOStwbmhOWStlNVk2aEdVRWJmaDZGa3ptb1AKMmNNcHA4UW0xSFVHSjFCRFBCZEs3RmpHSVhNOUtVYkljTU5meFVyaHBzc0EzU0ZIcldCOTZGVEgzb3JRa1FkcwpaNUFUZGVkVVo0VWlEendWSm9HRk9mVHZrZFU3VFF3VGZyVmpEQWF2M1V2WEM3OGtNL3IvZ0Jza1A1dXhYRFhsCmV0VzVVeHJsSUFsR2JjTWRpWGZVSklCdDNRSURBUUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDQjVjRmgKZjBEdnV6ZXBCL2RvYUxCZ2phb09TS2R0VEdiRk5IbFlwYWdWekpmZlB2SXBOR0JtSVJrbWt6TysveGczbFhzbQpZTE1VT1R5dk5KOFp1OW5XaUV0WWpDSHFjeVM4Q0IrbE1uRXFqaFlCVE15ZmF2RzhHUFM0NWVqSlJkbnVCSkI3Cm1yZm9FSFgrSFZiNSs0U0RYNER2WkpHZUV1VWlzd1dacVRMUGVZelVCT1d6Yzh5Z2pyZm9JZ1RFbGNDOW1yVS8KZmhseHYrbFRHU1dENHBRTzNRWE5NN2FPTXJYS1YrR0JlQld6MEpwclhuTXROQWdvOXM4dWhZaXgyQTJCMFlxMwpCOUpJOEs4ZHE3VWxnbVJOdHZEaGhST0hoWXdKcE1QSWl2VmdXMms4US9kY3E3aWw0WmFUb2swU1hLRHpjZ2lrCjk3WndSYXg3ZzdNMEhRczcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQzZoT2FuV0wrZUR3YngKRmFLVDd4MVJrNWpwNmxVWGZBN1djNHBEeHoxWHZ2TzdMalJBSlBGR0llSjVZR3BCNzNtengzckltT3ZRM0kyMgp2eEp1S3g5ZEwvQ0xOU3dtNUNKL3hiaE5kdkdlTmd3ZEtoS1l3aXdVa1Zrdk9mQ3dJczZYSFBLd2wxQWFQMExZCkZicHFRaTJDdU9JQytGakg2MFJyLzM2bWVFMWo1N2xqcUVaUVJ0K0hvV1RPYWcvWnd5bW54Q2JVZFFZblVFTTgKRjByc1dNWWhjejBwUnNod3cxL0ZTdUdteXdEZElVZXRZSDNvVk1mZWl0Q1JCMnhua0JOMTUxUm5oU0lQUEJVbQpnWVU1OU8rUjFUdE5EQk4rdFdNTUJxL2RTOWNMdnlReit2K0FHeVEvbTdGY05lVjYxYmxUR3VVZ0NVWnR3eDJKCmQ5UWtnRzNkQWdNQkFBRUNnZ0VBRy9CMmdKRFp1enB6QnIvLzUzc0ZBRWhFdXAxZ2U3RVlvK1VRekJCWFR3S0sKamZwZzEwN3hXVmtRRExCMW1rVGVEU0VQY21iOXcvNlZ0ODh0V3BWWkVHTnkrOWRPTXRFdm5jWW5VbXREekRnNgpYbEFFRXgvYTdJWE5QemJGcUF5K3Q0SWRsSGhHQm5oOWNkTG5acTFkRmR6TjlqWHZUcHNlVjdNZzdKek9zdTBzCmgrQ2JLQm1XRDhiZDUxVVpkWWRZZG1HR2N1OG9NbWFDZEViSVNHQTBnQ3FVek1SbzhwTTNtaHoxczV6cjhsa2sKOW8rK1dZNFpQYjhTaHlyVGcwSjMvdXJyRWxDT09UV09lYjY1SmYxanp0RjdTUmQ0K25rSy95WWkzNjFQQ0NBYwpQZ3hJRVZCK2t2NlQwTXM4YkhRV1JKNmRHaXBxNVl2MGVDMUVMR0YvNFFLQmdRRHFLZFNpaTludm04Tyt3WFJLClJBRnFiS0o1S0VYc25pWjhEYTAvWmZmUm8wQjkwV2pEQlA3eCt2SUN1UU1kRU45UFFOakNHTitnOWZmMUJ0eUkKa3hyK1dRZzJHU0huais1akxXdTZyUlR2am1vY21rdmlDaEFacUJ5TDVtUDhwRHRjWEhpQVhtZ3ljY1ZqT0M4NQppMHFMcVJlREtpUU40a1lpemQxYVVEWitPUUtCZ1FETDZhbHJlV2g1U1dGczFQK09ZNlE2VXBOR2NtN29RdXM0Ci9PTXZaeTE3V3NpQ2Z2cEZMaDNSSXMvL0VTMXJmeVVlOHBuT3RXVVJVaExxWmNFbnU1U0dZZEpyUjdJTHZ6bDMKcnJ2YWl3a2FYenFQdWw4aHlOL2V0QktQUUVHUS9GVnVqS0Rmb0x1RzMrNUdjREk5c0huRUhIZ2NqSHBOZkY0RwpmWDZRYTl1c3hRS0JnRFBBVXZJcG5sektQQlNvaEo3MU1Lcm9uMi9QYXNURW54VERvUXBsNnNNMkpVYXBSVkgwCmhMUE9GalpyMVRoVFJrY3B1YjRMNlVDVm05dFhUTjRTUk9ENXBFcndld0hHV1pVcHNLbHRIemRpYmlrc0lLRXcKUUNhcmRNT21nMnFPa1YvMFA5MSsvK0JHTEsyaytTcnFrZXNUejlKNU9jYW52NEJwcHdZU3ZEaGhBb0dBWmNWdwpGa0RaQUxlOEZUcFZkZmFMTDhTbzFwOGtkVzE0d3MrTWY4c3FLd2ZMVFQ0Y29NeDhlelc1dzk4SjRUM3JCQUFtCi9jRVErVTBTUGNTZFc3eEdTNitrK29Bay83SG45N0RROXlrdldPY3diaTJoYjFZM1RZcG9QUERnQ0lHNERkM0kKS1BTcXc0MGQraS9qRTJEeDFRdzBjbU0yWTFmd0FhTSt1TXZzTHRVQ2dZQkh2NFppb0UzbDFRRFRwTnBWbWdRdgp4dEZJVWhITG82OTNXV1VzUnMyVGp0aVFpZ2NZUjlsWUdWcUoxNG9WQlZaWWREdzRleHduOVZwR0h3QVlFYkM3Clgva3lZb05rd2JXdkg3YzVZc3loVXN0akd6dUZWMnRBeFplOHZYUjlRYXVkcFFSTjNGQjBGN3k2ZWFmdWVpYUQKRW84cmoyZEVzTHNrdlN5Vi9qcFpCZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-amp/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: prom-label-proxy-amp-secret
  labels:
     chart: "prom-label-proxy-amp-0.0.2"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacert: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxBQ0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV4TURBM01UQXdPREF5V2hjTk16RXhNREExTVRBd09EQXkKV2pCdk1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekViTUJrR0ExVUVBd3dTCmNHeHdjbTk0ZVMxelpYSjJhV05sTFhZeE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXVvVG1wMWkvbmc4RzhSV2lrKzhkVVpPWTZlcFZGM3dPMW5PS1E4YzlWNzd6dXk0MFFDVHhSaUhpZVdCcQpRZTk1czhkNnlKanIwTnlOdHI4U2Jpc2ZYUy93aXpVc0p1UWlmOFc0VFhieG5qWU1IU29TbU1Jc0ZKRlpMem53CnNDTE9seHp5c0pkUUdqOUMyQlc2YWtJdGdyamlBdmhZeCt0RWEvOStwbmhOWStlNVk2aEdVRWJmaDZGa3ptb1AKMmNNcHA4UW0xSFVHSjFCRFBCZEs3RmpHSVhNOUtVYkljTU5meFVyaHBzc0EzU0ZIcldCOTZGVEgzb3JRa1FkcwpaNUFUZGVkVVo0VWlEendWSm9HRk9mVHZrZFU3VFF3VGZyVmpEQWF2M1V2WEM3OGtNL3IvZ0Jza1A1dXhYRFhsCmV0VzVVeHJsSUFsR2JjTWRpWGZVSklCdDNRSURBUUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDQjVjRmgKZjBEdnV6ZXBCL2RvYUxCZ2phb09TS2R0VEdiRk5IbFlwYWdWekpmZlB2SXBOR0JtSVJrbWt6TysveGczbFhzbQpZTE1VT1R5dk5KOFp1OW5XaUV0WWpDSHFjeVM4Q0IrbE1uRXFqaFlCVE15ZmF2RzhHUFM0NWVqSlJkbnVCSkI3Cm1yZm9FSFgrSFZiNSs0U0RYNER2WkpHZUV1VWlzd1dacVRMUGVZelVCT1d6Yzh5Z2pyZm9JZ1RFbGNDOW1yVS8KZmhseHYrbFRHU1dENHBRTzNRWE5NN2FPTXJYS1YrR0JlQld6MEpwclhuTXROQWdvOXM4dWhZaXgyQTJCMFlxMwpCOUpJOEs4ZHE3VWxnbVJOdHZEaGhST0hoWXdKcE1QSWl2VmdXMms4US9kY3E3aWw0WmFUb2swU1hLRHpjZ2lrCjk3WndSYXg3ZzdNMEhRczcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQzZoT2FuV0wrZUR3YngKRmFLVDd4MVJrNWpwNmxVWGZBN1djNHBEeHoxWHZ2TzdMalJBSlBGR0llSjVZR3BCNzNtengzckltT3ZRM0kyMgp2eEp1S3g5ZEwvQ0xOU3dtNUNKL3hiaE5kdkdlTmd3ZEtoS1l3aXdVa1Zrdk9mQ3dJczZYSFBLd2wxQWFQMExZCkZicHFRaTJDdU9JQytGakg2MFJyLzM2bWVFMWo1N2xqcUVaUVJ0K0hvV1RPYWcvWnd5bW54Q2JVZFFZblVFTTgKRjByc1dNWWhjejBwUnNod3cxL0ZTdUdteXdEZElVZXRZSDNvVk1mZWl0Q1JCMnhua0JOMTUxUm5oU0lQUEJVbQpnWVU1OU8rUjFUdE5EQk4rdFdNTUJxL2RTOWNMdnlReit2K0FHeVEvbTdGY05lVjYxYmxUR3VVZ0NVWnR3eDJKCmQ5UWtnRzNkQWdNQkFBRUNnZ0VBRy9CMmdKRFp1enB6QnIvLzUzc0ZBRWhFdXAxZ2U3RVlvK1VRekJCWFR3S0sKamZwZzEwN3hXVmtRRExCMW1rVGVEU0VQY21iOXcvNlZ0ODh0V3BWWkVHTnkrOWRPTXRFdm5jWW5VbXREekRnNgpYbEFFRXgvYTdJWE5QemJGcUF5K3Q0SWRsSGhHQm5oOWNkTG5acTFkRmR6TjlqWHZUcHNlVjdNZzdKek9zdTBzCmgrQ2JLQm1XRDhiZDUxVVpkWWRZZG1HR2N1OG9NbWFDZEViSVNHQTBnQ3FVek1SbzhwTTNtaHoxczV6cjhsa2sKOW8rK1dZNFpQYjhTaHlyVGcwSjMvdXJyRWxDT09UV09lYjY1SmYxanp0RjdTUmQ0K25rSy95WWkzNjFQQ0NBYwpQZ3hJRVZCK2t2NlQwTXM4YkhRV1JKNmRHaXBxNVl2MGVDMUVMR0YvNFFLQmdRRHFLZFNpaTludm04Tyt3WFJLClJBRnFiS0o1S0VYc25pWjhEYTAvWmZmUm8wQjkwV2pEQlA3eCt2SUN1UU1kRU45UFFOakNHTitnOWZmMUJ0eUkKa3hyK1dRZzJHU0huais1akxXdTZyUlR2am1vY21rdmlDaEFacUJ5TDVtUDhwRHRjWEhpQVhtZ3ljY1ZqT0M4NQppMHFMcVJlREtpUU40a1lpemQxYVVEWitPUUtCZ1FETDZhbHJlV2g1U1dGczFQK09ZNlE2VXBOR2NtN29RdXM0Ci9PTXZaeTE3V3NpQ2Z2cEZMaDNSSXMvL0VTMXJmeVVlOHBuT3RXVVJVaExxWmNFbnU1U0dZZEpyUjdJTHZ6bDMKcnJ2YWl3a2FYenFQdWw4aHlOL2V0QktQUUVHUS9GVnVqS0Rmb0x1RzMrNUdjREk5c0huRUhIZ2NqSHBOZkY0RwpmWDZRYTl1c3hRS0JnRFBBVXZJcG5sektQQlNvaEo3MU1Lcm9uMi9QYXNURW54VERvUXBsNnNNMkpVYXBSVkgwCmhMUE9GalpyMVRoVFJrY3B1YjRMNlVDVm05dFhUTjRTUk9ENXBFcndld0hHV1pVcHNLbHRIemRpYmlrc0lLRXcKUUNhcmRNT21nMnFPa1YvMFA5MSsvK0JHTEsyaytTcnFrZXNUejlKNU9jYW52NEJwcHdZU3ZEaGhBb0dBWmNWdwpGa0RaQUxlOEZUcFZkZmFMTDhTbzFwOGtkVzE0d3MrTWY4c3FLd2ZMVFQ0Y29NeDhlelc1dzk4SjRUM3JCQUFtCi9jRVErVTBTUGNTZFc3eEdTNitrK29Bay83SG45N0RROXlrdldPY3diaTJoYjFZM1RZcG9QUERnQ0lHNERkM0kKS1BTcXc0MGQraS9qRTJEeDFRdzBjbU0yWTFmd0FhTSt1TXZzTHRVQ2dZQkh2NFppb0UzbDFRRFRwTnBWbWdRdgp4dEZJVWhITG82OTNXV1VzUnMyVGp0aVFpZ2NZUjlsWUdWcUoxNG9WQlZaWWREdzRleHduOVZwR0h3QVlFYkM3Clgva3lZb05rd2JXdkg3YzVZc3loVXN0akd6dUZWMnRBeFplOHZYUjlRYXVkcFFSTjNGQjBGN3k2ZWFmdWVpYUQKRW84cmoyZEVzTHNrdlN5Vi9qcFpCZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: sdcore-adapter-v4-secret
  labels:
     chart: "sdcore-adapter-v4-4.0.18"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacert: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaRENDQWt3Q0ZFckJHenNYSG8xbDhibVpSbURrRitoMmJzZFdNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakF3T1RJeE1qQXlOek0zV2hjTk16QXdPVEU1TWpBeU56TTMKV2pCck1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVYTUJVR0ExVUVBd3dPCmMyUmpiM0psTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzMKdzZuNVR6UTNNeDZUN3E5V0N4RXNxcFdqYTlFT1YrNEdySExKVS9EaUliTlRCYjd6Y2hPWjU2dVhvWndwVlNldQptR3ordGVDRTU5UzU1SXdteDZSSjNId3F4ditaVk45M3NZZjdFKzkxSTJjY1JqNEd2Skh6NGNWaWZndWcwYUc0CkNwcVdlQlA5NlhhMGZJSm53NnMzc3NsRzI3TitLTzNRdjVvK1YxY3owUDNtblllUHQrUHpUVXlLVk01bUVzSDkKUmp6R1NKUnVJcEIzODhLKzJYVyt0TUFkQiswSXBzektYclVINWJJV0NiaS9oWU1EWEk3R3M3VHROUXc3WmtJbgpzVVE4RllnSlFJMUYxaFZBc0Zqc0tzTjAvcmVzeStZRzgwQ2xNVjJsWEtDci9qVU92MFBXd09Ld3Q4VFlLRE5YCmc0cXhuNlYvelVHcVN0dFcxS2haQWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQlhmVDlUSHhvRUYKbkhmTis3d0FKU2gvQkd2R2NEai9hcU1TRkl0V1U4TDVtZWl4Z1pNd2RMaGpCYmpwa1NhWTV4V3cvTU1Tc1hFQQpwZW1qQ3Z1T08vZ0Q5L0hOcjFlMXhoMTEyTzlhMlFEUnR2NVdnQXgvdWdZZVYvd0dPeFFaUk96TUZWcEF6U1VVCnlRTzVpR1BHR2FWT1pKNkUxaU9TUDVTSm4yWFdqT0JRRWNtVUFWOER0ZFJ6c09XUmRhL1lEZHFYNktEVUx3bDkKaHltOXI5NnNrelMvak1lalYvTVlheGdhVkI1WHFyNmszSlQyM21zQnBrelVJemxPMHJNT2lKOThoMzZ6cXluUQpIblB0cGFaNDVWZ0J4TmxVMzlUODFDMVVqS2h3MUhUV0V1UFg1Ykp5R25OQWRLQmZIZlFWSnJkbkpZVENaZllaCjlDZVJGQ3kzUDg0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzN3Nm41VHpRM014NlQKN3E5V0N4RXNxcFdqYTlFT1YrNEdySExKVS9EaUliTlRCYjd6Y2hPWjU2dVhvWndwVlNldW1Heit0ZUNFNTlTNQo1SXdteDZSSjNId3F4ditaVk45M3NZZjdFKzkxSTJjY1JqNEd2Skh6NGNWaWZndWcwYUc0Q3BxV2VCUDk2WGEwCmZJSm53NnMzc3NsRzI3TitLTzNRdjVvK1YxY3owUDNtblllUHQrUHpUVXlLVk01bUVzSDlSanpHU0pSdUlwQjMKODhLKzJYVyt0TUFkQiswSXBzektYclVINWJJV0NiaS9oWU1EWEk3R3M3VHROUXc3WmtJbnNVUThGWWdKUUkxRgoxaFZBc0Zqc0tzTjAvcmVzeStZRzgwQ2xNVjJsWEtDci9qVU92MFBXd09Ld3Q4VFlLRE5YZzRxeG42Vi96VUdxClN0dFcxS2haQWdNQkFBRUNnZ0VBY3hiYkhHWXJpS3ErYXQzZytCMkVTeG9uRDZ1VnljcnVLMFhUdWgyVlRyclcKaVplZXFPOTRNVHF6OEFwcU9FUzV6cEp1S1BRVndvZERabzBwN1p1NVcvejMwdjdBMC9JZzV1RE1Ea2JGQVBNRQpQK1FLTXNQbEVQNEVWaFFsQ2pwZ2MxaEl5eFkzUngzeGwwWW5rZjhzKzN4QXJOMHFSRWd6OFRvZXl3NStjZGRSCkRNN2toOXJkcTlldUE3bG5veWlUUDhVZ1NEek1yekxuR2o4Q2JKSGNLTHpOd0EyendTSnRCaGRMb1diWUN5Q0QKSkxQRkdzdUlIVjJrdXZIcG1PeHhTK3Z5cFQ5YkVUeGY2MHlldnVnK2F5N0s3Qmd0K2FtWDMwUlUvU0ZrRjZBYQpKSllhTWYyVkFkZzZPMWc1ak5YWjRLdVd2UlVGdDZqeGpPZzhNSTg3dFFLQmdRRG1qWlREM21vZ0Q1TGJUOHV2CnNNZTlRTXAveEd2UmlBaU9rYWxwRHJzRjl6Z29iMGZIOW5UZjFvNzY3T2pZSndSbUJFMXZRUFJkL0tGTkpRL2QKenVseVI1cmRXS29MZW4vcStmWUpTZGYxZ2w3WkRvbUZTcjFJVkJrc2FiNGlmUTliU0JuNmQybjVQS2VubFc5TQphSk1qNWl6ZXNrdVJsQ3Nqa0JzdVUrdm9vd0tCZ1FETURBbkNueE9kSS9yeVk2d3g1V1hzTVBoMFJMa2NYUG5xCmQwMGlWaktOaHJwQlZ3dmg4VkdBdVVmcEdvRW1JMkkzV1d3cm1BcDZ0OExyZEhQUWxRRFMvZGxtWTErQ2FyRjcKc29DcHc4VWpoS2lCMThqVVBld2FZTmJyNW9sVmRZQy9OdDcwSkp3eHZRWk5DbkN3Q2ZKcGdrRzgzVXRYU0ZzQQpXS0lMVEZrTzB3S0JnUURFb3d5MjRnUHh4RmFrNXJINjd2UHMzazNZRzFjNkpxUGx0U2FnakFmSFZzdDI4VEp2CndpeDhuU3JscVJvUEFYZ202cFNBeHcyays4czNXTnpuZVlweUJkQjM2UjlmR3VQdkxiSkN5ZEIvZk9vWWh1V1QKNGVMK3hYdVMvYjFFL1JVVDdiTDZoTTdGM0kzQnlScGNPUFVHTVZNanZUM210RkQyeS9uaTBZRHJzUUtCZ0NCZgpzSlMrWklCRUd5YW1CY1lNM1hUeCtCbUtaY3hJUENhbE13bkZuMU94RXBBWFhYMUZxbWEvL3RiUEs3cC9WcS90CmNpb2dmMWtsR3JuOHlmdElDTTl4RXpNWmhTZk9BY2JjZFdsNTlDZEVmdS9LNnNReDV1bndmMmtDTkx2b1hycjMKMjd2a3F4dUJJQ1ROQ1VBRTgvOGxlWVNibjc2RGJsekpzendUcXZXZEFvR0JBS3NjWVVDOXd5cmNlcnNWSEZtRApMOHNiYS84YWxRL29yWDkvRXgzRnloZThIbjQ4Nzd6bnEyQ2l4bmQ2ekExM28wbUpJTVJ0S09YM0NDNlhHMVdJCmVDMFdnQVVuYmRXbGdJeXJBbnlZUXl0U1dFSXRKSDduQklPY0I3QnZrcVZIZDEveTAvT01nZURpQkk3L21IYjkKRVpIQTFTTXZ6MXlFS1VtNTNEeUNoOE5qCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/secret.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Secret
metadata:
  name: subscriber-proxy-secret
  labels:
     chart: "subscriber-proxy-0.0.6"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  
  
  tls.cacert: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtnQ0NRRGU5OWZTTjlxeFNUQU5CZ2txaGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhFakFRQmdOVkJBY01DVTFsYm14dlVHRnlhekVNTUFvR0ExVUVDZ3dEVDA1RwpNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlkyRXViM0JsYm01bGRIZHZjbXRwCmJtY3ViM0puTUI0WERURTVNRFF4TVRBNU1EWXhNMW9YRFRJNU1EUXdPREE1TURZeE0xb3djakVMTUFrR0ExVUUKQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVJJd0VBWURWUVFIREFsTlpXNXNiMUJoY21zeEREQUtCZ05WQkFvTQpBMDlPUmpFVU1CSUdBMVVFQ3d3TFJXNW5hVzVsWlhKcGJtY3hIakFjQmdOVkJBTU1GV05oTG05d1pXNXVaWFIzCmIzSnJhVzVuTG05eVp6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1FZzdDWlIKWDhZK3N5S0hhUUNoNm1OSUwxRDA2NXRyd1g4Um51S00ya0J3U3UwMzR6ZWZRQVBsb1d1Z1NvSmdKbmY1ZmUwagpuVUQ4Z04zU204WFJoQ2t2ZjY3cHpmYWJndzRuOGVKbUhTY3lML3VneUV4QjZLYWh3em4zN2J0M29UM2dTcWhyCjZQVXpuV0o4ZnZmVnVDSFpaa3YvSFBScDRleUFjR3piSjRUdUIwZ280czZWRTBXVTVPQ3hDU2xBaUszbHZwVnIKM0RPTGRZTFZvQ2E1cThDdGwzd1hEcmZUTHc1L0JwZnJnOWZGOUVEMi9ZS0lkVjhLWjJraS9nd0VPUXFXY0twOAowTGtUbGZPV3NkR2pwNG9wUHVQVDduak1CR1hNSnpKOC9KMWUxYUp2SXNvQjduOFhyZnZrTmlXTDVVM2ZNNE43ClVaTjlqZmNsN1VMbW03Y0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUloNkZqa1F1VGZYZGRtWlkKRllwb1Rlbi9WRDVpdTJYeGMxVGV4d21LZUgrWXRhS3AxWms4UFRnYkN0TUV3RWl5c2xmZUhUTXRPRGZucFVJawpEd3Z0QjRXMFBBbnJlUnNxaDlNQnpkVTZZWm16R3laOTJ2U1VCM3l1a2tIYVl6eWplS00wQXdnVmw5eVJORVp3ClkvT00wNzBoSlhYekpoM2VKcExsOWRsVWJNS3phb0FoMmJaeDZ5M1pKSVpGcy96cnBHZmc0bHZCQXZmTy81OWkKbXhKOWJRQlNOM1UySHdwNmlvT1F6UDBMcGxsZlh0eDlONUxhbldwQjBjdS9ITjl2QWd0cDNrUlRCWkQwTTFYSQpDdGl0OGJYVjdNeisxaUdxb3lVaGZDWWNDU2p1V1RnQXh6aXIraHJkbjd1TzY3SHY0bmRDb1NqNFNRYUdrYTNXCmVFZlZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
  
  tls.crt: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs0Q0ZBR0ptcDRIYXRoMDNZU200ZHVuSXcxMGRrc3lNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVFdWdWJHOVFZWEpyTVF3dwpDZ1lEVlFRS0RBTlBUa1l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SNHdIQVlEVlFRRERCVmpZUzV2CmNHVnVibVYwZDI5eWEybHVaeTV2Y21jd0hoY05NakV3T0RFMk1EWXhOakV6V2hjTk16RXdPREUwTURZeE5qRXoKV2pCdE1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNVMWxibXh2VUdGeQphekVNTUFvR0ExVUVDZ3dEVDA1R01SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVaTUJjR0ExVUVBd3dRCmMzVmljMk55YVdKbGNpMXdjbTk0ZVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU5KT3dSQ3U5QkVUb1dTTjNlaXp1UWlXZWVyb00yK25UVDg5dDJmVzJQd2lNSTk4YVRRTndWemEwNExNdGhJdQpPdFBvR0duSmFkV1pBaTZoUHFaWUhXQUkvcDhkZkUrZUUyWk4rak9pZlE0azQ3Sk9LbzhONTJUUjRjNjlhRU1ICm9hOTIyYVhac2FRa1lDTDBYaDNoSjdpVjZzRUxWWlRSeFA5eE0yeDJ5SE56UmlES1M3YjIzay9tN0JTNnpIbS8Ka3J1M0Y3VzA4RlFBeEJvKzhSbGhKKytGNWNxdWJORDJHaXdiamVsNitzc2JYaDRhSHdkRnBwdnJXL0xhZUNuYwowRXpnTWVmQlpuVUt4aHpWMHMyQ2pDSGpIRHVzSyt1MGVkMGtEd0xKY0JQTkl6WXl3WnZvcVVycS9EMk5rY1hMCm5adjVPTlhEL2JDbFRhaHIxZVBxZERjQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBcFRWVGxIcEIKMHdmZ3hsZXJKK2NsZllzNVRNb3lVOVJHZzBmbDdkL3NIay9zaG9oVjVON3ZhUENKTDNUdnJXTnB3dndUVUhrLwp6ZGgrT1Zkamdwc2NZSmdlUW5BYW9lOUNXTHFKYlZwWUdJZE9DT1pBNWVOVFNtT2p4UlV1bmhQVktIMlZFQmUzClJ1QWcwS2pRVkF5NjNObWMyMEwzOGpoTm5xcjlrVmtETU1SQTB1U21LYTA1OFlIRUJiQjFONGR3d3FPN2tQaW4KVlRHWE1MdUxiMFMveWZqS3F0UjZ3T2dlQS8wZ3UxN0RKZEpvUkd5YlBPMTVrdnZ5NjdtNWdtcjlXWlRhSmFaago4RXBITzBaTUpsU1NWL0lQWkdxUkR0QldYWnVOdVVQUXVHVXZHdkpMWGZnZG8rYUw5bEtuTlFLOXYwRkFwWHJjCjlNa3JyMkZ5OFdkZmtRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
  
  tls.key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRFNUc0VRcnZRUkU2RmsKamQzb3M3a0lsbm5xNkROdnAwMC9QYmRuMXRqOElqQ1BmR2swRGNGYzJ0T0N6TFlTTGpyVDZCaHB5V25WbVFJdQpvVDZtV0IxZ0NQNmZIWHhQbmhObVRmb3pvbjBPSk9PeVRpcVBEZWRrMGVIT3ZXaERCNkd2ZHRtbDJiR2tKR0FpCjlGNGQ0U2U0bGVyQkMxV1UwY1QvY1ROc2RzaHpjMFlneWt1Mjl0NVA1dXdVdXN4NXY1Szd0eGUxdFBCVUFNUWEKUHZFWllTZnZoZVhLcm16UTlob3NHNDNwZXZyTEcxNGVHaDhIUmFhYjYxdnkybmdwM05CTTRESG53V1oxQ3NZYwoxZExOZ293aDR4dzdyQ3ZydEhuZEpBOEN5WEFUelNNMk1zR2I2S2xLNnZ3OWpaSEZ5NTJiK1RqVncvMndwVTJvCmE5WGo2blEzQWdNQkFBRUNnZ0VBVmRQaUl1YmpvRng4ajBiK2UwdHRoajJ5LzlWSHVKZDBoUXl3M3VYbG8vQm8KRlFiWEFIRmtxbnA3dTNQRUVtTmZpcis3eHVCMkdyL1pEaUtzS01McEtocEJuN291MDJkVnozaWZWWmRJcGc4VQpCZDYwcTdFbThCUmZyVG5MWlIrbU1xKzBYMlVhaER4OEo0ZkhLVGFNT1Y2bGNhY29oQldmNmdmT3pzTWpSMG5VCnQxTFFucHVlM2lGQmN3dDI3MUI5NHNvdHR1SkNzQkxlRzR2NzdMNEZTQWxuL0ovM3NoMWo0NHJDQk5DbzRvVjUKM1hOdmRZN3U5SE1iTjhjN3pYeWNPQk4yYzQ5TXJ1c3ZqUVY4YVkzd1VUNjNaZUMzMGd0VHdTZ2pKSjY1dkVORgpZeVBFSG8vMnFaeG9uaXFnQTRPYWd4UTloL1hCbEFBN0d2dXk2eVB4Y1FLQmdRRHNQSUJueVJUc0M3elJhazByCjJTQ1M1UjUwRTJDWUZjaXFSWkd6c0VIY0R6VjBtOTBTaGlIT3BiTGNLMmF1dDJ1OHJPRHB4M0U1MlplenF0QUEKWVN6WC9IUWFPZ3AvUXFIZFZad0VZRjBFWGlEa01nQmwxNzVhUHNTYWJCQVhIa3g0V0wzdkRaNkFqblR3OVU2cQpyR0l1ZVZkNUU1Q0dFTWJLalJUOVphTzJzd0tCZ1FEajV1OVRPNEZmNjRmdG8yNnBUNWdUeGVjajJCVlpXYUxoCkRHdWZZTGdPeFdSOEV6SGViNXlnZ3VGbE8xaEwwUlY4c3FrK1doY2RRNCtZOEhuc09XWFFCOVc0QXM3RnJPTm0Kc3dBMTJLYU9ReEcydld4UlFvR2U3emNLcE5WdFRIRFNBamdXczdIRXkxMEF0YkdiTFRXZEYxbHdub3RiZ1hQawoxdTcxRU5pdWJRS0JnUURYR0Y5eUlFekVnQXQwUWUzeU5zako5NFE2L0VtL01GWjljc3F2YVpVTjRXc3l1WmdZCi9iaGFoOVRMVTFrelRCNzB0QlExeURyNENYOXZQK0FUK0diMFloRDBzRlJPZTBVV1dwU3NCM0dxUUdxQ1hHU3cKVmpnanczTVBoOFUreDMrcE5HUDcvZEtNQ3ltL0hCeDhtbWpyRitEbGhVTGFUdnd5QVROVFpmQWlzUUtCZ1FETAp0Wnl1dFQzTFUyakl6WkVZM2dCOWpDUXpNZTdEVXcvNFFYWGhuRDVwVlorZ0dEZzNMMlM5UkwvY0VOTzMwVWgzCmtlc2R4TUZzY3Z0a0pXK1Y2eWhLYnZabDZIeVN6UnJtclpHK2o4MHcxRnA5RVl4RWhrSCtvcXg4WXlJeTlHVFUKRXcrM214K0hYSS9oRm9lT3dUWnZHSFBsNnBGK1ZaUVdOTmliVFZlaGNRS0JnUUNoUTRXT21SQjBDbVkyQUZuKwphYWd4VGlIR0JDdlZoeXhTOU5OVjNpR1FNOGgyaXRlb3hiSkY5OXA0UlpoRnFtRkxXM1h1aFc0eWFhU1hjeEZkCnNrZjI3ajE1Q2JjSEx0NEt6SExIZkZmaVlNWFBhQ0ZlZlVHajdFZVZ2UUpNTTJLY1JyWDhabHNucGhPTzllY24KWW9FM3E3dHVZd2xZbWNBV1lNRjV1RWFhK1E9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=='
  
type: Opaque
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: subscriber-proxy-keycloak-secret
  labels:
     chart: "subscriber-proxy-0.0.6"
     release: "aether-roc-umbrella"
     heritage: "Helm"
data:
  username: "YWxpY2VhQG9wZW5uZXR3b3JraW5nLm9yZw=="
  password: "cGFzc3dvcmQ="
type: Opaque
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/configmap.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-api-config
  labels:
    app: aether-roc-api
    chart: "aether-roc-api-1.2.12"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  logging.yaml: |-
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/configmap.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-gui-v4
  namespace: aether-roc
  labels:
    release: aether-roc-umbrella
    heritage: Helm
data:
  server-block.conf: |-
    server {
        listen 80;
        ssl_certificate /usr/share/certs/aether-roc-gui.crt;
        ssl_certificate_key /usr/share/certs/aether-roc-gui.key;
        location /ws {
            proxy_pass http://aether-roc-websocket:80/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        location /grafana/ {
            proxy_pass http://aether-roc-umbrella-grafana:80/;
            proxy_http_version 1.1;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_hide_header 'X-Frame-Options';
            add_header X-Frame-Options SAMEORIGIN;
        }
        location /prometheus-acc/ {
            proxy_pass http://prom-label-proxy-acc:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            add_header X-Frame-Options SAMEORIGIN;
        }
        location /prometheus-amp/ {
            proxy_pass http://prom-label-proxy-amp:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            add_header X-Frame-Options SAMEORIGIN;
        }
        location /prometheus-ace1/ {
            proxy_pass http://aether-roc-umbrella-prometheus-ace-server:80/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            add_header X-Frame-Options SAMEORIGIN;
        }
        location / {
          root /usr/share/nginx/html;
        }
        location /rs/nav/uiextensions {
          root /usr/share/nginx/html;
        }
        location /kubernetes-api/ {
            proxy_pass http://localhost:8001/;
            proxy_http_version 1.1;
        }
        location /aether-roc-api/ {
            proxy_pass http://aether-roc-api:8181/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_connect_timeout       3600;
            proxy_send_timeout          3600;
            proxy_read_timeout          3600;
            send_timeout                3600;
        }
        
    }
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/configmap.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-websocket-config
  labels:
    app: aether-roc-websocket
    chart: "aether-roc-websocket-1.0.1"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  logging.yaml: |-
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/charts/grafana/templates/configmap-dashboard-provider.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  name: aether-roc-umbrella-grafana-config-dashboards
  namespace: aether-roc
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
    - name: 'sidecarProvider'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      allowUiUpdates: false
      updateIntervalSeconds: 30
      options:
        foldersFromFilesStructure: false
        path: /tmp/dashboards
---
# Source: aether-roc-umbrella/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [auth]
    disable_login_form = true
    oauth_auto_login = true
    [auth.anonymous]
    enabled = false
    hide_version = false
    [auth.generic_oauth]
    allow_sign_up = true
    allowed_domains = opennetworking.org
    api_url = http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/userinfo
    auth_url = http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/auth
    client_id = aether-roc-gui
    empty_scopes = false
    enabled = true
    name = KeyCloak
    scopes = openid profile email groups
    token_url = http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/token
    [auth.jwt]
    cache_ttl = 60m
    email_claim = email
    enabled = false
    header_name = X-JWT-Assertion
    jwk_set_url = https://keycloak.opennetworking.org/auth/realms/master/protocol/openid-connect/certs
    username_claim = name
    [auth.proxy]
    auto_sign_up = true
    enable_login_token = true
    enabled = false
    header_name = X-WEBAUTH-USER
    header_property = username
    [grafana_net]
    url = https://grafana.net
    [log]
    level = debug
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [security]
    allow_embedding = true
    [server]
    domain = aether-roc-gui:8183
    root_url = %(protocol)s://%(domain)s/grafana/
    serve_from_sub_path = true
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-grafana-test
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  run.sh: |-
    @test "Test Health" {
      url="http://aether-roc-umbrella-grafana/api/health"

      code=$(wget --server-response --spider --timeout 10 --tries 1 ${url} 2>&1 | awk '/^  HTTP/{print $2}')
      [ "$code" == "200" ]
    }
---
# Source: aether-roc-umbrella/charts/onos-cli/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-cli
  namespace: aether-roc
data:
  {}
---
# Source: aether-roc-umbrella/charts/onos-config/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-config-config
  labels:
    app: onos-config
    chart: "onos-config-1.4.6"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  onos.yaml: ""
  logging.yaml: |-
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/charts/onos-config/templates/openpolicyagent.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-config-openpolicyagent
  labels:
    chart: "onos-config-1.4.6"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  testdevice-1.0.0.rego: |-
    # Copyright 2021-present Open Networking Foundation.
    #//
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
  
    package testdevice_1_0_0
  
    countlist2a[numelems] {
        numelems := count(input.cont1a.list2a)
    }
  
    countlist4[numelems] {
        numelems := count(input.cont1a.list4)
    }
  
    allowed[config] {
        list2a := list2as # refer to rule below
        list4 := list4s
        list5 := list5s
        config := {
            "cont1a": {
                "cont2a": cont2aLeafs,
                "leaf1a": input.cont1a.leaf1a,
                "list2a": list2a,
                "list4": list4,
                "list5": list5,
            },
            "leafAtTopLevel": input.leafAtTopLevel,
        }
    }
  
    cont2aLeafs[name] = val {
        val := input.cont1a.cont2a[i]
        name := i
    }
  
    leaf2aRef[leaf2a] = val{
        leaf2a := "leaf2a"
        val := input.cont1a.cont2a.leaf2a
        leaf2a != null
    }
  
    leaf2cRef[leaf2c] = val{
        leaf2c := "leaf2c"
        val := input.cont1a.cont2a.leaf2c
        leaf2c != null
    }
  
    list2as[list2a] {
        list2a := input.cont1a.list2a[_]
        list4 := input.cont1a.list4[_]
        # Only allow instances of list2a that have name == id of list4
        list2a.name == list4.id
    }
  
    list4s[list4] {
        list4 := input.cont1a.list4[_]
        list2a := input.cont1a.list2a[_]
        # Only allow instances of list4 that have id == name of list2a
        list2a.name == list4.id
    }
  
    list5s[list5] {
        list5 := input.cont1a.list5[_]
    }
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-topo-config
  labels:
    app: onos-topo
    chart: "onos-topo-1.1.109"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  onos.yaml: ""
  logging.yaml: |-
    
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
  namespace: aether-roc
data:
  alerting_rules.yml: |
    groups:
    - name: UeAlerts
      rules:
      - alert: UeThroughputLow
        annotations:
          description: UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput has been
            low for more than 1 minutes.
          summary: UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput low
        expr: ue_throughput < 9000
        for: 1m
        labels:
          severity: info
      - alert: UeLatencyHigh
        annotations:
          description: UE {{ $labels.id }} on VCS {{ $labels.slice }} latency has been
            high for more than 1 minutes.
          summary: UE {{ $labels.id }} on VCS {{ $labels.slice }} latency high
        expr: ue_latency > 8
        for: 1m
        labels:
          severity: info
    - name: VcsAlerts
      rules:
      - alert: VcsThroughputLow
        annotations:
          description: VCS {{ $labels.vcs_id }} throughput has been low for more than
            1 minutes.
          summary: VCS {{ $labels.vcs_id }} throughput low
        expr: vcs_throughput < 9000
        for: 1m
        labels:
          severity: info
      - alert: VcsLatencyHigh
        annotations:
          description: VCS {{ $labels.vcs_id }} latency has been high for more than 1
            minutes.
          summary: VCS {{ $labels.vcs_id }} latency high
        expr: vcs_latency > 30
        for: 1m
        labels:
          severity: warn
      - alert: VcsJitterHigh
        annotations:
          description: VCS {{ $labels.vcs_id }} jitter has been high for more than 1 minutes.
          summary: VCS {{ $labels.vcs_id }} jitter high
        expr: vcs_jitter > 8
        for: 1m
        labels:
          severity: page
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: demo-exporter
      scrape_interval: 2s
      static_configs:
      - targets:
        - demo-exporter:2112
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: aether-roc
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus-acc
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
          regex: .*
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: "9093"
          action: keep
  recording_rules.yml: |
    {}
  rules: |
    {}
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
  namespace: aether-roc
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: demo-exporter
      scrape_interval: 2s
      static_configs:
      - targets:
        - demo-exporter:2112
    - job_name: kube-state-metrics
      scrape_interval: 2s
      static_configs:
      - targets:
        - aether-roc-umbrella-kube-state-metrics:8080
  recording_rules.yml: |
    {}
  rules: |
    {}
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
  namespace: aether-roc
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: demo-exporter
      scrape_interval: 2s
      static_configs:
      - targets:
        - demo-exporter:2112
  recording_rules.yml: |
    {}
  rules: |
    {}
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/configmap.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: sdcore-adapter-v4-targetconfig
  labels:
    app: sdcore-adapter-v4
    chart: "sdcore-adapter-v4-4.0.18"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  
  
  empty_config.json: '{
}
'
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdcore-adapter-v4-logconfig
  labels:
    app: sdcore-adapter-v4
    chart: "sdcore-adapter-v4-4.0.18"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  logging.yaml: |-
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: subscriber-proxy-logconfig
  labels:
    app: subscriber-proxy
    chart: "subscriber-proxy-0.0.6"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  logging.yaml: |-
    loggers:
      root:
        level: info
        output:
          stdout:
            sink: stdout
    sinks:
      stdout:
        stdout: {}
        type: stdout
---
# Source: aether-roc-umbrella/templates/alertmanager-configmap.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-alertmanager
  namespace: aether-roc
data:
  alertmanager.yml: |-
    global: {}
      # slack_api_url: ''

    receivers:
      - name: default-receiver
        webhook_configs:
        - url: http://aether-roc-websocket/webhook

    route:
      group_wait: 10s
      group_interval: 1m
      receiver: default-receiver
      repeat_interval: 3h
---
# Source: aether-roc-umbrella/templates/dashboards-templated.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-dashboards-templated
  namespace: aether-roc
  labels:
          grafana_dashboard: "aether-roc-gui"
data:
  site-availability.json: "{\n    \n        \"annotations\": {\n            \"list\":
    [\n                {\n                    \"builtIn\": 1,\n                    \"datasource\":
    \"-- Grafana --\",\n                    \"enable\": true,\n                    \"hide\":
    true,\n                    \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                    \"name\":
    \"Annotations & Alerts\",\n                    \"type\": \"dashboard\"\n                }\n
    \           ]\n        },\n        \"description\": \"\",\n        \"editable\":
    false,\n        \"gnetId\": null,\n        \"graphTooltip\": 0,\n        \"links\":
    [],\n        \"panels\": [\n            {\n                \"datasource\": \"$ds\",\n
    \               \"description\": \"Cluster Availability\",\n                \"fieldConfig\":
    {\n                    \"defaults\": {\n                        \"color\": {\n                            \"mode\":
    \"palette-classic\"\n                        },\n                        \"custom\":
    {\n                            \"axisLabel\": \"\",\n                            \"axisPlacement\":
    \"auto\",\n                            \"barAlignment\": 0,\n                            \"drawStyle\":
    \"line\",\n                            \"fillOpacity\": 0,\n                            \"gradientMode\":
    \"none\",\n                            \"hideFrom\": {\n                                \"legend\":
    false,\n                                \"tooltip\": false,\n                                \"viz\":
    false\n                            },\n                            \"lineInterpolation\":
    \"linear\",\n                            \"lineWidth\": 1,\n                            \"pointSize\":
    5,\n                            \"scaleDistribution\": {\n                                \"type\":
    \"linear\"\n                            },\n                            \"showPoints\":
    \"auto\",\n                            \"spanNulls\": false,\n                            \"stacking\":
    {\n                                \"group\": \"A\",\n                                \"mode\":
    \"none\"\n                            },\n                            \"thresholdsStyle\":
    {\n                                \"mode\": \"off\"\n                            }\n
    \                       },\n                        \"mappings\": [],\n                        \"thresholds\":
    {\n                            \"mode\": \"absolute\",\n                            \"steps\":
    [\n                                {\n                                    \"color\":
    \"green\",\n                                    \"value\": null\n                                },\n
    \                               {\n                                    \"color\":
    \"red\",\n                                    \"value\": 80\n                                }\n
    \                           ]\n                        }\n                    },\n
    \                   \"overrides\": []\n                },\n                \"gridPos\":
    {\n                    \"h\": 8,\n                    \"w\": 12,\n                    \"x\":
    0,\n                    \"y\": 0\n                },\n                \"id\": 1,\n
    \               \"options\": {\n                    \"legend\": {\n                        \"calcs\":
    [],\n                        \"displayMode\": \"list\",\n                        \"placement\":
    \"bottom\"\n                    },\n                    \"tooltip\": {\n                        \"mode\":
    \"single\"\n                    }\n                },\n                \"targets\":
    [\n                    {\n                        \"exemplar\": true,\n                        \"expr\":
    \"sum by (node) (kube_node_status_condition{condition=~\\\"Ready\\\",status=~\\\"true\\\"})\",\n
    \                       \"interval\": \"\",\n                        \"legendFormat\":
    \"{{node}}\",\n                        \"queryType\": \"randomWalk\",\n                        \"refId\":
    \"A\"\n                    }\n                ],\n                \"title\": \"Cluster
    Nodes Status\",\n                \"type\": \"timeseries\"\n            }\n        ],\n
    \       \"refresh\": \"\",\n        \"schemaVersion\": 30,\n        \"style\": \"light\",\n
    \       \"tags\": [],\n        \"templating\": {\n            \"list\": [\n                {\n
    \                   \"label\" : \"Datasource\",\n                    \"multi\" :
    false,\n                    \"name\" : \"ds\",\n                    \"type\" : \"datasource\",\n
    \                   \"query\": \"prometheus\",\n                    \"queryValue\":
    \"\",\n                    \"refresh\": 1,\n                    \"regex\": \"\"\n
    \               }\n            ]\n        },\n        \"time\": {\n            \"from\":
    \"now-15m\",\n            \"to\": \"now\"\n        },\n        \"timepicker\": {},\n
    \       \"timezone\": \"\",\n        \"title\": \"Cluster Health\",\n        \"uid\":
    \"site-availability\",\n        \"version\": 1\n    }\n\n\n"
  site-monitoring.json: "{\n    \n        \"annotations\": {\n            \"list\":
    [\n                {\n                    \"builtIn\": 1,\n                    \"datasource\":
    \"-- Grafana --\",\n                    \"enable\": true,\n                    \"hide\":
    true,\n                    \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                    \"name\":
    \"Annotations & Alerts\",\n                    \"type\": \"dashboard\"\n                }\n
    \           ]\n        },\n        \"description\": \"\",\n        \"editable\":
    false,\n        \"gnetId\": null,\n        \"graphTooltip\": 0,\n        \"links\":
    [],\n        \"panels\": [\n            {\n                \"datasource\": \"$ds\",\n
    \               \"description\": \"E2E Tests\",\n                \"fieldConfig\":
    {\n                    \"defaults\": {\n                        \"color\": {\n                            \"mode\":
    \"palette-classic\"\n                        },\n                        \"custom\":
    {\n                            \"axisLabel\": \"\",\n                            \"axisPlacement\":
    \"auto\",\n                            \"barAlignment\": 0,\n                            \"drawStyle\":
    \"line\",\n                            \"fillOpacity\": 0,\n                            \"gradientMode\":
    \"none\",\n                            \"hideFrom\": {\n                                \"legend\":
    false,\n                                \"tooltip\": false,\n                                \"viz\":
    false\n                            },\n                            \"lineInterpolation\":
    \"linear\",\n                            \"lineWidth\": 1,\n                            \"pointSize\":
    5,\n                            \"scaleDistribution\": {\n                                \"type\":
    \"linear\"\n                            },\n                            \"showPoints\":
    \"auto\",\n                            \"spanNulls\": false,\n                            \"stacking\":
    {\n                                \"group\": \"A\",\n                                \"mode\":
    \"none\"\n                            },\n                            \"thresholdsStyle\":
    {\n                                \"mode\": \"off\"\n                            }\n
    \                       },\n                        \"mappings\": [],\n                        \"thresholds\":
    {\n                            \"mode\": \"absolute\",\n                            \"steps\":
    [\n                                {\n                                    \"color\":
    \"green\",\n                                    \"value\": null\n                                },\n
    \                               {\n                                    \"color\":
    \"red\",\n                                    \"value\": 80\n                                }\n
    \                           ]\n                        }\n                    },\n
    \                   \"overrides\": []\n                },\n                \"gridPos\":
    {\n                    \"h\": 9,\n                    \"w\": 12,\n                    \"x\":
    0,\n                    \"y\": 0\n                },\n                \"id\": 1,\n
    \               \"options\": {\n                    \"legend\": {\n                        \"calcs\":
    [],\n                        \"displayMode\": \"list\",\n                        \"placement\":
    \"bottom\"\n                    },\n                    \"tooltip\": {\n                        \"mode\":
    \"single\"\n                    }\n                },\n                \"targets\":
    [\n                    {\n                        \"exemplar\": true,\n                        \"expr\":
    \"sum by (name) (aetheredge_e2e_tests_ok{name=~\\\"$agents\\\"})\",\n                        \"interval\":
    \"\",\n                        \"legendFormat\": \"{{name}}\",\n                        \"queryType\":
    \"randomWalk\",\n                        \"refId\": \"A\"\n                    }\n
    \               ],\n                \"title\": \"Monitoring agents E2E Test\",\n
    \               \"type\": \"timeseries\"\n            }\n        ],\n        \"refresh\":
    \"\",\n        \"schemaVersion\": 30,\n        \"style\": \"light\",\n        \"tags\":
    [],\n        \"templating\": {\n            \"list\": [\n                {\n                    \"label\"
    : \"Agents\",\n                    \"multi\" : true,\n                    \"name\"
    : \"agents\",\n                    \"type\" : \"query\",\n                    \"datasource\":
    \"$ds\",\n                    \"definition\": \"label_values(aetheredge_e2e_tests_ok,
    name)\",\n                    \"query\": {\n                        \"query\": \"label_values(aetheredge_e2e_tests_ok,
    name)\",\n                        \"refId\": \"StandardVariableQuery\"\n                    },\n
    \                   \"refresh\": 1,  \n                    \"sort\" : 1\n                },\n\t\t{\n
    \                   \"label\" : \"Datasource\",\n                    \"multi\" :
    false,\n                    \"name\" : \"ds\",\n                    \"type\" : \"datasource\",\n
    \                   \"query\": \"prometheus\",\n                    \"queryValue\":
    \"\",\n                    \"refresh\": 1,\n                    \"regex\": \"\"\n
    \               }\n\t    ] \n        },\n        \"time\": {\n            \"from\":
    \"now-15m\",\n            \"to\": \"now\"\n        },\n        \"timepicker\": {},\n
    \       \"timezone\": \"\",\n        \"title\": \"E2E Tests\",\n        \"uid\":
    \"site-monitoring\",\n        \"version\": 1\n    }\n\n\n"
  site-small-cells.json: "{\n    \n        \"annotations\": {\n            \"list\":
    [\n                {\n                    \"builtIn\": 1,\n                    \"datasource\":
    \"-- Grafana --\",\n                    \"enable\": true,\n                    \"hide\":
    true,\n                    \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                    \"name\":
    \"Annotations & Alerts\",\n                    \"type\": \"dashboard\"\n                }\n
    \           ]\n        },\n        \"description\": \"\",\n        \"editable\":
    false,\n        \"gnetId\": null,\n        \"graphTooltip\": 0,\n        \"links\":
    [],\n        \"panels\": [\n            {\n                \"datasource\": \"$ds\",\n
    \               \"description\": \"Small Cells connectivity on MME\",\n                \"fieldConfig\":
    {\n                    \"defaults\": {\n                        \"color\": {\n                            \"mode\":
    \"palette-classic\"\n                        },\n                        \"custom\":
    {\n                            \"axisLabel\": \"\",\n                            \"axisPlacement\":
    \"auto\",\n                            \"barAlignment\": 0,\n                            \"drawStyle\":
    \"line\",\n                            \"fillOpacity\": 0,\n                            \"gradientMode\":
    \"none\",\n                            \"hideFrom\": {\n                                \"legend\":
    false,\n                                \"tooltip\": false,\n                                \"viz\":
    false\n                            },\n                            \"lineInterpolation\":
    \"linear\",\n                            \"lineWidth\": 1,\n                            \"pointSize\":
    5,\n                            \"scaleDistribution\": {\n                                \"type\":
    \"linear\"\n                            },\n                            \"showPoints\":
    \"auto\",\n                            \"spanNulls\": false,\n                            \"stacking\":
    {\n                                \"group\": \"A\",\n                                \"mode\":
    \"none\"\n                            },\n                            \"thresholdsStyle\":
    {\n                                \"mode\": \"off\"\n                            }\n
    \                       },\n                        \"mappings\": [],\n                        \"thresholds\":
    {\n                            \"mode\": \"absolute\",\n                            \"steps\":
    [\n                                {\n                                    \"color\":
    \"green\",\n                                    \"value\": null\n                                },\n
    \                               {\n                                    \"color\":
    \"red\",\n                                    \"value\": 80\n                                }\n
    \                           ]\n                        }\n                    },\n
    \                   \"overrides\": []\n                },\n                \"gridPos\":
    {\n                    \"h\": 9,\n                    \"w\": 12,\n                    \"x\":
    0,\n                    \"y\": 0\n                },\n                \"id\": 1,\n
    \               \"options\": {\n                    \"legend\": {\n                        \"calcs\":
    [],\n                        \"displayMode\": \"list\",\n                        \"placement\":
    \"bottom\"\n                    },\n                    \"tooltip\": {\n                        \"mode\":
    \"single\"\n                    }\n                },\n                \"targets\":
    [\n                    {\n                        \"exemplar\": true,\n                        \"expr\":
    \"sum by (enbname) (mme_number_of_enb_attached{enb_state=\\\"Active\\\", enbname=~\\\"$enb\\\"})\",\n
    \                       \"interval\": \"\",\n                        \"legendFormat\":
    \"{{enbname}}\",\n                        \"queryType\": \"randomWalk\",\n                        \"refId\":
    \"A\"\n                    }\n                ],\n                \"title\": \"Site
    Small Cells connectivity status\",\n                \"type\": \"timeseries\"\n            }\n
    \       ],\n        \"refresh\": \"\",\n        \"schemaVersion\": 30,\n        \"style\":
    \"light\",\n        \"tags\": [],\n        \"templating\": {\n            \"list\":
    [\n                {\n                    \"label\" : \"ENB\",\n                    \"multi\"
    : true,\n                    \"name\" : \"enb\",\n                    \"type\" :
    \"query\",\n                    \"datasource\": \"$ds\",\n                    \"definition\":
    \"label_values(mme_number_of_enb_attached, enbname)\",\n                    \"query\":
    {\n                        \"query\": \"label_values(mme_number_of_enb_attached,
    enbname)\",\n                        \"refId\": \"StandardVariableQuery\"\n                    },\n
    \                   \"refresh\": 1,  \n                    \"sort\" : 1\n                },\n\t\t{\n
    \                   \"label\" : \"Datasource\",\n                    \"multi\" :
    false,\n                    \"name\" : \"ds\",\n                    \"type\" : \"datasource\",\n
    \                   \"query\": \"prometheus\",\n                    \"queryValue\":
    \"\",\n                    \"refresh\": 1,\n                    \"regex\": \"\"\n
    \               }\n\t    ] \n        },\n        \"time\": {\n            \"from\":
    \"now-15m\",\n            \"to\": \"now\"\n        },\n        \"timepicker\": {},\n
    \       \"timezone\": \"\",\n        \"title\": \"ENB Status\",\n        \"uid\":
    \"site-small-cell\",\n        \"version\": 1\n    }\n\n\n"
  ue-connectivity.json: "{\n \n    \"annotations\": {\n      \"list\": [\n        {\n
    \         \"builtIn\": 1,\n          \"datasource\": \"-- Grafana --\",\n          \"enable\":
    true,\n          \"hide\": true,\n          \"iconColor\": \"rgba(0, 211, 255, 1)\",\n
    \         \"name\": \"Annotations & Alerts\",\n          \"type\": \"dashboard\"\n
    \       }\n      ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\":
    0,\n    \"links\": [],\n    \"panels\": [\n      {\n        \"datasource\": \"$ds\",\n
    \       \"description\": \"UE Connectivity\",\n        \"fieldConfig\": {\n          \"defaults\":
    {\n            \"color\": {\n              \"mode\": \"palette-classic\"\n            },\n
    \           \"custom\": {\n              \"axisLabel\": \"\",\n              \"axisPlacement\":
    \"auto\",\n              \"barAlignment\": 0,\n              \"drawStyle\": \"line\",\n
    \             \"fillOpacity\": 0,\n              \"gradientMode\": \"none\",\n              \"hideFrom\":
    {\n                \"legend\": false,\n                \"tooltip\": false,\n                \"viz\":
    false\n              },\n              \"lineInterpolation\": \"linear\",\n              \"lineWidth\":
    1,\n              \"pointSize\": 5,\n              \"scaleDistribution\": {\n                \"type\":
    \"linear\"\n              },\n              \"showPoints\": \"auto\",\n              \"spanNulls\":
    false,\n              \"stacking\": {\n                \"group\": \"A\",\n                \"mode\":
    \"none\"\n              },\n              \"thresholdsStyle\": {\n                \"mode\":
    \"off\"\n              }\n            },\n            \"mappings\": [],\n            \"thresholds\":
    {\n              \"mode\": \"absolute\",\n              \"steps\": [\n                {\n
    \                 \"color\": \"green\",\n                  \"value\": null\n                },\n
    \               {\n                  \"color\": \"red\",\n                  \"value\":
    80\n                }\n              ]\n            }\n          },\n          \"overrides\":
    []\n        },\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n
    \         \"x\": 0,\n          \"y\": 0\n        },\n        \"id\": 1,\n        \"options\":
    {\n          \"legend\": {\n            \"calcs\": [],\n            \"displayMode\":
    \"list\",\n            \"placement\": \"bottom\"\n          },\n          \"tooltip\":
    {\n            \"mode\": \"single\"\n          }\n        },\n        \"targets\":
    [\n          {\n            \"exemplar\": true,\n            \"expr\": \"sum by
    (imsi) (subscribers_info{imsi=\\\"$imsi\\\"})\",\n            \"interval\": \"\",\n
    \           \"legendFormat\": \"IMSI {{imsi}}\",\n            \"queryType\": \"randomWalk\",\n
    \           \"refId\": \"A\"\n          }\n        ],\n        \"title\": \"UE $imsi
    Connectivity\",\n        \"type\": \"timeseries\"\n      }\n    ],\n    \"refresh\":
    \"\",\n    \"schemaVersion\": 30,\n    \"style\": \"light\",\n    \"tags\": [],\n
    \   \"templating\": {\n      \"list\": [\n          {\n                    \"label\"
    : \"IMSI\",\n                    \"multi\" : false,\n                    \"name\"
    : \"imsi\",\n                    \"type\" : \"query\",\n                    \"datasource\":
    \"$ds\",\n                    \"definition\": \"label_values(subscribers_info, imsi)\",\n
    \                   \"query\": {\n                        \"query\": \"label_values(subscribers_info,
    imsi)\",\n                        \"refId\": \"StandardVariableQuery\"\n                    },\n
    \                   \"refresh\": 1,  \n                    \"sort\" : 1\n        },\n\t{\n
    \                   \"label\" : \"Datasource\",\n                    \"multi\" :
    false,\n                    \"name\" : \"ds\",\n                    \"type\" : \"datasource\",\n
    \                   \"query\": \"prometheus\",\n                    \"queryValue\":
    \"\",\n                    \"refresh\": 1,\n                    \"regex\": \"\"\n
    \       }\n      ]\n    },\n    \"time\": {\n      \"from\": \"now-15m\",\n      \"to\":
    \"now\"\n    },\n    \"timepicker\": {},\n    \"timezone\": \"\",\n    \"title\":
    \"UE Connectivity\",\n    \"uid\": \"ue-conn\",\n    \"version\": 1\n  }\n\n"
---
# Source: aether-roc-umbrella/templates/datasources-templated.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-datasources-templated
  namespace: aether-roc
  labels:
          grafana_datasource: "aether-roc-gui"
data:
  prom-datasources.yaml: |
     apiVersion: 1
     datasources:
     - name: datasource-acc
       url: http://aether-roc-umbrella-prometheus-acc-server:80
       type: prometheus
       access: proxy
       jsonData:
         oauthPassThru: true
     - name: datasource-amp
       url: http://aether-roc-umbrella-prometheus-amp-server:80
       type: prometheus
       access: proxy
       jsonData:
         oauthPassThru: true
     - name: datasource-acme-chicago
       url: http://aether-roc-umbrella-prometheus-ace-server:80
       type: prometheus
       access: proxy
       jsonData:
         oauthPassThru: true
     - name: datasource-starbucks-newyork
       url: http://aether-roc-umbrella-prometheus-ace-server:80
       type: prometheus
       access: proxy
       jsonData:
         oauthPassThru: true
     - name: datasource-starbucks-seattle
       url: http://aether-roc-umbrella-prometheus-ace-server:80
       type: prometheus
       access: proxy
       jsonData:
         oauthPassThru: true
---
# Source: aether-roc-umbrella/templates/grafana-post-install-sh.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-grafana-post-install
  labels:
    app: aether-roc-umbrella
    chart: "aether-roc-umbrella-1.4.64"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  {}
---
# Source: aether-roc-umbrella/templates/opa-rbac-configmap.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0


apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-opa-rbac
  labels:
    chart: "aether-roc-umbrella-1.4.64"
    release: "aether-roc-umbrella"
    heritage: "Helm"
data:
  aether-2.1.0.rego: |-
    # SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
    #
    # SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
  
    package aether_2_1_0
  
    echo[config] {
        config := input
    }
  
    allowed[config] {
        access_profile := access_profiles # refer to rule below
        subscriber := subscribers
        apn_profile := apn_profiles
        connectivity_service := connectivityservices
        enterprise := enterprises
        qos_profile := qos_profiles
        security_profile := security_profiles
        service_profile := service_profiles
        service_group := service_groups
        service_policy := service_policies
        service_rule := service_rules
        up_profile := up_profiles
        config := {
            "access_profile": {
                "access_profile": [
                    access_profile
                ]
            },
            "subscriber": {
                "ue": [
                    subscriber
                ]
            },
            "apn_profile": {
                "apn_profile": [
                    apn_profile
                ]
            },
            "connectivity-service": {
                "connectivity-service": [
                    connectivity_service
                ]
            },
            "enterprise": {
                "enterprise": [
                    enterprise
                ]
            },
            "qos_profile": {
                "qos_profile": [
                    qos_profile
                ]
            },
            "security_profile": {
                "security_profile": [
                    security_profile
                ]
            },
            "service_profile": {
                "service_profile": [
                    service_profile
                ]
            },
            "service_group": {
                "service_group": [
                    service_group
                ]
            },
            "service_policy": {
                "service_policy": [
                    service_policy
                ]
            },
            "service_rule": {
                "service_rule": [
                    service_rule
                ]
            },
            "up_profile": {
                "up_profile": [
                    up_profile
                ]
            },
        }
    }
  
    access_profiles[access_profile] {
        access_profile := input.access_profile.access_profile[_]
    }
  
    subscribers[subscriber] {
        subscriber := input.subscriber.ue[_]
    }
  
    apn_profiles[apn_profile] {
        apn_profile := input.apn_profile.apn_profile[_]
    }
  
    connectivityservices[connectivity_service] {
        enterprise := input.enterprise.enterprise[_]
        enterprise_cs := enterprise.connectivity_service[_]
        connectivity_service := input.connectivity_service.connectivity_service[_]
        ["AetherROCAdmin", enterprise.id][_] == input.groups[i]
        enterprise_cs.connectivity_service == connectivity_service.id
    }
  
    enterprises[enterprise] {
        enterprise := input.enterprise.enterprise[_]
        ["AetherROCAdmin", enterprise.id][_] == input.groups[_]
    }
  
    qos_profiles[qos_profile] {
        qos_profile := input.qos_profile.qos_profile[_]
    }
    security_profiles[security_profile] {
        security_profile := input.security_profile.security_profile[_]
    }
    service_profiles[service_profile] {
        service_profile := input.service_profile.service_profile[_]
    }
    service_groups[service_group] {
        service_group := input.service_group.service_group[_]
    }
    service_policies[service_policy] {
        service_policy := input.service_policy.service_policy[_]
    }
    service_rules[service_rule] {
        service_rule := input.service_rule.service_rule[_]
    }
    up_profiles[up_profile] {
        up_profile := input.up_profile.up_profile[_]
    }
  aether-3.0.0.rego: |
    # SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
    #
    # SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
  
    package aether_3_0_0
  
    echo[config] {
        config := input
    }
  
    allowed[config] {
        ap_list := ap_lists # refer to rule below
        application := applications
        connectivity_service := connectivityservices
        device_group := devicegroups
        enterprise := enterprises
        ip_domain := ip_domains
        network := networks
        site := sites
        template := templates
        traffic_class := trafficclasses
        upf := upfs
        vcs := vcss
        config := {
            "ap-list": {
                "ap-list": [
                    ap_list
                ]
            },
            "application": {
                "application": [
                    application
                ]
            },
            "connectivity-service": {
                "connectivity-service": [
                    connectivity_service
                ]
            },
            "device-group": {
                "device-group": [
                    device_group
                ]
            },
            "enterprise": {
                "enterprise": [
                    enterprise
                ]
            },
            "ip-domain": {
                "ip-domain": [
                    ip_domain
                ]
            },
            "network": {
                "network": [
                    network
                ]
            },
            "site": {
                "site": [
                    site
                ]
            },
            "template": {
                "template": [
                    template
                ]
            },
            "traffic_class": {
                "traffic_class": {
                    traffic_class
                }
            },
            "upf": {
                "upf": [
                    upf
                ]
            },
            "vcs": {
                "vcs": [
                    vcs
                ]
            }
        }
    }
  
    ap_lists[ap_list] {
        ap_list := input.ap_list.ap_list[_]
        ["AetherROCAdmin", ap_list.enterprise][_] == input.groups[i]
    }
  
    applications[application] {
        application := input.application.application[_]
        ["AetherROCAdmin", application.enterprise][_] == input.groups[i]
    }
  
    connectivityservices[connectivity_service] {
        connectivity_service := input.connectivity_service.connectivity_service[_]
    }
  
    devicegroups[device_group] {
        device_group := input.device_group.device_group[_]
        site := sites
        device_group.site == site[_].id # allow only the device_groups of a known site
    }
  
    enterprises[enterprise] {
        enterprise := input.enterprise.enterprise[_]
        ["AetherROCAdmin", enterprise.id][_] == input.groups[i]
    }
  
    ip_domains[ip_domain] {
        ip_domain := input.ip_domain.ip_domain[_]
        ["AetherROCAdmin", ip_domain.enterprise][_] == input.groups[i]
    }
  
    networks[network] {
        network := input.network.network[_]
        ["AetherROCAdmin", network.enterprise][_] == input.groups[i]
    }
  
    sites[site] {
        site := input.site.site[_]
        ["AetherROCAdmin", site.enterprise][_] == input.groups[i]
    }
  
    templates[template] {
        template := input.template.template[_]
    }
  
    trafficclasses[traffic_class] {
        traffic_class := input.traffic_class.traffic_class[_]
    }
  
    upfs[upf] {
        upf := input.upf.upf[_]
        ["AetherROCAdmin", upf.enterprise][_] == input.groups[i]
    }
  
    vcss[vcs] {
        vcs := input.vcs.vcs[_]
        ["AetherROCAdmin", vcs.enterprise][_] == input.groups[i]
    }
  
    can_update_enterprise = true {
        update_enterprise := input.updates.enterprise.enterprise[_]
        ["AetherROCAdmin", update_enterprise.id][_] == input.groups[i]
    }
  aether-4.0.0.rego: |
    # SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
    #
    # SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
  
    package aether_4_0_0
  
    echo[config] {
        config := input
    }
  
    allowed[config] {
        application := applications # refer to rule below
        connectivity_service := connectivityservices
        device_group := devicegroups
        enterprise := enterprises
        ip_domain := ip_domains
        site := sites
        template := templates
        traffic_class := trafficclasses
        upf := upfs
        vcs := vcss
        config := {
            "application": {
                "application": [
                    application
                ]
            },
            "connectivity-service": {
                "connectivity-service": [
                    connectivity_service
                ]
            },
            "device-group": {
                "device-group": [
                    device_group
                ]
            },
            "enterprise": {
                "enterprise": [
                    enterprise
                ]
            },
            "ip-domain": {
                "ip-domain": [
                    ip_domain
                ]
            },
            "site": {
                "site": [
                    site
                ]
            },
            "template": {
                "template": [
                    template
                ]
            },
            "traffic-class": {
                "traffic-class": {
                    traffic_class
                }
            },
            "upf": {
                "upf": [
                    upf
                ]
            },
            "vcs": {
                "vcs": [
                    vcs
                ]
            }
        }
    }
  
    applications[application] {
        application := input.application.application[_]
        ["AetherROCAdmin", application.enterprise][_] == input.groups[i]
    }
  
    connectivityservices[connectivity_service] {
        connectivity_service := input.connectivity_service.connectivity_service[_]
    }
  
    devicegroups[device_group] {
        device_group := input.device_group.device_group[_]
        site := sites
        device_group.site == site[_].id # allow only the device_groups of a known site
    }
  
    enterprises[enterprise] {
        enterprise := input.enterprise.enterprise[_]
        ["AetherROCAdmin", enterprise.id][_] == input.groups[i]
    }
  
    ip_domains[ip_domain] {
        ip_domain := input.ip_domain.ip_domain[_]
        ["AetherROCAdmin", ip_domain.enterprise][_] == input.groups[i]
    }
  
    sites[site] {
        site := input.site.site[_]
        ["AetherROCAdmin", site.enterprise][_] == input.groups[i]
    }
  
    templates[template] {
        template := input.template.template[_]
    }
  
    trafficclasses[traffic_class] {
        traffic_class := input.traffic_class.traffic_class[_]
    }
  
    upfs[upf] {
        upf := input.upf.upf[_]
        ["AetherROCAdmin", upf.enterprise][_] == input.groups[i]
    }
  
    vcss[vcs] {
        vcs := input.vcs.vcs[_]
        ["AetherROCAdmin", vcs.enterprise][_] == input.groups[i]
    }
  
    can_update_enterprise = true {
        update_enterprise := input.updates.enterprise.enterprise[_]
        ["AetherROCAdmin", update_enterprise.id][_] == input.groups[i]
    }
---
# Source: aether-roc-umbrella/templates/sdcore-test-dummy-config.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: aether-roc-umbrella-sdcore-test-dummy
  namespace: aether-roc
data:
  sdcore-test-dummy.conf: |-
    log_format client '$remote_addr - $remote_user $request_time $upstream_response_time '
                      '[$time_local] "$request" $status $body_bytes_sent $request_body "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
      listen 0.0.0.0:8080;
      default_type application/json;
      access_log /opt/bitnami/nginx/logs/access.log client;

      # You can provide a special subPath or the root
      location = /v1/config {
        root /;
        proxy_pass http://127.0.0.1:8080/post_dummy;
      }
      location = /v1/config/policies {
        root /;
        proxy_pass http://127.0.0.1:8080/post_dummy;
      }
      location = /v1/config/imsis {
        root /;
        proxy_pass http://127.0.0.1:8080/post_dummy;
      }
      location /v1/config/5g {
        rewrite ^/v1/config/5g/.* /v1/config/5g break;
        proxy_pass http://127.0.0.1:8080/post_dummy;
      }
      location /api/subscriber {
        rewrite ^/api/subscriber/.* /api/subscriber break;
        proxy_pass http://127.0.0.1:8080/post_dummy;
      }
      location = /post_dummy {
        # turn off logging here to avoid double logging
        access_log off;
        return 200;
      }
      error_page  405     =200 $uri;
    }
---
# Source: aether-roc-umbrella/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
  name: aether-roc-umbrella-grafana-clusterrole
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/alertmanager/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-alertmanager
rules:
  []
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: aether-roc-umbrella/charts/prometheus-ace/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-3.4.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: aether-roc-umbrella
  name: aether-roc-umbrella-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/role.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: aether-roc
  name: subscriber-proxy-secret-reader-role
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
# Source: aether-roc-umbrella/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aether-roc-umbrella-grafana-clusterrolebinding
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: aether-roc-umbrella-grafana
    namespace: aether-roc
roleRef:
  kind: ClusterRole
  name: aether-roc-umbrella-grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/alertmanager/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-alertmanager
subjects:
  - kind: ServiceAccount
    name: aether-roc-umbrella-prometheus-acc-alertmanager
    namespace: aether-roc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aether-roc-umbrella-prometheus-acc-alertmanager
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
subjects:
  - kind: ServiceAccount
    name: aether-roc-umbrella-prometheus-acc-server
    namespace: aether-roc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aether-roc-umbrella-prometheus-acc-server
---
# Source: aether-roc-umbrella/charts/prometheus-ace/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-3.4.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: aether-roc-umbrella
  name: aether-roc-umbrella-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aether-roc-umbrella-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: aether-roc-umbrella-kube-state-metrics
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
subjects:
  - kind: ServiceAccount
    name: aether-roc-umbrella-prometheus-ace-server
    namespace: aether-roc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aether-roc-umbrella-prometheus-ace-server
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
subjects:
  - kind: ServiceAccount
    name: aether-roc-umbrella-prometheus-amp-server
    namespace: aether-roc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aether-roc-umbrella-prometheus-amp-server
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/rolebinding.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: subscriber-proxy-secret-reader
  namespace: aether-roc
subjects:
  - kind: ServiceAccount
    name: subscriber-proxy 
    namespace: aether-roc
roleRef:
  kind: ClusterRole
  name: subscriber-proxy-secret-reader-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/role.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: aether-roc
  name: aether-roc-gui-v4-service-role
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services"]
    verbs: ["get", "watch", "list"]
---
# Source: aether-roc-umbrella/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [aether-roc-umbrella-grafana]
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: aether-roc-umbrella-grafana-test
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:      ['policy']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [aether-roc-umbrella-grafana-test]
---
# Source: aether-roc-umbrella/charts/onos-config/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: onos-config
  namespace: aether-roc
rules:
- apiGroups:
  - primitives.atomix.io
  resources:
  - '*'
  resourceNames:
  - onos-config-leaderships
  - onos-config-masterships
  - onos-config-network-changes
  - onos-config-device-changes
  - onos-config-snapshots
  - onos-config-network-snapshots
  - onos-config-device-snapshots
  verbs:
  - '*'
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: onos-topo
  namespace: aether-roc
rules:
- apiGroups:
  - primitives.atomix.io
  resources:
  - '*'
  resourceNames:
  - onos-topo-objects
  verbs:
  - '*'
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/rolebinding.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aether-roc-gui-v4-access-services
  namespace: aether-roc
subjects:
  - kind: ServiceAccount
    name: default # Name is case sensitive
    namespace: aether-roc
roleRef:
  kind: Role
  name: aether-roc-gui-v4-service-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: aether-roc-umbrella/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: aether-roc-umbrella-grafana
subjects:
- kind: ServiceAccount
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/grafana/templates/tests/test-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aether-roc-umbrella-grafana-test
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: aether-roc-umbrella-grafana-test
subjects:
- kind: ServiceAccount
  name: aether-roc-umbrella-grafana-test
  namespace: aether-roc
---
# Source: aether-roc-umbrella/charts/onos-config/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: onos-config
  namespace: aether-roc
subjects:
- kind: ServiceAccount
  name: onos-config
roleRef:
  kind: Role
  name: onos-config
  apiGroup: rbac.authorization.k8s.io
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: onos-topo
  namespace: aether-roc
subjects:
- kind: ServiceAccount
  name: onos-topo
roleRef:
  kind: Role
  name: onos-topo
  apiGroup: rbac.authorization.k8s.io
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Service
metadata:
  name: aether-roc-api
  labels:
    app: aether-roc-api
    chart: "aether-roc-api-1.2.12"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: aether-roc-api-1.2.12
    app.kubernetes.io/name: aether-roc-api
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.14"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: aether-roc-api
    app: aether
    type: api
    resource: aether-roc-api
    app.kubernetes.io/name: aether-roc-api
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: rest
      port: 8181
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Service
metadata:
  name: aether-roc-gui-v4
  labels:
    app: aether-roc-gui-v4
    chart: "aether-roc-gui-v4-4.0.14"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: aether-roc-gui-v4-4.0.14
    app.kubernetes.io/name: aether-roc-gui-v4
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    name: aether-roc-gui-v4
    app: aether
    type: arg
    resource: aether-roc-gui-v4
    app.kubernetes.io/name: aether-roc-gui-v4
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: web
      port: 80
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aether-roc-gui-v4-external
  labels:
    app: aether-roc-gui-v4
    chart: "aether-roc-gui-v4-4.0.14"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: aether-roc-gui-v4-4.0.14
    app.kubernetes.io/name: aether-roc-gui-v4
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    name: aether-roc-gui-v4
    app: aether
    type: arg
    resource: aether-roc-gui-v4
    app.kubernetes.io/name: aether-roc-gui-v4
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: web
      port: 80
      nodePort: 31194
      protocol: TCP
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/service.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Service
metadata:
  name: aether-roc-websocket
  labels:
    app: aether-roc-websocket
    chart: "aether-roc-websocket-1.0.1"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: aether-roc-websocket-1.0.1
    app.kubernetes.io/name: aether-roc-websocket
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: aether-roc-websocket
    app: aether
    type: ws
    resource: aether-roc-websocket
    app.kubernetes.io/name: aether-roc-websocket
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: webhook
      port: 80
      targetPort: 8120
---
# Source: aether-roc-umbrella/charts/demo-exporter/templates/service.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
apiVersion: v1
kind: Service
metadata:
  name: demo-exporter
  labels:
    app: demo-exporter
    chart: "demo-exporter-0.0.1"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: demo-exporter-0.0.1
    app.kubernetes.io/name: demo-exporter
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: demo-exporter
  ports:
  - name: metrics
    port: 2112
  - name: exporterui
    port: 8081
---
# Source: aether-roc-umbrella/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000

  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
---
# Source: aether-roc-umbrella/charts/onos-config/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: onos-config
  labels:
    app: onos-config
    chart: "onos-config-1.4.6"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: onos-config-1.4.6
    app.kubernetes.io/name: onos-config
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.10.7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: onos-config
    app: onos
    type: config
    resource: onos-config
    app.kubernetes.io/name: onos-config
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: grpc
      port: 5150
    - name: registry
      port: 5151
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: onos-topo
  labels:
    app: onos-topo
    chart: "onos-topo-1.1.109"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: onos-topo-1.1.109
    app.kubernetes.io/name: onos-topo
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: onos-topo
    app: onos
    type: topo
    resource: onos-topo
    app.kubernetes.io/name: onos-topo
    app.kubernetes.io/instance: aether-roc-umbrella
  ports:
    - name: grpc
      port: 5150
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-acc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prom-label-proxy-acc
  labels:
    app: prom-label-proxy-acc
    chart: "prom-label-proxy-acc-0.0.2"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: prom-label-proxy-acc-0.0.2
    app.kubernetes.io/name: prom-label-proxy-acc
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.3.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: prom-label-proxy-acc
  ports:
    - name: http
      port: 8080
    - name: gnmi
      port: 5150
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-amp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prom-label-proxy-amp
  labels:
    app: prom-label-proxy-amp
    chart: "prom-label-proxy-amp-0.0.2"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: prom-label-proxy-amp-0.0.2
    app.kubernetes.io/name: prom-label-proxy-amp
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.3.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: prom-label-proxy-amp
  ports:
    - name: http
      port: 8080
    - name: gnmi
      port: 5150
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/alertmanager/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-alertmanager
  namespace: aether-roc
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9093
  selector:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
  namespace: aether-roc
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: aether-roc-umbrella/charts/prometheus-ace/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aether-roc-umbrella-kube-state-metrics
  namespace: aether-roc
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: "kube-state-metrics-3.4.2"
    app.kubernetes.io/instance: "aether-roc-umbrella"
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: aether-roc-umbrella
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
  namespace: aether-roc
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
  namespace: aether-roc
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: v1
kind: Service
metadata:
  name: sdcore-adapter-v4
  labels:
    app: sdcore-adapter-v4
    chart: "sdcore-adapter-v4-4.0.18"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: sdcore-adapter-v4-4.0.18
    app.kubernetes.io/name: sdcore-adapter-v4
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v4.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: sdcore-adapter-v4
  ports:
    - name: gnmisecure
      port: 5150
    - name: prometheus
      port: 9851
    - name: diag-api
      port: 8080
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: subscriber-proxy
  labels:
    app: subscriber-proxy
    chart: "subscriber-proxy-0.0.6"
    release: "aether-roc-umbrella"
    heritage: "Helm"
    helm.sh/chart: subscriber-proxy-0.0.6
    app.kubernetes.io/name: subscriber-proxy
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.2.18"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    name: subscriber-proxy
  ports:
    - name: sub-proxy
      port: 5000
      protocol: TCP
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-api
  namespace: aether-roc
  labels:
    helm.sh/chart: aether-roc-api-1.2.12
    app.kubernetes.io/name: aether-roc-api
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.14"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aether-roc-api
      app: aether
      type: api
      resource: aether-roc-api
      app.kubernetes.io/name: aether-roc-api
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: aether-roc-api
        app: aether
        type: api
        resource: aether-roc-api
        app.kubernetes.io/name: aether-roc-api
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      serviceAccountName: aether-roc-api
      securityContext:
        null
      containers:
        - name: aether-roc-api
          image: "onosproject/aether-roc-api:v0.8.14"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OIDC_SERVER_URL
              value: 
          args:
            - -allowCorsOrigin=http://localhost:4200
          ports:
            - name: http
              containerPort: 8181
          startupProbe:
            tcpSocket:
              port: 8181
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 8181
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8181
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: secret
              mountPath: /etc/aether-roc-api/certs
              readOnly: true
            - name: config
              mountPath: /etc/onos/config
              readOnly: true
          resources:
            {}
          # Enable ptrace for debugging
          securityContext:
      volumes:
        - name: secret
          secret:
            secretName: aether-roc-api-secret
        - name: config
          configMap:
            name: aether-roc-api-config
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-gui-v4
  namespace: aether-roc
  labels:
    helm.sh/chart: aether-roc-gui-v4-4.0.14
    app.kubernetes.io/name: aether-roc-gui-v4
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aether-roc-gui-v4
      app: aether
      type: arg
      resource: aether-roc-gui-v4
      app.kubernetes.io/name: aether-roc-gui-v4
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: aether-roc-gui-v4
        app: aether
        type: arg
        resource: aether-roc-gui-v4
        app.kubernetes.io/name: aether-roc-gui-v4
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: aether-roc-gui-v4
          securityContext:
            null
          image: "onosproject/aether-roc-gui:v0.8.15"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENIDCISSUER
              value: 
          stdin : true
          resources:
            {}
          ports:
            - name: web
              
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: web
            initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: web
            initialDelaySeconds: 30
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d
            - name: secret
              mountPath: /usr/share/certs
              readOnly: true

      volumes:
        - name: config
          configMap:
            name: aether-roc-gui-v4
        - name: secret
          secret:
            secretName: aether-roc-gui-v4-secret
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/deployment.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-websocket
  namespace: aether-roc
  labels:
    helm.sh/chart: aether-roc-websocket-1.0.1
    app.kubernetes.io/name: aether-roc-websocket
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aether-roc-websocket
      app: aether
      type: ws
      resource: aether-roc-websocket
      app.kubernetes.io/name: aether-roc-websocket
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: aether-roc-websocket
        app: aether
        type: ws
        resource: aether-roc-websocket
        app.kubernetes.io/name: aether-roc-websocket
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      serviceAccountName: aether-roc-websocket
      securityContext:
        null
      containers:
        - name: aether-roc-websocket
          image: "onosproject/aether-roc-websocket:v0.8.7"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args: []
          ports:
            - name: http
              containerPort: 8120
          startupProbe:
            tcpSocket:
              port: 8120
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 8120
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8120
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {}
          securityContext: {}
      volumes:
        - name: secret
          secret:
            secretName: aether-roc-websocket-secret
        - name: config
          configMap:
            name: aether-roc-websocket-config
---
# Source: aether-roc-umbrella/charts/demo-exporter/templates/deployment.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-exporter
  namespace: aether-roc
  labels:
    name: demo-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-exporter
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: demo-exporter
        app.kubernetes.io/name: demo-exporter
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: demo-exporter
          image: "onosproject/sdcore-adapter:v0.2.12"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - "/usr/local/bin/sdcore-exporter"
          ports:
            - name: metrics
              containerPort: 2112
          readinessProbe:
            httpGet:
              path: /metrics
              port: 2112
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /metrics
              port: 2112
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: secret
          secret:
            secretName: demo-exporter-secret
---
# Source: aether-roc-umbrella/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-umbrella-grafana
  namespace: aether-roc
  labels:
    helm.sh/chart: grafana-6.16.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "8.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: aether-roc-umbrella
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: aether-roc-umbrella
      annotations:
        checksum/config: 5ee5376d78163095078aac64430b2e2c9ec23fd23891927aad23c7cc781d18e4
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: bf48244f5c83d4e203b1c7a59184a9ba01bcfa2f5633f19650ce381613cf32f6
        checksum/secret: 92e64ad2b9e80dca68204fdeeb30a016b204f7905e264efa88d0072c03f4bacf
    spec:
      
      serviceAccountName: aether-roc-umbrella-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      initContainers:
        - name: grafana-sc-datasources
          image: "quay.io/kiwigrid/k8s-sidecar:1.12.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: "grafana_datasource"
            - name: LABEL_VALUE
              value: "aether-roc-gui"
            - name: FOLDER
              value: "/etc/grafana/provisioning/datasources"
            - name: RESOURCE
              value: "both"
          resources:
            {}
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
      enableServiceLinks: true
      containers:
        - name: grafana-sc-dashboard
          image: "quay.io/kiwigrid/k8s-sidecar:1.12.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: 
            - name: LABEL
              value: "grafana_dashboard"
            - name: LABEL_VALUE
              value: "aether-roc-gui"
            - name: FOLDER
              value: "/tmp/dashboards"
            - name: RESOURCE
              value: "both"
          resources:
            {}
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: grafana
          image: "grafana/grafana:8.1.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
      
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: aether-roc-umbrella-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aether-roc-umbrella-grafana
                  key: admin-password
            
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: aether-roc-umbrella-grafana
        - name: storage
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: aether-roc-umbrella-grafana-config-dashboards
        - name: sc-datasources-volume
          emptyDir: {}
---
# Source: aether-roc-umbrella/charts/onos-cli/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onos-cli
  labels:
    helm.sh/chart: onos-cli-1.1.11
    app.kubernetes.io/name: onos-cli
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.15"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: onos-cli
      app: onos
      type: cli
      resource: onos-cli
      app.kubernetes.io/name: onos-cli
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: onos-cli
        app: onos
        type: cli
        resource: onos-cli
        app.kubernetes.io/name: onos-cli
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: onos-cli
          securityContext:
            null
          image: "onosproject/onos-cli:v0.8.15"
          imagePullPolicy: IfNotPresent
          stdin : true
          volumeMounts:
            - name: config
              mountPath: /home/onos/config
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: onos-cli
---
# Source: aether-roc-umbrella/charts/onos-config/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onos-config
  namespace: aether-roc
  labels:
    helm.sh/chart: onos-config-1.4.6
    app.kubernetes.io/name: onos-config
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.10.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: onos-config
      app: onos
      type: config
      resource: onos-config
      app.kubernetes.io/name: onos-config
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: onos-config
        app: onos
        type: config
        resource: onos-config
        app.kubernetes.io/name: onos-config
        app.kubernetes.io/instance: aether-roc-umbrella
      annotations:
        broker.atomix.io/inject: "true"
        raft.storage.atomix.io/inject: "true"
        registry.config.onosproject.org/inject: onos-config
        compiler.config.onosproject.org/version: "v1.0.1"
        compiler.config.onosproject.org/target: "github.com/onosproject/onos-config@v0.10.7"
    spec:
      serviceAccountName: onos-config
      securityContext:
        null
      containers:
        - name: onos-config
          image: "onosproject/onos-config:v0.10.7"
          imagePullPolicy: IfNotPresent
          env:
            # *_NAMESPACE and *_NAME environment variables are recognized by onos-lib-go utilities.
            # These variables should always be defined.
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OIDC_SERVER_URL
              value: 
            - name: ADMINGROUPS
              value: AetherROCAdmin,EnterpriseAdmin
            - name: SERVICE_NAME
              value: onos-config
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          args:
            - "-caPath=/etc/onos/certs/tls.cacrt"
            - "-keyPath=/etc/onos/certs/tls.key"
            - "-certPath=/etc/onos/certs/tls.crt"
          ports:
            - name: grpc
              containerPort: 5150
            # Expose the debug port for debugging
          startupProbe:
            tcpSocket:
              port: 5150
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/onos/config
              readOnly: true
            - name: secret
              mountPath: /etc/onos/certs
              readOnly: true
          # Enable ptrace for debugging
          securityContext:
        
        - name: openpolicyagent
          image: "openpolicyagent/opa:0.29.4"
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8181
          args:
            - "run"
            - "--server"
            - "/etc/onos/rego"
          livenessProbe:
            httpGet:
              scheme: HTTP              # assumes OPA listens on localhost:8181
              port: 8181
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health?bundle=true  # Include bundle activation in readiness
              scheme: HTTP
              port: 8181
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: openpolicyagent
              mountPath: /etc/onos/rego
              readOnly: true
        
      # Mount volumes
      volumes:
        - name: config
          configMap:
            name: onos-config-config
        - name: secret
          secret:
            secretName: onos-config-secret
        - name: openpolicyagent
          configMap:
            name: aether-roc-umbrella-opa-rbac
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onos-topo
  namespace: aether-roc
  labels:
    helm.sh/chart: onos-topo-1.1.109
    app.kubernetes.io/name: onos-topo
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.8.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: onos-topo
      app: onos
      type: topo
      resource: onos-topo
      app.kubernetes.io/name: onos-topo
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: onos-topo
        app: onos
        type: topo
        resource: onos-topo
        app.kubernetes.io/name: onos-topo
        app.kubernetes.io/instance: aether-roc-umbrella
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "unconfined"
        broker.atomix.io/inject: "true"
        raft.storage.atomix.io/inject: "true"
    spec:
      serviceAccountName: onos-topo
      securityContext:
        null
      containers:
        - name: onos-topo
          image: "onosproject/onos-topo:v0.8.13"
          imagePullPolicy: IfNotPresent
          env:
            # *_NAMESPACE and *_NAME environment variables are recognized by onos-lib-go utilities.
            # These variables should always be defined.
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OIDC_SERVER_URL
              value: 
            - name: SERVICE_NAME
              value: onos-topo
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - "-caPath=/etc/onos/certs/tls.cacrt"
            - "-keyPath=/etc/onos/certs/tls.key"
            - "-certPath=/etc/onos/certs/tls.crt"
          ports:
            - name: grpc
              containerPort: 5150
          startupProbe:
            tcpSocket:
              port: 5150
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/onos/config
              readOnly: true
            - name: secret
              mountPath: /etc/onos/certs
              readOnly: true
          resources:
            {}
          # Enable ptrace for debugging
          securityContext:
      volumes:
        - name: config
          configMap:
            name: onos-topo-config
        - name: secret
          secret:
            secretName: onos-topo-secret
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-acc/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-label-proxy-acc
  namespace: aether-roc
  labels:
    name: prom-label-proxy-acc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prom-label-proxy-acc
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: prom-label-proxy-acc
        app.kubernetes.io/name: prom-label-proxy-acc
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: prom-label-proxy-acc
          image: "onosproject/prom-label-proxy:v0.3.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OIDC_SERVER_URL
              value:   
          args:
              [
              "-label=ent",
              "-admingroup=AetherROCAdmin",
              "-upstream=http://aether-roc-umbrella-prometheus-acc-server",
              "-insecure-listen-address=0.0.0.0:8080",
              "-config_address=$(POD_IP):5150",
              "-onos_config_url=onos-config:5150",
              "-key=/etc/prom-label-proxy/certs/tls.key",
              "-cert=/etc/prom-label-proxy/certs/tls.crt",
              "-ca=/etc/prom-label-proxy/certs/tls.cacert" ]
          ports:
            - name: http
              containerPort: 8080
            - name: gnmi
              containerPort: 5150
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: secret
              mountPath: /etc/prom-label-proxy/certs
              readOnly: true              
      volumes:
        - name: secret
          secret:
            secretName: prom-label-proxy-acc-secret
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-amp/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-label-proxy-amp
  namespace: aether-roc
  labels:
    name: prom-label-proxy-amp
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prom-label-proxy-amp
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: prom-label-proxy-amp
        app.kubernetes.io/name: prom-label-proxy-amp
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: prom-label-proxy-amp
          image: "onosproject/prom-label-proxy:v0.3.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OIDC_SERVER_URL
              value:   
          args:
              [
              "-label=ent",
              "-admingroup=AetherROCAdmin",
              "-upstream=http://aether-roc-umbrella-prometheus-amp-server",
              "-insecure-listen-address=0.0.0.0:8080",
              "-config_address=$(POD_IP):5150",
              "-onos_config_url=onos-config:5150",
              "-key=/etc/prom-label-proxy/certs/tls.key",
              "-cert=/etc/prom-label-proxy/certs/tls.crt",
              "-ca=/etc/prom-label-proxy/certs/tls.cacert" ]
          ports:
            - name: http
              containerPort: 8080
            - name: gnmi
              containerPort: 5150
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: secret
              mountPath: /etc/prom-label-proxy/certs
              readOnly: true              
      volumes:
        - name: secret
          secret:
            secretName: prom-label-proxy-amp-secret
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/alertmanager/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "alertmanager"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-alertmanager
  namespace: aether-roc
spec:
  selector:
    matchLabels:
      component: "alertmanager"
      app: prometheus-acc
      release: aether-roc-umbrella
  replicas: 1
  template:
    metadata:
      labels:
        component: "alertmanager"
        app: prometheus-acc
        release: aether-roc-umbrella
        chart: prometheus-acc-14.6.1
        heritage: Helm
    spec:
      serviceAccountName: aether-roc-umbrella-prometheus-acc-alertmanager
      containers:
        - name: prometheus-acc-alertmanager
          image: "quay.io/prometheus/alertmanager:v0.21.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --cluster.advertise-address=[$(POD_IP)]:6783
            - --web.external-url=http://localhost:9093

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "/data"
              subPath: ""
        - name: prometheus-acc-alertmanager-configmap-reload
          image: "jimmidyson/configmap-reload:v0.5.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9093/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
        - name: config-volume
          configMap:
            name: aether-roc-umbrella-alertmanager
        - name: storage-volume
          emptyDir:
            {}
---
# Source: aether-roc-umbrella/charts/prometheus-acc/templates/server/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus-acc
    release: aether-roc-umbrella
    chart: prometheus-acc-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-acc-server
  namespace: aether-roc
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus-acc
      release: aether-roc-umbrella
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus-acc
        release: aether-roc-umbrella
        chart: prometheus-acc-14.6.1
        heritage: Helm
    spec:
      enableServiceLinks: true
      serviceAccountName: aether-roc-umbrella-prometheus-acc-server
      containers:
        - name: prometheus-acc-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.5.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-acc-server
          image: "quay.io/prometheus/prometheus:v2.26.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: aether-roc-umbrella-prometheus-acc-server
        - name: storage-volume
          emptyDir:
            {}
---
# Source: aether-roc-umbrella/charts/prometheus-ace/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-umbrella-kube-state-metrics
  namespace: aether-roc
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: "kube-state-metrics-3.4.2"
    app.kubernetes.io/instance: "aether-roc-umbrella"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.1.1"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: "aether-roc-umbrella"
    spec:
      hostNetwork: false
      serviceAccountName: aether-roc-umbrella-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        - --telemetry-port=8081
        imagePullPolicy: IfNotPresent
        image: "k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.1.1"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
---
# Source: aether-roc-umbrella/charts/prometheus-ace/templates/server/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus-ace
    release: aether-roc-umbrella
    chart: prometheus-ace-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-ace-server
  namespace: aether-roc
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus-ace
      release: aether-roc-umbrella
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus-ace
        release: aether-roc-umbrella
        chart: prometheus-ace-14.6.1
        heritage: Helm
    spec:
      enableServiceLinks: true
      serviceAccountName: aether-roc-umbrella-prometheus-ace-server
      containers:
        - name: prometheus-ace-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.5.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-ace-server
          image: "quay.io/prometheus/prometheus:v2.26.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: aether-roc-umbrella-prometheus-ace-server
        - name: storage-volume
          emptyDir:
            {}
---
# Source: aether-roc-umbrella/charts/prometheus-amp/templates/server/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus-amp
    release: aether-roc-umbrella
    chart: prometheus-amp-14.6.1
    heritage: Helm
  name: aether-roc-umbrella-prometheus-amp-server
  namespace: aether-roc
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus-amp
      release: aether-roc-umbrella
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus-amp
        release: aether-roc-umbrella
        chart: prometheus-amp-14.6.1
        heritage: Helm
    spec:
      enableServiceLinks: true
      serviceAccountName: aether-roc-umbrella-prometheus-amp-server
      containers:
        - name: prometheus-amp-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.5.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-amp-server
          image: "quay.io/prometheus/prometheus:v2.26.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: aether-roc-umbrella-prometheus-amp-server
        - name: storage-volume
          emptyDir:
            {}
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdcore-adapter-v4
  namespace: aether-roc
  labels:
    name: sdcore-adapter-v4
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sdcore-adapter-v4
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: sdcore-adapter-v4
        app.kubernetes.io/name: sdcore-adapter-v4
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext:
        null
      containers:
        - name: sdcore-adapter-v4
          image: "onosproject/sdcore-adapter:v0.2.21"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - "/usr/local/bin/sdcore-adapter"
            - "-bind_address=:5150"
            - "-key=/etc/sdcore-adapter/certs/tls.key"
            - "-cert=/etc/sdcore-adapter/certs/tls.crt"
            - "-ca=/etc/sdcore-adapter/certs/tls.cacert"
            - "-alsologtostderr"
            - "-hostCheckDisabled"
            
            
            
            
            - "-partial_update_disable"
            
          ports:
            - name: gnmisecure
              containerPort: 5150
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: targetconfig
              mountPath: /etc/sdcore-adapter/configs
              readOnly: true
            - name: secret
              mountPath: /etc/sdcore-adapter/certs
              readOnly: true              
            - name: logconfig
              mountPath: /etc/onos/config
              readOnly: true
      volumes:
        - name: logconfig
          configMap:
            name: sdcore-adapter-v4-logconfig
        - name: targetconfig
          configMap:
            name: sdcore-adapter-v4-targetconfig            
        - name: secret
          secret:
            secretName: sdcore-adapter-v4-secret
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/deployment.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscriber-proxy
  namespace: aether-roc
  labels:
    name: subscriber-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: subscriber-proxy
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: subscriber-proxy
        app.kubernetes.io/name: subscriber-proxy
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      serviceAccountName: subscriber-proxy
      securityContext:
        null
      containers:
        - name: subscriber-proxy
          image: "onosproject/sdcore-adapter:v0.2.18"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OIDC_SERVER_URL
              value: 
          args:
            - "/usr/local/bin/subscriber-proxy"
            - "-bind_port=:5000"
            - "-client_key=/etc/subscriber-proxy/certs/tls.key"
            - "-client_crt=/etc/subscriber-proxy/certs/tls.crt"
            - "-ca_crt=/etc/subscriber-proxy/certs/tls.cacert"
            - "-alsologtostderr"
            - "-hostCheckDisabled"
            - "-webconsole_url=http://aether-roc-umbrella-sdcore-test-dummy:80"
            - "-onos_config_url=onos-config:5150"
          ports:
            - containerPort: 5000
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: secret
              mountPath: /etc/subscriber-proxy/certs
              readOnly: true
            - name: logconfig
              mountPath: /etc/onos/config
              readOnly: true
      volumes:
        - name: logconfig
          configMap:
            name: subscriber-proxy-logconfig
        - name: secret
          secret:
            secretName: subscriber-proxy-secret
---
# Source: aether-roc-umbrella/charts/aether-roc-api/templates/serviceaccount.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/aether-roc-gui-v4/templates/ingress.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/aether-roc-websocket/templates/serviceaccount.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-acc/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/prom-label-proxy-amp/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/sdcore-adapter-v4/templates/servicemonitor.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/configmap.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/service.yaml
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/subscriber-proxy/templates/serviceaccount.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: Election
metadata:
  name: onos-config-leaderships
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: Election
metadata:
  name: onos-config-masterships
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/templates/topo.yaml
# The 4G/5G v4.0.0 sdcore-adapter
apiVersion: topo.onosproject.org/v1beta1
kind: Entity
metadata:
  name: connectivity-service-v4
spec:
  uri: connectivity-service-v4
  kind:
    name: aether
  aspects:
    onos.topo.Configurable:
      address: sdcore-adapter-v4:5150
      version: 4.0.0
      type: Aether
    onos.topo.Location:
      lat: 52.5150
      lng: 13.3885
    onos.topo.TLSOptions:
      insecure: true
    onos.topo.Asset:
      name: 5G Core
    onos.topo.MastershipState: {}
---
# Source: aether-roc-umbrella/templates/topo.yaml
# Prom-label-proxy
apiVersion: topo.onosproject.org/v1beta1
kind: Entity
metadata:
  name: plproxy-amp
spec:
  uri: plproxy-amp
  kind:
    name: plproxy
  aspects:
    onos.topo.Configurable:
      address: prom-label-proxy-amp:5150
      version: 1.0.0
      type: PLProxy
    onos.topo.TLSOptions:
      insecure: true
    onos.topo.Asset:
      name: Prom Label Proxy
    onos.topo.MastershipState: {}
---
# Source: aether-roc-umbrella/templates/topo.yaml
# Prom-label-proxy
apiVersion: topo.onosproject.org/v1beta1
kind: Entity
metadata:
  name: plproxy-acc
spec:
  uri: plproxy-acc
  kind:
    name: plproxy
  aspects:
    onos.topo.Configurable:
      address: prom-label-proxy-acc:5150
      version: 1.0.0
      type: PLProxy
    onos.topo.TLSOptions:
      insecure: true
    onos.topo.Asset:
      name: Prom Label Proxy
    onos.topo.MastershipState: {}
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: IndexedMap
metadata:
  name: onos-config-device-changes
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: IndexedMap
metadata:
  name: onos-config-network-changes
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: IndexedMap
metadata:
  name: onos-config-network-snapshots
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/templates/topo.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

# A topology kind representing an E2 node
apiVersion: topo.onosproject.org/v1beta1
kind: Kind
metadata:
  name: aether
spec:
  aspects: {}
---
# Source: aether-roc-umbrella/templates/topo.yaml
apiVersion: topo.onosproject.org/v1beta1
kind: Kind
metadata:
  name: plproxy
spec:
  aspects: {}
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: Map
metadata:
  name: onos-config-snapshots
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/onos-config/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: Map
metadata:
  name: onos-config-device-snapshots
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/onos-topo/templates/primitives.yaml
apiVersion: primitives.atomix.io/v2beta1
kind: Map
metadata:
  name: onos-topo-objects
  namespace: aether-roc
spec:
  store:
    name: onos-consensus-store
---
# Source: aether-roc-umbrella/charts/config-model-aether-3/templates/model.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: config.onosproject.org/v1beta1
kind: Model
metadata:
  name: aether-roc-umbrella-3.0.0-config-model-aether
  namespace: aether-roc
  labels:
    helm.sh/chart: config-model-aether-3-3.0.15
    app.kubernetes.io/name: config-model-aether-3
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  plugin:
    type: Aether
    version: "3.0.0"
  modules:
  - name: connectivity-service
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: connectivity-service.yang
  - name: enterprise
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: enterprise.yang
# new 5G models
  - name: aether-types
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: aether-types.yang
  - name: ap-list
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: ap-list.yang
  - name: application
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: application.yang
  - name: device-group
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: device-group.yang
  - name: ip-domain
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: ip-domain.yang
  - name: site
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: site.yang
  - name: upf-list
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: upf.yang
  - name: vcs
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: vcs.yang
  - name: template
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: template.yang
  - name: traffic-class
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: traffic-class.yang    
  files:
    aether-types.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module aether-types {
        namespace "http://opennetworking.org/aether/aether-types";
        prefix at;
      
        import ietf-inet-types { prefix inet; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description "A set of base types for aether modeling.";
      
        revision "2021-06-02" {
          description "Aether Base Types";
          reference "RFC 6087";
        }
      
        typedef mcc {
            type string {
              pattern '[0-9]{3}';
            }
          description "The typedef for mcc";
        }
      
        typedef mnc {
            type string {
              pattern '[0-9]{2,3}';
            }
          description "The typedef for mnc";
        }
      
        typedef tac {
            type string {
              length 4..8;
              pattern '[0-9A-F\.]*';
            }
          description "The typedef for tac";
        }
      
        typedef ent {
            type uint32 {
              range 0..999;
            }
          description "The typedef for ent";
        }
      
        typedef dnn {
            type string {
              length 1..32;
            }
          description "The typedef for dnn";
        }
      
        typedef sst {
            type uint8 {
              range 1..255;
            }
          description "The typedef for sst";
        }
      
        typedef sd {
            type uint32 {
              range 0..16777215;
            }
          description "The typedef for sd";
        }
      
        typedef qci {
            type uint8 {
              range 1..32;
            }
          description "The typedef for qci";
        }
      
        typedef pelr {
            type int8 {
              range 0..10;
            }
          description "The typedef for pelr";
        }
      
        typedef pdb {
            type uint16 {
              range 0..1000;
            }
          description "The typedef for pdb";
        }
      
        // "TCP" or "UDP"
        typedef protocol {
            type string {
              length 3;
              pattern "TCP|UDP";
            }
            default "TCP";
          description "The typedef for protocol";
        }
      
        // "ENABLE" | "MAINTENTANCE" | "DISABLE"
        typedef admin-status {
            type string {
              length 0..16;
              pattern "ENABLE|MAINTENANCE|DISABLE";
            }
            default "ENABLE";
          description "The typedef for admin-status";
        }
      
        typedef mtu {
            type inet:port-number;
            default 1492;
          description "The typedef for mtu";
        }
      
        typedef description {
          type string {
            length 1..1024;
          }
          description "The typedef for description";
        }
      }
      
    ap-list.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module ap-list {
        namespace "http://opennetworking.org/aether/ap-list";
        prefix apl;
      
        import ietf-inet-types { prefix inet; }
        import aether-types { prefix at; }
        import enterprise{ prefix ent; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether AP List is a named list of access points.";
      
        revision "2021-06-02" {
          description "An Aether Access Point List";
          reference "RFC 6087";
        }
      
        typedef ap-list-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef ap-list-id";
        }
      
        container ap-list {
          description "The top level container";
      
          list ap-list {
            key "id";
            description
              "A list of named ap-lists.";
      
            leaf id {
              type ap-list-id;
              description "ID for this ap-list.";
            }
      
            list access-points {
              key "address";
              leaf address {
                type inet:host;
                description
                  "Address of access point";
              }
              leaf tac {
                type at:tac;
                mandatory true;
                description
                    "Type Allocation Code";
              }
              leaf enable {
                type boolean;
                default true;
                description
                  "Enable this access point";
              }
              description
                "List of access point addresses";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this ap-list";
            }
      
            // Access point lists are always owned by an Enterprise, since they typically exist on the
            // Enterprise's edge. An ApList is not owned by Site, to cover the case where a ApList may
            // include access points that span multiple sites.
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this Access Point List";
            }
          }
        }
      }
      
    application.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module application {
        namespace "http://opennetworking.org/enterprise/application";
        prefix app;
      
        import ietf-inet-types{ prefix ietf; }
        import aether-types{ prefix at; }
        import enterprise{ prefix ent; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Application is an application that UE devices may
           connect to. Includes a set of endpoints where services are
           provided.";
      
        revision "2021-06-02" {
          description "Aether Application.";
          reference "RFC 6087";
        }
      
        typedef application-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for application-id";
        }
      
        container application {
          description "The top level container";
      
          list application {
            key "id";
            description
              "List of applications";
      
            leaf id {
              type application-id;
              description "ID for this application.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this application";
            }
      
            list endpoint {
              key "name";
              max-elements 1;
              leaf name {
                type string;
                description
                    "Name of this endpoint";
              }
              leaf address {
                type ietf:host;
                mandatory true;
                description
                    "Address of this endpoint. Either a hostname, and IP, or a subnet.";
              }
              leaf port-start {
                type ietf:port-number;
                mandatory true;
                description
                    "First port in range";
              }
              leaf port-end {
                type ietf:port-number;
                description
                    "Last port in range";
              }
              leaf protocol {
                type at:protocol;
                description
                    "Name of this endpoint";
              }
              description "The list for endpoints";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this Application. May be set to None if the application is global to all Enterprises.";
            }
          }
        }
      }
      
    connectivity-service.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module connectivity-service {
        namespace "http://opennetworking.org/aether/connectivity-service";
        prefix cs;
      
        import aether-types { prefix at; }
        import ietf-inet-types { prefix inet; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Connectivity service is the linkage between the
           ROC and a core that provides connectivity.";
      
        revision "2021-06-02" {
          description "An Aether Connectivity Service. Specifies the endpoints where the sdcore-adapter should push configuration to. A single connectivity service may be attached to multiple Enterprises.";
          reference "RFC 6087";
        }
      
        typedef connectivity-service-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for connectivity-service-id";
        }
      
        container connectivity-service {
          description "The top level container";
      
          list connectivity-service {
            key "id";
            description
              "List of connectivity services";
      
            leaf id {
              type connectivity-service-id;
              description "ID for this connectivity service.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this connectivity service";
            }
      
            leaf spgwc-endpoint {
              type inet:uri;
              description "url of the spgwc service";
            }
      
            leaf hss-endpoint {
              type inet:uri;
              description "url of the hss service";
            }
      
            leaf pcrf-endpoint {
              type inet:uri;
              description "url of the pcrf service";
            }
      
            leaf core-5g-endpoint {
              type inet:uri;
              description "url of the 5g core";
            }
          }
        }
      }
      
    device-group.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module device-group {
        namespace "http://opennetworking.org/aether/device-group";
        prefix dg;
      
        import aether-types { prefix at; }
        import ip-domain{ prefix ipd; }
        import site{ prefix st; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An aether device group represents a list of device IMSIS.
           This list is expressed as a set of ranges,
               [(from_imsi, to_imsi),
                (from_imsi, to_imsi),
                ...].
           Each device group belongs to a site and has associated
           with it an ip-profile that determines the IP address
           and DNS settings that apply to devices within the
           group";
      
        revision "2021-06-02" {
          description "An Aether Device Group";
          reference "RFC 6087";
        }
      
        typedef device-group-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for device-group-id";
        }
      
        container device-group {
          description "The top level container";
      
          list device-group {
            key "id";
            description
              "List of device groups";
      
            leaf id {
              type device-group-id;
              description "ID for this device group.";
            }
      
            leaf description {
              type at:description;
              description "description of this device group";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            list imsis {
              // TODO: imsi-range-from cannot be used as a list index
              key "name";
              leaf name {
                type string;
                description "The leaf for imsi name";
              }
              leaf imsi-range-from {
                type uint64;
      	  description "The leaf for imsi-range-from";
              }
              leaf imsi-range-to {
                type uint64;
                description "The leaf for imsi-range-to";
              }
              description
                "List of imsi ranges that comprise this group. It's acceptable for
                 a range to degenerate to being a singleton";
            }
      
            leaf ip-domain {
              type leafref {
                path "/ipd:ip-domain/ipd:ip-domain/ipd:id";
              }
              description
                "Link to ip-domain settings that determine the pool of IP addresses,
                 as well as the domain resolver settings to use";
            }
      
            leaf site {
              type leafref {
                path "/st:site/st:site/st:id";
              }
              mandatory true;
              description
                "Link to site";
            }
          }
        }
      }
      
    enterprise.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module enterprise {
        namespace "http://opennetworking.org/aether/enterprise";
        prefix ent;
      
        import aether-types { prefix at; }
        import connectivity-service { prefix cs; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Enterprise is an administration entity that
           has ownership of resrouces.";
      
        revision "2021-06-02" {
          description "An Aether Enterprise. Used to distinguish ownership of devices and other resources as well as a domain of configuration.";
          reference "RFC 6087";
        }
      
        typedef enterprise-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for enterprise-id";
        }
      
        container enterprise {
          description "The top level container";
      
          list enterprise {
            key "id";
            description
              "List of enterprises";
      
            leaf id {
              type enterprise-id;
              description "ID for this enterprise.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this enterprise";
            }
      
            list connectivity-service {
              key "connectivity-service";
              leaf connectivity-service {
                type leafref {
                  path "/cs:connectivity-service/cs:connectivity-service/cs:id";
                }
                description
                  "Link to connectivity services where configuration should be pushed for this enterprise's devices";
              }
              leaf enabled {
                type boolean;
                default true;
                description
                  "Allow or disallow pushes to this connectivity service";
              }
              description "The list for connectivity-service";
            }
          }
        }
      }
      
    ietf-inet-types.yang: |
      module ietf-inet-types {
      
        namespace "urn:ietf:params:xml:ns:yang:ietf-inet-types";
        prefix "inet";
      
        organization
         "IETF NETMOD (NETCONF Data Modeling Language) Working Group";
      
        contact
         "WG Web:   <http://tools.ietf.org/wg/netmod/>
          WG List:  <mailto:netmod@ietf.org>
      
          WG Chair: David Kessens
                    <mailto:david.kessens@nsn.com>
      
          WG Chair: Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>
      
          Editor:   Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>";
      
        description
         "This module contains a collection of generally useful derived
          YANG data types for Internet addresses and related things.
      
          Copyright (c) 2013 IETF Trust and the persons identified as
          authors of the code.  All rights reserved.
      
          Redistribution and use in source and binary forms, with or
          without modification, is permitted pursuant to, and subject
          to the license terms contained in, the Simplified BSD License
          set forth in Section 4.c of the IETF Trust's Legal Provisions
          Relating to IETF Documents
          (http://trustee.ietf.org/license-info).
      
          This version of this YANG module is part of RFC 6991; see
          the RFC itself for full legal notices.";
      
        revision 2013-07-15 {
          description
           "This revision adds the following new data types:
            - ip-address-no-zone
            - ipv4-address-no-zone
            - ipv6-address-no-zone";
          reference
           "RFC 6991: Common YANG Data Types";
        }
      
        revision 2010-09-24 {
          description
           "Initial revision.";
          reference
           "RFC 6021: Common YANG Data Types";
        }
      
        /*** collection of types related to protocol fields ***/
      
        typedef ip-version {
          type enumeration {
            enum unknown {
              value "0";
              description
               "An unknown or unspecified version of the Internet
                protocol.";
            }
            enum ipv4 {
              value "1";
              description
               "The IPv4 protocol as defined in RFC 791.";
            }
            enum ipv6 {
              value "2";
              description
               "The IPv6 protocol as defined in RFC 2460.";
            }
          }
          description
           "This value represents the version of the IP protocol.
      
            In the value set and its semantics, this type is equivalent
            to the InetVersion textual convention of the SMIv2.";
          reference
           "RFC  791: Internet Protocol
            RFC 2460: Internet Protocol, Version 6 (IPv6) Specification
            RFC 4001: Textual Conventions for Internet Network Addresses";
        }
      
        typedef dscp {
          type uint8 {
            range "0..63";
          }
          description
           "The dscp type represents a Differentiated Services Code Point
            that may be used for marking packets in a traffic stream.
            In the value set and its semantics, this type is equivalent
            to the Dscp textual convention of the SMIv2.";
          reference
           "RFC 3289: Management Information Base for the Differentiated
                      Services Architecture
            RFC 2474: Definition of the Differentiated Services Field
                      (DS Field) in the IPv4 and IPv6 Headers
            RFC 2780: IANA Allocation Guidelines For Values In
                      the Internet Protocol and Related Headers";
        }
      
        typedef ipv6-flow-label {
          type uint32 {
            range "0..1048575";
          }
          description
           "The ipv6-flow-label type represents the flow identifier or Flow
            Label in an IPv6 packet header that may be used to
            discriminate traffic flows.
      
            In the value set and its semantics, this type is equivalent
            to the IPv6FlowLabel textual convention of the SMIv2.";
          reference
           "RFC 3595: Textual Conventions for IPv6 Flow Label
            RFC 2460: Internet Protocol, Version 6 (IPv6) Specification";
        }
      
        typedef port-number {
          type uint16 {
            range "0..65535";
          }
          description
           "The port-number type represents a 16-bit port number of an
            Internet transport-layer protocol such as UDP, TCP, DCCP, or
            SCTP.  Port numbers are assigned by IANA.  A current list of
            all assignments is available from <http://www.iana.org/>.
      
            Note that the port number value zero is reserved by IANA.  In
            situations where the value zero does not make sense, it can
            be excluded by subtyping the port-number type.
            In the value set and its semantics, this type is equivalent
            to the InetPortNumber textual convention of the SMIv2.";
          reference
           "RFC  768: User Datagram Protocol
            RFC  793: Transmission Control Protocol
            RFC 4960: Stream Control Transmission Protocol
            RFC 4340: Datagram Congestion Control Protocol (DCCP)
            RFC 4001: Textual Conventions for Internet Network Addresses";
        }
      
        /*** collection of types related to autonomous systems ***/
      
        typedef as-number {
          type uint32;
          description
           "The as-number type represents autonomous system numbers
            which identify an Autonomous System (AS).  An AS is a set
            of routers under a single technical administration, using
            an interior gateway protocol and common metrics to route
            packets within the AS, and using an exterior gateway
            protocol to route packets to other ASes.  IANA maintains
            the AS number space and has delegated large parts to the
            regional registries.
      
            Autonomous system numbers were originally limited to 16
            bits.  BGP extensions have enlarged the autonomous system
            number space to 32 bits.  This type therefore uses an uint32
            base type without a range restriction in order to support
            a larger autonomous system number space.
      
            In the value set and its semantics, this type is equivalent
            to the InetAutonomousSystemNumber textual convention of
            the SMIv2.";
          reference
           "RFC 1930: Guidelines for creation, selection, and registration
                      of an Autonomous System (AS)
            RFC 4271: A Border Gateway Protocol 4 (BGP-4)
            RFC 4001: Textual Conventions for Internet Network Addresses
            RFC 6793: BGP Support for Four-Octet Autonomous System (AS)
                      Number Space";
        }
      
        /*** collection of types related to IP addresses and hostnames ***/
      
        typedef ip-address {
          type union {
            type inet:ipv4-address;
            type inet:ipv6-address;
          }
          description
           "The ip-address type represents an IP address and is IP
            version neutral.  The format of the textual representation
            implies the IP version.  This type supports scoped addresses
            by allowing zone identifiers in the address format.";
          reference
           "RFC 4007: IPv6 Scoped Address Architecture";
        }
      
        typedef ipv4-address {
          type string {
            pattern
              '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
            +  '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'
            + '(%[\p{N}\p{L}]+)?';
          }
          description
            "The ipv4-address type represents an IPv4 address in
             dotted-quad notation.  The IPv4 address may include a zone
             index, separated by a % sign.
      
             The zone index is used to disambiguate identical address
             values.  For link-local addresses, the zone index will
             typically be the interface index number or the name of an
             interface.  If the zone index is not present, the default
             zone of the device will be used.
      
             The canonical format for the zone index is the numerical
             format";
        }
      
        typedef ipv6-address {
          type string {
            pattern '((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}'
                  + '((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|'
                  + '(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}'
                  + '(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))'
                  + '(%[\p{N}\p{L}]+)?';
            pattern '(([^:]+:){6}(([^:]+:[^:]+)|(.*\..*)))|'
                  + '((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)'
                  + '(%.+)?';
          }
          description
           "The ipv6-address type represents an IPv6 address in full,
            mixed, shortened, and shortened-mixed notation.  The IPv6
            address may include a zone index, separated by a % sign.
      
            The zone index is used to disambiguate identical address
            values.  For link-local addresses, the zone index will
            typically be the interface index number or the name of an
            interface.  If the zone index is not present, the default
            zone of the device will be used.
      
            The canonical format of IPv6 addresses uses the textual
            representation defined in Section 4 of RFC 5952.  The
            canonical format for the zone index is the numerical
            format as described in Section 11.2 of RFC 4007.";
          reference
           "RFC 4291: IP Version 6 Addressing Architecture
            RFC 4007: IPv6 Scoped Address Architecture
            RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        typedef ip-address-no-zone {
          type union {
            type inet:ipv4-address-no-zone;
            type inet:ipv6-address-no-zone;
          }
          description
           "The ip-address-no-zone type represents an IP address and is
            IP version neutral.  The format of the textual representation
            implies the IP version.  This type does not support scoped
            addresses since it does not allow zone identifiers in the
            address format.";
          reference
           "RFC 4007: IPv6 Scoped Address Architecture";
        }
      
        typedef ipv4-address-no-zone {
          type inet:ipv4-address {
            pattern '[0-9\.]*';
          }
          description
            "An IPv4 address without a zone index.  This type, derived from
             ipv4-address, may be used in situations where the zone is
             known from the context and hence no zone index is needed.";
        }
      
        typedef ipv6-address-no-zone {
          type inet:ipv6-address {
            pattern '[0-9a-fA-F:\.]*';
          }
          description
            "An IPv6 address without a zone index.  This type, derived from
             ipv6-address, may be used in situations where the zone is
             known from the context and hence no zone index is needed.";
          reference
           "RFC 4291: IP Version 6 Addressing Architecture
            RFC 4007: IPv6 Scoped Address Architecture
            RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        typedef ip-prefix {
          type union {
            type inet:ipv4-prefix;
            type inet:ipv6-prefix;
          }
          description
           "The ip-prefix type represents an IP prefix and is IP
            version neutral.  The format of the textual representations
            implies the IP version.";
        }
      
        typedef ipv4-prefix {
          type string {
            pattern
               '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
             +  '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'
             + '/(([0-9])|([1-2][0-9])|(3[0-2]))';
          }
          description
           "The ipv4-prefix type represents an IPv4 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal to 32.
      
            A prefix length value of n corresponds to an IP address
            mask that has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
      
            The canonical format of an IPv4 prefix has all bits of
            the IPv4 address set to zero that are not part of the
            IPv4 prefix.";
        }
      
        typedef ipv6-prefix {
          type string {
            pattern '((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}'
                  + '((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|'
                  + '(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}'
                  + '(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))'
                  + '(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))';
            pattern '(([^:]+:){6}(([^:]+:[^:]+)|(.*\..*)))|'
                  + '((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)'
                  + '(/.+)';
          }
      
          description
           "The ipv6-prefix type represents an IPv6 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal to 128.
      
            A prefix length value of n corresponds to an IP address
            mask that has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
      
            The IPv6 address should have all bits that do not belong
            to the prefix set to zero.
      
            The canonical format of an IPv6 prefix has all bits of
            the IPv6 address set to zero that are not part of the
            IPv6 prefix.  Furthermore, the IPv6 address is represented
            as defined in Section 4 of RFC 5952.";
          reference
           "RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        /*** collection of domain name and URI types ***/
      
        typedef domain-name {
          type string {
            length "1..253";
            pattern
              '((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*'
            + '([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)'
            + '|\.';
          }
          description
           "The domain-name type represents a DNS domain name.  The
            name SHOULD be fully qualified whenever possible.
      
            Internet domain names are only loosely specified.  Section
            3.5 of RFC 1034 recommends a syntax (modified in Section
            2.1 of RFC 1123).  The pattern above is intended to allow
            for current practice in domain name use, and some possible
            future expansion.  It is designed to hold various types of
            domain names, including names used for A or AAAA records
            (host names) and other records, such as SRV records.  Note
            that Internet host names have a stricter syntax (described
            in RFC 952) than the DNS recommendations in RFCs 1034 and
            1123, and that systems that want to store host names in
            schema nodes using the domain-name type are recommended to
            adhere to this stricter standard to ensure interoperability.
      
            The encoding of DNS names in the DNS protocol is limited
            to 255 characters.  Since the encoding consists of labels
            prefixed by a length bytes and there is a trailing NULL
            byte, only 253 characters can appear in the textual dotted
            notation.
      
            The description clause of schema nodes using the domain-name
            type MUST describe when and how these names are resolved to
            IP addresses.  Note that the resolution of a domain-name value
            may require to query multiple DNS records (e.g., A for IPv4
            and AAAA for IPv6).  The order of the resolution process and
            which DNS record takes precedence can either be defined
            explicitly or may depend on the configuration of the
            resolver.
      
            Domain-name values use the US-ASCII encoding.  Their canonical
            format uses lowercase US-ASCII characters.  Internationalized
            domain names MUST be A-labels as per RFC 5890.";
          reference
           "RFC  952: DoD Internet Host Table Specification
            RFC 1034: Domain Names - Concepts and Facilities
            RFC 1123: Requirements for Internet Hosts -- Application
                      and Support
            RFC 2782: A DNS RR for specifying the location of services
                      (DNS SRV)
            RFC 5890: Internationalized Domain Names in Applications
                      (IDNA): Definitions and Document Framework";
        }
      
        typedef host {
          type union {
            type inet:ip-address;
            type inet:domain-name;
          }
          description
           "The host type represents either an IP address or a DNS
            domain name.";
        }
      
        typedef uri {
          type string;
          description
           "The uri type represents a Uniform Resource Identifier
            (URI) as defined by STD 66.
      
            Objects using the uri type MUST be in US-ASCII encoding,
            and MUST be normalized as described by RFC 3986 Sections
            6.2.1, 6.2.2.1, and 6.2.2.2.  All unnecessary
            percent-encoding is removed, and all case-insensitive
            characters are set to lowercase except for hexadecimal
            digits, which are normalized to uppercase as described in
            Section 6.2.2.1.
      
            The purpose of this normalization is to help provide
            unique URIs.  Note that this normalization is not
            sufficient to provide uniqueness.  Two URIs that are
            textually distinct after this normalization may still be
            equivalent.
      
            Objects using the uri type may restrict the schemes that
            they permit.  For example, 'data:' and 'urn:' schemes
            might not be appropriate.
      
            A zero-length URI is not a valid URI.  This can be used to
            express 'URI absent' where required.
      
            In the value set and its semantics, this type is equivalent
            to the Uri SMIv2 textual convention defined in RFC 5017.";
          reference
           "RFC 3986: Uniform Resource Identifier (URI): Generic Syntax
            RFC 3305: Report from the Joint W3C/IETF URI Planning Interest
                      Group: Uniform Resource Identifiers (URIs), URLs,
                      and Uniform Resource Names (URNs): Clarifications
                      and Recommendations
            RFC 5017: MIB Textual Conventions for Uniform Resource
                      Identifiers (URIs)";
        }
      
      }
      
    ietf-yang-types.yang: |
      module ietf-yang-types {
      
        namespace "urn:ietf:params:xml:ns:yang:ietf-yang-types";
        prefix "yang";
      
        organization
         "IETF NETMOD (NETCONF Data Modeling Language) Working Group";
      
        contact
         "WG Web:   <http://tools.ietf.org/wg/netmod/>
          WG List:  <mailto:netmod@ietf.org>
      
          WG Chair: David Kessens
                    <mailto:david.kessens@nsn.com>
      
          WG Chair: Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>
      
          Editor:   Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>";
      
        description
         "This module contains a collection of generally useful derived
          YANG data types.
      
          Copyright (c) 2013 IETF Trust and the persons identified as
          authors of the code.  All rights reserved.
      
          Redistribution and use in source and binary forms, with or
          without modification, is permitted pursuant to, and subject
          to the license terms contained in, the Simplified BSD License
          set forth in Section 4.c of the IETF Trust's Legal Provisions
          Relating to IETF Documents
          (http://trustee.ietf.org/license-info).
      
          This version of this YANG module is part of RFC 6991; see
          the RFC itself for full legal notices.";
      
        revision 2013-07-15 {
          description
           "This revision adds the following new data types:
            - yang-identifier
            - hex-string
            - uuid
            - dotted-quad";
          reference
           "RFC 6991: Common YANG Data Types";
        }
      
        revision 2010-09-24 {
          description
           "Initial revision.";
          reference
           "RFC 6021: Common YANG Data Types";
        }
      
        /*** collection of counter and gauge types ***/
      
        typedef counter32 {
          type uint32;
          description
           "The counter32 type represents a non-negative integer
            that monotonically increases until it reaches a
            maximum value of 2^32-1 (4294967295 decimal), when it
            wraps around and starts increasing again from zero.
      
            Counters have no defined 'initial' value, and thus, a
            single value of a counter has (in general) no information
            content.  Discontinuities in the monotonically increasing
            value normally occur at re-initialization of the
            management system, and at other times as specified in the
            description of a schema node using this type.  If such
            other times can occur, for example, the creation of
            a schema node of type counter32 at times other than
            re-initialization, then a corresponding schema node
            should be defined, with an appropriate type, to indicate
            the last discontinuity.
      
            The counter32 type should not be used for configuration
            schema nodes.  A default statement SHOULD NOT be used in
            combination with the type counter32.
      
            In the value set and its semantics, this type is equivalent
            to the Counter32 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef zero-based-counter32 {
          type yang:counter32;
          default "0";
          description
           "The zero-based-counter32 type represents a counter32
            that has the defined 'initial' value zero.
      
            A schema node of this type will be set to zero (0) on creation
            and will thereafter increase monotonically until it reaches
            a maximum value of 2^32-1 (4294967295 decimal), when it
            wraps around and starts increasing again from zero.
      
            Provided that an application discovers a new schema node
            of this type within the minimum time to wrap, it can use the
            'initial' value as a delta.  It is important for a management
            station to be aware of this minimum time and the actual time
            between polls, and to discard data if the actual time is too
            long or there is no defined minimum time.
      
            In the value set and its semantics, this type is equivalent
            to the ZeroBasedCounter32 textual convention of the SMIv2.";
          reference
            "RFC 4502: Remote Network Monitoring Management Information
                       Base Version 2";
        }
      
        typedef counter64 {
          type uint64;
          description
           "The counter64 type represents a non-negative integer
            that monotonically increases until it reaches a
            maximum value of 2^64-1 (18446744073709551615 decimal),
            when it wraps around and starts increasing again from zero.
      
            Counters have no defined 'initial' value, and thus, a
            single value of a counter has (in general) no information
            content.  Discontinuities in the monotonically increasing
            value normally occur at re-initialization of the
            management system, and at other times as specified in the
            description of a schema node using this type.  If such
            other times can occur, for example, the creation of
            a schema node of type counter64 at times other than
            re-initialization, then a corresponding schema node
            should be defined, with an appropriate type, to indicate
            the last discontinuity.
      
            The counter64 type should not be used for configuration
            schema nodes.  A default statement SHOULD NOT be used in
            combination with the type counter64.
      
            In the value set and its semantics, this type is equivalent
            to the Counter64 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef zero-based-counter64 {
          type yang:counter64;
          default "0";
          description
           "The zero-based-counter64 type represents a counter64 that
            has the defined 'initial' value zero.
      
            A schema node of this type will be set to zero (0) on creation
            and will thereafter increase monotonically until it reaches
            a maximum value of 2^64-1 (18446744073709551615 decimal),
            when it wraps around and starts increasing again from zero.
      
            Provided that an application discovers a new schema node
            of this type within the minimum time to wrap, it can use the
            'initial' value as a delta.  It is important for a management
            station to be aware of this minimum time and the actual time
            between polls, and to discard data if the actual time is too
            long or there is no defined minimum time.
      
            In the value set and its semantics, this type is equivalent
            to the ZeroBasedCounter64 textual convention of the SMIv2.";
          reference
           "RFC 2856: Textual Conventions for Additional High Capacity
                      Data Types";
        }
      
        typedef gauge32 {
          type uint32;
          description
           "The gauge32 type represents a non-negative integer, which
            may increase or decrease, but shall never exceed a maximum
            value, nor fall below a minimum value.  The maximum value
            cannot be greater than 2^32-1 (4294967295 decimal), and
            the minimum value cannot be smaller than 0.  The value of
            a gauge32 has its maximum value whenever the information
            being modeled is greater than or equal to its maximum
            value, and has its minimum value whenever the information
            being modeled is smaller than or equal to its minimum value.
            If the information being modeled subsequently decreases
            below (increases above) the maximum (minimum) value, the
            gauge32 also decreases (increases).
      
            In the value set and its semantics, this type is equivalent
            to the Gauge32 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef gauge64 {
          type uint64;
          description
           "The gauge64 type represents a non-negative integer, which
            may increase or decrease, but shall never exceed a maximum
            value, nor fall below a minimum value.  The maximum value
            cannot be greater than 2^64-1 (18446744073709551615), and
            the minimum value cannot be smaller than 0.  The value of
            a gauge64 has its maximum value whenever the information
            being modeled is greater than or equal to its maximum
            value, and has its minimum value whenever the information
            being modeled is smaller than or equal to its minimum value.
            If the information being modeled subsequently decreases
            below (increases above) the maximum (minimum) value, the
            gauge64 also decreases (increases).
      
            In the value set and its semantics, this type is equivalent
            to the CounterBasedGauge64 SMIv2 textual convention defined
            in RFC 2856";
          reference
           "RFC 2856: Textual Conventions for Additional High Capacity
                      Data Types";
        }
      
        /*** collection of identifier-related types ***/
      
        typedef object-identifier {
          type string {
            pattern '(([0-1](\.[1-3]?[0-9]))|(2\.(0|([1-9]\d*))))'
                  + '(\.(0|([1-9]\d*)))*';
          }
          description
           "The object-identifier type represents administratively
            assigned names in a registration-hierarchical-name tree.
      
            Values of this type are denoted as a sequence of numerical
            non-negative sub-identifier values.  Each sub-identifier
            value MUST NOT exceed 2^32-1 (4294967295).  Sub-identifiers
            are separated by single dots and without any intermediate
            whitespace.
      
            The ASN.1 standard restricts the value space of the first
            sub-identifier to 0, 1, or 2.  Furthermore, the value space
            of the second sub-identifier is restricted to the range
            0 to 39 if the first sub-identifier is 0 or 1.  Finally,
            the ASN.1 standard requires that an object identifier
            has always at least two sub-identifiers.  The pattern
            captures these restrictions.
      
            Although the number of sub-identifiers is not limited,
            module designers should realize that there may be
            implementations that stick with the SMIv2 limit of 128
            sub-identifiers.
      
            This type is a superset of the SMIv2 OBJECT IDENTIFIER type
            since it is not restricted to 128 sub-identifiers.  Hence,
            this type SHOULD NOT be used to represent the SMIv2 OBJECT
            IDENTIFIER type; the object-identifier-128 type SHOULD be
            used instead.";
          reference
           "ISO9834-1: Information technology -- Open Systems
            Interconnection -- Procedures for the operation of OSI
            Registration Authorities: General procedures and top
            arcs of the ASN.1 Object Identifier tree";
        }
      
        typedef object-identifier-128 {
          type object-identifier {
            pattern '\d*(\.\d*){1,127}';
          }
          description
           "This type represents object-identifiers restricted to 128
            sub-identifiers.
      
            In the value set and its semantics, this type is equivalent
            to the OBJECT IDENTIFIER type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef yang-identifier {
          type string {
            length "1..max";
            pattern '[a-zA-Z_][a-zA-Z0-9\-_.]*';
            pattern '.|..|[^xX].*|.[^mM].*|..[^lL].*';
          }
          description
            "A YANG identifier string as defined by the 'identifier'
             rule in Section 12 of RFC 6020.  An identifier must
             start with an alphabetic character or an underscore
             followed by an arbitrary sequence of alphabetic or
             numeric characters, underscores, hyphens, or dots.
      
             A YANG identifier MUST NOT start with any possible
             combination of the lowercase or uppercase character
             sequence 'xml'.";
          reference
            "RFC 6020: YANG - A Data Modeling Language for the Network
                       Configuration Protocol (NETCONF)";
        }
      
        /*** collection of types related to date and time***/
      
        typedef date-and-time {
          type string {
            pattern '\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?'
                  + '(Z|[\+\-]\d{2}:\d{2})';
          }
          description
           "The date-and-time type is a profile of the ISO 8601
            standard for representation of dates and times using the
            Gregorian calendar.  The profile is defined by the
            date-time production in Section 5.6 of RFC 3339.
      
            The date-and-time type is compatible with the dateTime XML
            schema type with the following notable exceptions:
      
            (a) The date-and-time type does not allow negative years.
      
            (b) The date-and-time time-offset -00:00 indicates an unknown
                time zone (see RFC 3339) while -00:00 and +00:00 and Z
                all represent the same time zone in dateTime.
      
            (c) The canonical format (see below) of data-and-time values
                differs from the canonical format used by the dateTime XML
                schema type, which requires all times to be in UTC using
                the time-offset 'Z'.
      
            This type is not equivalent to the DateAndTime textual
            convention of the SMIv2 since RFC 3339 uses a different
            separator between full-date and full-time and provides
            higher resolution of time-secfrac.
      
            The canonical format for date-and-time values with a known time
            zone uses a numeric time zone offset that is calculated using
            the device's configured known offset to UTC time.  A change of
            the device's offset to UTC time will cause date-and-time values
            to change accordingly.  Such changes might happen periodically
            in case a server follows automatically daylight saving time
            (DST) time zone offset changes.  The canonical format for
            date-and-time values with an unknown time zone (usually
            referring to the notion of local time) uses the time-offset
            -00:00.";
          reference
           "RFC 3339: Date and Time on the Internet: Timestamps
            RFC 2579: Textual Conventions for SMIv2
            XSD-TYPES: XML Schema Part 2: Datatypes Second Edition";
        }
      
        typedef timeticks {
          type uint32;
          description
           "The timeticks type represents a non-negative integer that
            represents the time, modulo 2^32 (4294967296 decimal), in
            hundredths of a second between two epochs.  When a schema
            node is defined that uses this type, the description of
            the schema node identifies both of the reference epochs.
      
            In the value set and its semantics, this type is equivalent
            to the TimeTicks type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef timestamp {
          type yang:timeticks;
          description
           "The timestamp type represents the value of an associated
            timeticks schema node at which a specific occurrence
            happened.  The specific occurrence must be defined in the
            description of any schema node defined using this type.  When
            the specific occurrence occurred prior to the last time the
            associated timeticks attribute was zero, then the timestamp
            value is zero.  Note that this requires all timestamp values
            to be reset to zero when the value of the associated timeticks
            attribute reaches 497+ days and wraps around to zero.
      
            The associated timeticks schema node must be specified
            in the description of any schema node using this type.
      
            In the value set and its semantics, this type is equivalent
            to the TimeStamp textual convention of the SMIv2.";
          reference
           "RFC 2579: Textual Conventions for SMIv2";
        }
      
        /*** collection of generic address types ***/
      
        typedef phys-address {
          type string {
            pattern '([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?';
          }
      
          description
           "Represents media- or physical-level addresses represented
            as a sequence octets, each octet represented by two hexadecimal
            numbers.  Octets are separated by colons.  The canonical
            representation uses lowercase characters.
      
            In the value set and its semantics, this type is equivalent
            to the PhysAddress textual convention of the SMIv2.";
          reference
           "RFC 2579: Textual Conventions for SMIv2";
        }
      
        typedef mac-address {
          type string {
            pattern '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}';
          }
          description
           "The mac-address type represents an IEEE 802 MAC address.
            The canonical representation uses lowercase characters.
      
            In the value set and its semantics, this type is equivalent
            to the MacAddress textual convention of the SMIv2.";
          reference
           "IEEE 802: IEEE Standard for Local and Metropolitan Area
                      Networks: Overview and Architecture
            RFC 2579: Textual Conventions for SMIv2";
        }
      
        /*** collection of XML-specific types ***/
      
        typedef xpath1.0 {
          type string;
          description
           "This type represents an XPATH 1.0 expression.
      
            When a schema node is defined that uses this type, the
            description of the schema node MUST specify the XPath
            context in which the XPath expression is evaluated.";
          reference
           "XPATH: XML Path Language (XPath) Version 1.0";
        }
      
        /*** collection of string types ***/
      
        typedef hex-string {
          type string {
            pattern '([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?';
          }
          description
           "A hexadecimal string with octets represented as hex digits
            separated by colons.  The canonical representation uses
            lowercase characters.";
        }
      
        typedef uuid {
          type string {
            pattern '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'
                  + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';
          }
          description
           "A Universally Unique IDentifier in the string representation
            defined in RFC 4122.  The canonical representation uses
            lowercase characters.
      
            The following is an example of a UUID in string representation:
            f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            ";
          reference
           "RFC 4122: A Universally Unique IDentifier (UUID) URN
                      Namespace";
        }
      
        typedef dotted-quad {
          type string {
            pattern
              '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
            + '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';
          }
          description
            "An unsigned 32-bit number expressed in the dotted-quad
             notation, i.e., four octets written as decimal numbers
             and separated with the '.' (full stop) character.";
        }
      }
      
    ip-domain.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module ip-domain {
        namespace "http://opennetworking.org/aether/ip-domain";
        prefix ipd;
      
        import ietf-inet-types { prefix inet; }
        import aether-types { prefix at; }
        import enterprise{ prefix ent; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether IP-Domain. This is a list of available subnets
           that may be assigned to UEs, as well as DNS servers and other
           metadata";
      
        revision "2021-06-02" {
          description "An Aether IP and Domain Specification";
          reference "RFC 6087";
        }
      
        typedef ip-domain-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for ip-domain-id";
        }
      
        container ip-domain {
          description "The top level container";
      
          list ip-domain {
            key "id";
            description
              "List of ip domains";
      
            leaf id {
              type ip-domain-id;
              description "ID for this ip domain.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf dnn {
              type at:dnn;
              description "DNN/APN";
            }
      
            leaf dns-primary {
              type inet:ip-address;
              description "primary dns server name";
            }
      
            leaf dns-secondary {
              type inet:ip-address;
              description "secondary dns server name";
            }
      
            // Note: Cannot use a subnet as a list key. Dropped support from a
            // list of subnets to a single subnet. Revisit in the future.
            leaf subnet {
              type inet:ipv4-prefix;
              mandatory true;
              description "subnet to allocate ip addresses from";
            }
      
            leaf admin-status {
              type at:admin-status;
              description "administrative status";
            }
      
            leaf mtu {
              type at:mtu;
              description "maximum transmission unit";
            }
      
            leaf description {
              type at:description;
              description "description of this ip domain";
            }
      
            // Ip-Domain is always owned by an Enterprise, because it contains
            // IP addresses relative to that Enterprise.
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this IP-Domain";
            }
          }
        }
      }
      
    site.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module site {
        namespace "http://opennetworking.org/aether/site";
        prefix st;
      
        import aether-types{ prefix at; }
        import enterprise{ prefix ent; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether site is a location where resources are deployed.";
      
        revision "2021-06-02" {
          description "An Aether Site.";
          reference "RFC 6087";
        }
      
        typedef site-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for site-id";
        }
      
        container site {
          description "The top level container";
      
          list site {
            key "id";
            description
              "List of site";
      
            leaf id {
              type site-id;
              description "ID for this site.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this site";
            }
      
            container imsi-definition {
              leaf mcc {
                type at:mcc;
      	  mandatory true;
                description "mobile country code";
              }
              leaf mnc {
                type at:mnc;
      	  mandatory true;
                description "mobile network code";
              }
              leaf enterprise {
                type at:ent;
      	  mandatory true;
                description "enterprise-specific identifier";
              }
              leaf format {
                type string {
                  length 15;
                }
                mandatory true;
                description "IMSI format specifier, describes how fields are packed into an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.";
                // Format specifiers:
                //   C = MCC
                //   N = MNC
                //   E = Enterprise
                //   0 = Forced Zero
                //   S = Subscriber ID
                // default is
                //   3 digit MCC
                //   3 digit MNC
                //   3 digit enterprise ID
                //   5 digit subscriber ID
              }
              description "The container for imsi-definition";
            }
      
            leaf description {
              type at:description;
              description "description of this site";
            }
          }
        }
      }
      
    template.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module template {
        namespace "http://opennetworking.org/aether/template";
        prefix tp;
      
        import aether-types{ prefix at; }
        import traffic-class{ prefix tc; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "The aether vcs-template holds common parameters used
           by a virtual connectivity service. Templates are used to
           populate a VCS.";
      
        revision "2021-06-02" {
          description "An Aether Virtual Cellular Service Template";
          reference "RFC 6087";
        }
      
        typedef template-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for template-id";
        }
      
        container template {
          description "The top level container";
      
          list template {
            key "id";
            description
              "List of vcs templates";
      
            leaf id {
              type template-id;
              description "ID for this vcs template.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf sst {
              type at:sst;
              description "Slice/Service type";
            }
      
            leaf sd {
              type at:sd;
              description "Slice differentiator";
            }
      
            leaf uplink {
              type uint32;
              description "Uplink data rate in mbps";
            }
      
            leaf downlink {
              type uint32;
              description "Downlink data rate in mbps";
            }
      
            leaf traffic-class {
              type leafref {
                path "/tc:traffic-class/tc:traffic-class/tc:id";
              }
              description
                "Link to traffic class";
            }
      
            leaf description {
              type at:description;
              description "description of this vcs template";
            }
          }
        }
      }
      
    traffic-class.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module traffic-class {
        namespace "http://opennetworking.org/aether/traffic-class";
        prefix tp;
      
        import aether-types{ prefix at; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "The aether traffic class associates qos constants
           with a named class of service";
      
        revision "2021-06-02" {
          description "An Aether Traffic Class";
          reference "RFC 6087";
        }
      
        typedef traffic-class-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for traffic-class-id";
        }
      
        container traffic-class {
          description "The top level container";
      
          list traffic-class {
            key "id";
            description
              "List of traffic class";
      
            leaf id {
              type traffic-class-id;
              description "ID for this traffic class.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf pelr {
              type at:pelr;
              description "PELR exponent";
            }
      
            leaf pdb {
              type at:pdb;
              description "PDB";
            }
      
            leaf qci {
              type at:qci;
              description "QCI";
            }
      
            leaf description {
              type at:description;
              description "description of this traffic class";
            }
          }
        }
      }
      
    upf.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module upf {
        namespace "http://opennetworking.org/aether/upf";
        prefix upf;
      
        import aether-types { prefix at; }
        import ietf-inet-types { prefix inet; }
        import enterprise{ prefix ent; }
        import ietf-yang-types{ prefix yg; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description "A Aether UPF List is a named User Plane Function.";
      
        revision "2021-06-02" {
          description "An Aether User Plane Function";
          reference "RFC 6087";
        }
      
        typedef upf-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for upf-id";
        }
      
        container upf {
          description "The top level container";
      
          list upf {
            key "id";
            description
              "A list of named upfs.";
      
            leaf id {
              type upf-id;
              description "ID for this upf.";
            }
      
            leaf address {
              type inet:host;
              mandatory true;
              description
                "Address of UPF";
            }
      
            leaf port {
              type inet:port-number;
              mandatory true;
              description
                  "Port for UPF";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this UPF";
            }
      
            // UPFs are always owned by an Enterprise, since they typically exist on the
            // Enterprise's edge. TODO: Consider whether they should be owned by a Site
            // instead of Enterprise.
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this Access Point List";
            }
          }
        }
      }
      
    vcs.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module vcs {
        namespace "http://opennetworking.org/aether/vcs";
        prefix sl;
      
        import template{ prefix vt; }
        import upf { prefix upf; }
        import ap-list{ prefix apl; }
        import application{ prefix app; }
        import aether-types{ prefix at; }
        import device-group{ prefix dg; }
        import traffic-class{ prefix tc; }
        import ietf-yang-types{ prefix yg; }
        import enterprise{ prefix ent; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Virtual Cellular Service (VCS) is
           used to connect UE devices with applications";
      
        revision "2021-06-02" {
          description "An Aether Virtual Cellular Service";
          reference "RFC 6087";
        }
      
        typedef vcs-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for vcs-id";
        }
      
        container vcs {
          description "The top level container";
      
          list vcs {
            key "id";
            description
              "List of virtual cellular services";
      
            leaf id {
              type vcs-id;
              description "ID for this vcs.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            list device-group {
              key "device-group";
              leaf device-group {
                type leafref {
                  path "/dg:device-group/dg:device-group/dg:id";
                }
                description
                  "Link to device group";
              }
              leaf enable {
                type boolean;
                default true;
                description
                  "Enable this device group";
              }
              description
                "A list of device groups. Groups will only participate in
                 the VCS if the enable field is set to True";
            }
      
            leaf template {
              type leafref {
                path "/vt:template/vt:template/vt:id";
              }
              description
                "Link to user vcs template that was used to initialize
                 this VCS";
            }
      
            list application {
              key "application";
              leaf application {
                type leafref {
                  path "/app:application/app:application/app:id";
                }
                mandatory true;
                description
                  "Link to application";
              }
              leaf allow {
                type boolean;
                default true;
                description
                  "Allow or deny this application";
              }
              description
                "An ordered list of applications to allow and deny. The deny rules
                 will be executed first, followed by the allow rules. The first rule
                 to match is returned. An implicit DENY ALL lies at the end.";
            }
      
            leaf upf {
              type leafref {
                path "/upf:upf/upf:upf/upf:id";
              }
              description
                "Link to user plane that implements this vcf";
            }
      
            leaf ap {
              type leafref {
                path "/apl:ap-list/apl:ap-list/apl:id";
              }
              description
                "Link to access-point list";
            }
      
            leaf description {
              type at:description;
              description "description of this vcs";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this VCS";
            }
      
            // the following are populated from the template
            leaf sst {
              type at:sst;
              mandatory true;
              description "Slice/Service type. Immutable.";
            }
      
            leaf sd {
              type at:sd;
              mandatory true;
              description "Slice differentiator. Immutable.";
            }
      
            leaf uplink {
              type uint32;
              description "Uplink data rate in mbps";
            }
      
            leaf downlink {
              type uint32;
              description "Downlink data rate in mbps";
            }
      
            leaf traffic-class {
              type leafref {
                path "/tc:traffic-class/tc:traffic-class/tc:id";
              }
              mandatory true;
              description
                "Link to traffic class";
            }
            // end of items populated from the template
          }
        }
      }
---
# Source: aether-roc-umbrella/charts/config-model-aether-4/templates/model.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: config.onosproject.org/v1beta1
kind: Model
metadata:
  name: aether-roc-umbrella-4.0.0-config-model-aether
  namespace: aether-roc
  labels:
    helm.sh/chart: config-model-aether-4-4.0.17
    app.kubernetes.io/name: config-model-aether-4
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  plugin:
    type: Aether
    version: "4.0.0"
  modules:
  - name: connectivity-service
    organization: Open Networking Foundation
    revision: 2021-10-21
    file: onf-connectivity-service.yang
  - name: enterprise
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: onf-enterprise.yang
  - name: aether-types
    organization: Open Networking Foundation
    revision: 2021-09-10
    file: onf-aether-types.yang
  - name: application
    organization: Open Networking Foundation
    revision: 2021-09-10
    file: onf-application.yang
  - name: device-group
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: onf-device-group.yang
  - name: ip-domain
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: onf-ip-domain.yang
  - name: site
    organization: Open Networking Foundation
    revision: 2021-09-10
    file: onf-site.yang
  - name: upf-list
    organization: Open Networking Foundation
    revision: 2021-09-16
    file: onf-upf.yang
  - name: vcs
    organization: Open Networking Foundation
    revision: 2021-09-10
    file: onf-vcs.yang
  - name: template
    organization: Open Networking Foundation
    revision: 2021-09-10
    file: onf-template.yang
  - name: traffic-class
    organization: Open Networking Foundation
    revision: 2021-06-02
    file: onf-traffic-class.yang    
  files:
    ietf-inet-types.yang: |
      module ietf-inet-types {
      
        namespace "urn:ietf:params:xml:ns:yang:ietf-inet-types";
        prefix "inet";
      
        organization
         "IETF NETMOD (NETCONF Data Modeling Language) Working Group";
      
        contact
         "WG Web:   <http://tools.ietf.org/wg/netmod/>
          WG List:  <mailto:netmod@ietf.org>
      
          WG Chair: David Kessens
                    <mailto:david.kessens@nsn.com>
      
          WG Chair: Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>
      
          Editor:   Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>";
      
        description
         "This module contains a collection of generally useful derived
          YANG data types for Internet addresses and related things.
      
          Copyright (c) 2013 IETF Trust and the persons identified as
          authors of the code.  All rights reserved.
      
          Redistribution and use in source and binary forms, with or
          without modification, is permitted pursuant to, and subject
          to the license terms contained in, the Simplified BSD License
          set forth in Section 4.c of the IETF Trust's Legal Provisions
          Relating to IETF Documents
          (http://trustee.ietf.org/license-info).
      
          This version of this YANG module is part of RFC 6991; see
          the RFC itself for full legal notices.";
      
        revision 2013-07-15 {
          description
           "This revision adds the following new data types:
            - ip-address-no-zone
            - ipv4-address-no-zone
            - ipv6-address-no-zone";
          reference
           "RFC 6991: Common YANG Data Types";
        }
      
        revision 2010-09-24 {
          description
           "Initial revision.";
          reference
           "RFC 6021: Common YANG Data Types";
        }
      
        /*** collection of types related to protocol fields ***/
      
        typedef ip-version {
          type enumeration {
            enum unknown {
              value "0";
              description
               "An unknown or unspecified version of the Internet
                protocol.";
            }
            enum ipv4 {
              value "1";
              description
               "The IPv4 protocol as defined in RFC 791.";
            }
            enum ipv6 {
              value "2";
              description
               "The IPv6 protocol as defined in RFC 2460.";
            }
          }
          description
           "This value represents the version of the IP protocol.
      
            In the value set and its semantics, this type is equivalent
            to the InetVersion textual convention of the SMIv2.";
          reference
           "RFC  791: Internet Protocol
            RFC 2460: Internet Protocol, Version 6 (IPv6) Specification
            RFC 4001: Textual Conventions for Internet Network Addresses";
        }
      
        typedef dscp {
          type uint8 {
            range "0..63";
          }
          description
           "The dscp type represents a Differentiated Services Code Point
            that may be used for marking packets in a traffic stream.
            In the value set and its semantics, this type is equivalent
            to the Dscp textual convention of the SMIv2.";
          reference
           "RFC 3289: Management Information Base for the Differentiated
                      Services Architecture
            RFC 2474: Definition of the Differentiated Services Field
                      (DS Field) in the IPv4 and IPv6 Headers
            RFC 2780: IANA Allocation Guidelines For Values In
                      the Internet Protocol and Related Headers";
        }
      
        typedef ipv6-flow-label {
          type uint32 {
            range "0..1048575";
          }
          description
           "The ipv6-flow-label type represents the flow identifier or Flow
            Label in an IPv6 packet header that may be used to
            discriminate traffic flows.
      
            In the value set and its semantics, this type is equivalent
            to the IPv6FlowLabel textual convention of the SMIv2.";
          reference
           "RFC 3595: Textual Conventions for IPv6 Flow Label
            RFC 2460: Internet Protocol, Version 6 (IPv6) Specification";
        }
      
        typedef port-number {
          type uint16 {
            range "0..65535";
          }
          description
           "The port-number type represents a 16-bit port number of an
            Internet transport-layer protocol such as UDP, TCP, DCCP, or
            SCTP.  Port numbers are assigned by IANA.  A current list of
            all assignments is available from <http://www.iana.org/>.
      
            Note that the port number value zero is reserved by IANA.  In
            situations where the value zero does not make sense, it can
            be excluded by subtyping the port-number type.
            In the value set and its semantics, this type is equivalent
            to the InetPortNumber textual convention of the SMIv2.";
          reference
           "RFC  768: User Datagram Protocol
            RFC  793: Transmission Control Protocol
            RFC 4960: Stream Control Transmission Protocol
            RFC 4340: Datagram Congestion Control Protocol (DCCP)
            RFC 4001: Textual Conventions for Internet Network Addresses";
        }
      
        /*** collection of types related to autonomous systems ***/
      
        typedef as-number {
          type uint32;
          description
           "The as-number type represents autonomous system numbers
            which identify an Autonomous System (AS).  An AS is a set
            of routers under a single technical administration, using
            an interior gateway protocol and common metrics to route
            packets within the AS, and using an exterior gateway
            protocol to route packets to other ASes.  IANA maintains
            the AS number space and has delegated large parts to the
            regional registries.
      
            Autonomous system numbers were originally limited to 16
            bits.  BGP extensions have enlarged the autonomous system
            number space to 32 bits.  This type therefore uses an uint32
            base type without a range restriction in order to support
            a larger autonomous system number space.
      
            In the value set and its semantics, this type is equivalent
            to the InetAutonomousSystemNumber textual convention of
            the SMIv2.";
          reference
           "RFC 1930: Guidelines for creation, selection, and registration
                      of an Autonomous System (AS)
            RFC 4271: A Border Gateway Protocol 4 (BGP-4)
            RFC 4001: Textual Conventions for Internet Network Addresses
            RFC 6793: BGP Support for Four-Octet Autonomous System (AS)
                      Number Space";
        }
      
        /*** collection of types related to IP addresses and hostnames ***/
      
        typedef ip-address {
          type union {
            type inet:ipv4-address;
            type inet:ipv6-address;
          }
          description
           "The ip-address type represents an IP address and is IP
            version neutral.  The format of the textual representation
            implies the IP version.  This type supports scoped addresses
            by allowing zone identifiers in the address format.";
          reference
           "RFC 4007: IPv6 Scoped Address Architecture";
        }
      
        typedef ipv4-address {
          type string {
            pattern
              '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
            +  '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'
            + '(%[\p{N}\p{L}]+)?';
          }
          description
            "The ipv4-address type represents an IPv4 address in
             dotted-quad notation.  The IPv4 address may include a zone
             index, separated by a % sign.
      
             The zone index is used to disambiguate identical address
             values.  For link-local addresses, the zone index will
             typically be the interface index number or the name of an
             interface.  If the zone index is not present, the default
             zone of the device will be used.
      
             The canonical format for the zone index is the numerical
             format";
        }
      
        typedef ipv6-address {
          type string {
            pattern '((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}'
                  + '((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|'
                  + '(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}'
                  + '(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))'
                  + '(%[\p{N}\p{L}]+)?';
            pattern '(([^:]+:){6}(([^:]+:[^:]+)|(.*\..*)))|'
                  + '((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)'
                  + '(%.+)?';
          }
          description
           "The ipv6-address type represents an IPv6 address in full,
            mixed, shortened, and shortened-mixed notation.  The IPv6
            address may include a zone index, separated by a % sign.
      
            The zone index is used to disambiguate identical address
            values.  For link-local addresses, the zone index will
            typically be the interface index number or the name of an
            interface.  If the zone index is not present, the default
            zone of the device will be used.
      
            The canonical format of IPv6 addresses uses the textual
            representation defined in Section 4 of RFC 5952.  The
            canonical format for the zone index is the numerical
            format as described in Section 11.2 of RFC 4007.";
          reference
           "RFC 4291: IP Version 6 Addressing Architecture
            RFC 4007: IPv6 Scoped Address Architecture
            RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        typedef ip-address-no-zone {
          type union {
            type inet:ipv4-address-no-zone;
            type inet:ipv6-address-no-zone;
          }
          description
           "The ip-address-no-zone type represents an IP address and is
            IP version neutral.  The format of the textual representation
            implies the IP version.  This type does not support scoped
            addresses since it does not allow zone identifiers in the
            address format.";
          reference
           "RFC 4007: IPv6 Scoped Address Architecture";
        }
      
        typedef ipv4-address-no-zone {
          type inet:ipv4-address {
            pattern '[0-9\.]*';
          }
          description
            "An IPv4 address without a zone index.  This type, derived from
             ipv4-address, may be used in situations where the zone is
             known from the context and hence no zone index is needed.";
        }
      
        typedef ipv6-address-no-zone {
          type inet:ipv6-address {
            pattern '[0-9a-fA-F:\.]*';
          }
          description
            "An IPv6 address without a zone index.  This type, derived from
             ipv6-address, may be used in situations where the zone is
             known from the context and hence no zone index is needed.";
          reference
           "RFC 4291: IP Version 6 Addressing Architecture
            RFC 4007: IPv6 Scoped Address Architecture
            RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        typedef ip-prefix {
          type union {
            type inet:ipv4-prefix;
            type inet:ipv6-prefix;
          }
          description
           "The ip-prefix type represents an IP prefix and is IP
            version neutral.  The format of the textual representations
            implies the IP version.";
        }
      
        typedef ipv4-prefix {
          type string {
            pattern
               '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
             +  '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'
             + '/(([0-9])|([1-2][0-9])|(3[0-2]))';
          }
          description
           "The ipv4-prefix type represents an IPv4 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal to 32.
      
            A prefix length value of n corresponds to an IP address
            mask that has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
      
            The canonical format of an IPv4 prefix has all bits of
            the IPv4 address set to zero that are not part of the
            IPv4 prefix.";
        }
      
        typedef ipv6-prefix {
          type string {
            pattern '((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}'
                  + '((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|'
                  + '(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}'
                  + '(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))'
                  + '(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))';
            pattern '(([^:]+:){6}(([^:]+:[^:]+)|(.*\..*)))|'
                  + '((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)'
                  + '(/.+)';
          }
      
          description
           "The ipv6-prefix type represents an IPv6 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal to 128.
      
            A prefix length value of n corresponds to an IP address
            mask that has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
      
            The IPv6 address should have all bits that do not belong
            to the prefix set to zero.
      
            The canonical format of an IPv6 prefix has all bits of
            the IPv6 address set to zero that are not part of the
            IPv6 prefix.  Furthermore, the IPv6 address is represented
            as defined in Section 4 of RFC 5952.";
          reference
           "RFC 5952: A Recommendation for IPv6 Address Text
                      Representation";
        }
      
        /*** collection of domain name and URI types ***/
      
        typedef domain-name {
          type string {
            length "1..253";
            pattern
              '((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*'
            + '([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)'
            + '|\.';
          }
          description
           "The domain-name type represents a DNS domain name.  The
            name SHOULD be fully qualified whenever possible.
      
            Internet domain names are only loosely specified.  Section
            3.5 of RFC 1034 recommends a syntax (modified in Section
            2.1 of RFC 1123).  The pattern above is intended to allow
            for current practice in domain name use, and some possible
            future expansion.  It is designed to hold various types of
            domain names, including names used for A or AAAA records
            (host names) and other records, such as SRV records.  Note
            that Internet host names have a stricter syntax (described
            in RFC 952) than the DNS recommendations in RFCs 1034 and
            1123, and that systems that want to store host names in
            schema nodes using the domain-name type are recommended to
            adhere to this stricter standard to ensure interoperability.
      
            The encoding of DNS names in the DNS protocol is limited
            to 255 characters.  Since the encoding consists of labels
            prefixed by a length bytes and there is a trailing NULL
            byte, only 253 characters can appear in the textual dotted
            notation.
      
            The description clause of schema nodes using the domain-name
            type MUST describe when and how these names are resolved to
            IP addresses.  Note that the resolution of a domain-name value
            may require to query multiple DNS records (e.g., A for IPv4
            and AAAA for IPv6).  The order of the resolution process and
            which DNS record takes precedence can either be defined
            explicitly or may depend on the configuration of the
            resolver.
      
            Domain-name values use the US-ASCII encoding.  Their canonical
            format uses lowercase US-ASCII characters.  Internationalized
            domain names MUST be A-labels as per RFC 5890.";
          reference
           "RFC  952: DoD Internet Host Table Specification
            RFC 1034: Domain Names - Concepts and Facilities
            RFC 1123: Requirements for Internet Hosts -- Application
                      and Support
            RFC 2782: A DNS RR for specifying the location of services
                      (DNS SRV)
            RFC 5890: Internationalized Domain Names in Applications
                      (IDNA): Definitions and Document Framework";
        }
      
        typedef host {
          type union {
            type inet:ip-address;
            type inet:domain-name;
          }
          description
           "The host type represents either an IP address or a DNS
            domain name.";
        }
      
        typedef uri {
          type string;
          description
           "The uri type represents a Uniform Resource Identifier
            (URI) as defined by STD 66.
      
            Objects using the uri type MUST be in US-ASCII encoding,
            and MUST be normalized as described by RFC 3986 Sections
            6.2.1, 6.2.2.1, and 6.2.2.2.  All unnecessary
            percent-encoding is removed, and all case-insensitive
            characters are set to lowercase except for hexadecimal
            digits, which are normalized to uppercase as described in
            Section 6.2.2.1.
      
            The purpose of this normalization is to help provide
            unique URIs.  Note that this normalization is not
            sufficient to provide uniqueness.  Two URIs that are
            textually distinct after this normalization may still be
            equivalent.
      
            Objects using the uri type may restrict the schemes that
            they permit.  For example, 'data:' and 'urn:' schemes
            might not be appropriate.
      
            A zero-length URI is not a valid URI.  This can be used to
            express 'URI absent' where required.
      
            In the value set and its semantics, this type is equivalent
            to the Uri SMIv2 textual convention defined in RFC 5017.";
          reference
           "RFC 3986: Uniform Resource Identifier (URI): Generic Syntax
            RFC 3305: Report from the Joint W3C/IETF URI Planning Interest
                      Group: Uniform Resource Identifiers (URIs), URLs,
                      and Uniform Resource Names (URNs): Clarifications
                      and Recommendations
            RFC 5017: MIB Textual Conventions for Uniform Resource
                      Identifiers (URIs)";
        }
      
      }
      
    ietf-yang-types.yang: |
      module ietf-yang-types {
      
        namespace "urn:ietf:params:xml:ns:yang:ietf-yang-types";
        prefix "yang";
      
        organization
         "IETF NETMOD (NETCONF Data Modeling Language) Working Group";
      
        contact
         "WG Web:   <http://tools.ietf.org/wg/netmod/>
          WG List:  <mailto:netmod@ietf.org>
      
          WG Chair: David Kessens
                    <mailto:david.kessens@nsn.com>
      
          WG Chair: Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>
      
          Editor:   Juergen Schoenwaelder
                    <mailto:j.schoenwaelder@jacobs-university.de>";
      
        description
         "This module contains a collection of generally useful derived
          YANG data types.
      
          Copyright (c) 2013 IETF Trust and the persons identified as
          authors of the code.  All rights reserved.
      
          Redistribution and use in source and binary forms, with or
          without modification, is permitted pursuant to, and subject
          to the license terms contained in, the Simplified BSD License
          set forth in Section 4.c of the IETF Trust's Legal Provisions
          Relating to IETF Documents
          (http://trustee.ietf.org/license-info).
      
          This version of this YANG module is part of RFC 6991; see
          the RFC itself for full legal notices.";
      
        revision 2013-07-15 {
          description
           "This revision adds the following new data types:
            - yang-identifier
            - hex-string
            - uuid
            - dotted-quad";
          reference
           "RFC 6991: Common YANG Data Types";
        }
      
        revision 2010-09-24 {
          description
           "Initial revision.";
          reference
           "RFC 6021: Common YANG Data Types";
        }
      
        /*** collection of counter and gauge types ***/
      
        typedef counter32 {
          type uint32;
          description
           "The counter32 type represents a non-negative integer
            that monotonically increases until it reaches a
            maximum value of 2^32-1 (4294967295 decimal), when it
            wraps around and starts increasing again from zero.
      
            Counters have no defined 'initial' value, and thus, a
            single value of a counter has (in general) no information
            content.  Discontinuities in the monotonically increasing
            value normally occur at re-initialization of the
            management system, and at other times as specified in the
            description of a schema node using this type.  If such
            other times can occur, for example, the creation of
            a schema node of type counter32 at times other than
            re-initialization, then a corresponding schema node
            should be defined, with an appropriate type, to indicate
            the last discontinuity.
      
            The counter32 type should not be used for configuration
            schema nodes.  A default statement SHOULD NOT be used in
            combination with the type counter32.
      
            In the value set and its semantics, this type is equivalent
            to the Counter32 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef zero-based-counter32 {
          type yang:counter32;
          default "0";
          description
           "The zero-based-counter32 type represents a counter32
            that has the defined 'initial' value zero.
      
            A schema node of this type will be set to zero (0) on creation
            and will thereafter increase monotonically until it reaches
            a maximum value of 2^32-1 (4294967295 decimal), when it
            wraps around and starts increasing again from zero.
      
            Provided that an application discovers a new schema node
            of this type within the minimum time to wrap, it can use the
            'initial' value as a delta.  It is important for a management
            station to be aware of this minimum time and the actual time
            between polls, and to discard data if the actual time is too
            long or there is no defined minimum time.
      
            In the value set and its semantics, this type is equivalent
            to the ZeroBasedCounter32 textual convention of the SMIv2.";
          reference
            "RFC 4502: Remote Network Monitoring Management Information
                       Base Version 2";
        }
      
        typedef counter64 {
          type uint64;
          description
           "The counter64 type represents a non-negative integer
            that monotonically increases until it reaches a
            maximum value of 2^64-1 (18446744073709551615 decimal),
            when it wraps around and starts increasing again from zero.
      
            Counters have no defined 'initial' value, and thus, a
            single value of a counter has (in general) no information
            content.  Discontinuities in the monotonically increasing
            value normally occur at re-initialization of the
            management system, and at other times as specified in the
            description of a schema node using this type.  If such
            other times can occur, for example, the creation of
            a schema node of type counter64 at times other than
            re-initialization, then a corresponding schema node
            should be defined, with an appropriate type, to indicate
            the last discontinuity.
      
            The counter64 type should not be used for configuration
            schema nodes.  A default statement SHOULD NOT be used in
            combination with the type counter64.
      
            In the value set and its semantics, this type is equivalent
            to the Counter64 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef zero-based-counter64 {
          type yang:counter64;
          default "0";
          description
           "The zero-based-counter64 type represents a counter64 that
            has the defined 'initial' value zero.
      
            A schema node of this type will be set to zero (0) on creation
            and will thereafter increase monotonically until it reaches
            a maximum value of 2^64-1 (18446744073709551615 decimal),
            when it wraps around and starts increasing again from zero.
      
            Provided that an application discovers a new schema node
            of this type within the minimum time to wrap, it can use the
            'initial' value as a delta.  It is important for a management
            station to be aware of this minimum time and the actual time
            between polls, and to discard data if the actual time is too
            long or there is no defined minimum time.
      
            In the value set and its semantics, this type is equivalent
            to the ZeroBasedCounter64 textual convention of the SMIv2.";
          reference
           "RFC 2856: Textual Conventions for Additional High Capacity
                      Data Types";
        }
      
        typedef gauge32 {
          type uint32;
          description
           "The gauge32 type represents a non-negative integer, which
            may increase or decrease, but shall never exceed a maximum
            value, nor fall below a minimum value.  The maximum value
            cannot be greater than 2^32-1 (4294967295 decimal), and
            the minimum value cannot be smaller than 0.  The value of
            a gauge32 has its maximum value whenever the information
            being modeled is greater than or equal to its maximum
            value, and has its minimum value whenever the information
            being modeled is smaller than or equal to its minimum value.
            If the information being modeled subsequently decreases
            below (increases above) the maximum (minimum) value, the
            gauge32 also decreases (increases).
      
            In the value set and its semantics, this type is equivalent
            to the Gauge32 type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef gauge64 {
          type uint64;
          description
           "The gauge64 type represents a non-negative integer, which
            may increase or decrease, but shall never exceed a maximum
            value, nor fall below a minimum value.  The maximum value
            cannot be greater than 2^64-1 (18446744073709551615), and
            the minimum value cannot be smaller than 0.  The value of
            a gauge64 has its maximum value whenever the information
            being modeled is greater than or equal to its maximum
            value, and has its minimum value whenever the information
            being modeled is smaller than or equal to its minimum value.
            If the information being modeled subsequently decreases
            below (increases above) the maximum (minimum) value, the
            gauge64 also decreases (increases).
      
            In the value set and its semantics, this type is equivalent
            to the CounterBasedGauge64 SMIv2 textual convention defined
            in RFC 2856";
          reference
           "RFC 2856: Textual Conventions for Additional High Capacity
                      Data Types";
        }
      
        /*** collection of identifier-related types ***/
      
        typedef object-identifier {
          type string {
            pattern '(([0-1](\.[1-3]?[0-9]))|(2\.(0|([1-9]\d*))))'
                  + '(\.(0|([1-9]\d*)))*';
          }
          description
           "The object-identifier type represents administratively
            assigned names in a registration-hierarchical-name tree.
      
            Values of this type are denoted as a sequence of numerical
            non-negative sub-identifier values.  Each sub-identifier
            value MUST NOT exceed 2^32-1 (4294967295).  Sub-identifiers
            are separated by single dots and without any intermediate
            whitespace.
      
            The ASN.1 standard restricts the value space of the first
            sub-identifier to 0, 1, or 2.  Furthermore, the value space
            of the second sub-identifier is restricted to the range
            0 to 39 if the first sub-identifier is 0 or 1.  Finally,
            the ASN.1 standard requires that an object identifier
            has always at least two sub-identifiers.  The pattern
            captures these restrictions.
      
            Although the number of sub-identifiers is not limited,
            module designers should realize that there may be
            implementations that stick with the SMIv2 limit of 128
            sub-identifiers.
      
            This type is a superset of the SMIv2 OBJECT IDENTIFIER type
            since it is not restricted to 128 sub-identifiers.  Hence,
            this type SHOULD NOT be used to represent the SMIv2 OBJECT
            IDENTIFIER type; the object-identifier-128 type SHOULD be
            used instead.";
          reference
           "ISO9834-1: Information technology -- Open Systems
            Interconnection -- Procedures for the operation of OSI
            Registration Authorities: General procedures and top
            arcs of the ASN.1 Object Identifier tree";
        }
      
        typedef object-identifier-128 {
          type object-identifier {
            pattern '\d*(\.\d*){1,127}';
          }
          description
           "This type represents object-identifiers restricted to 128
            sub-identifiers.
      
            In the value set and its semantics, this type is equivalent
            to the OBJECT IDENTIFIER type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef yang-identifier {
          type string {
            length "1..max";
            pattern '[a-zA-Z_][a-zA-Z0-9\-_.]*';
            pattern '.|..|[^xX].*|.[^mM].*|..[^lL].*';
          }
          description
            "A YANG identifier string as defined by the 'identifier'
             rule in Section 12 of RFC 6020.  An identifier must
             start with an alphabetic character or an underscore
             followed by an arbitrary sequence of alphabetic or
             numeric characters, underscores, hyphens, or dots.
      
             A YANG identifier MUST NOT start with any possible
             combination of the lowercase or uppercase character
             sequence 'xml'.";
          reference
            "RFC 6020: YANG - A Data Modeling Language for the Network
                       Configuration Protocol (NETCONF)";
        }
      
        /*** collection of types related to date and time***/
      
        typedef date-and-time {
          type string {
            pattern '\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?'
                  + '(Z|[\+\-]\d{2}:\d{2})';
          }
          description
           "The date-and-time type is a profile of the ISO 8601
            standard for representation of dates and times using the
            Gregorian calendar.  The profile is defined by the
            date-time production in Section 5.6 of RFC 3339.
      
            The date-and-time type is compatible with the dateTime XML
            schema type with the following notable exceptions:
      
            (a) The date-and-time type does not allow negative years.
      
            (b) The date-and-time time-offset -00:00 indicates an unknown
                time zone (see RFC 3339) while -00:00 and +00:00 and Z
                all represent the same time zone in dateTime.
      
            (c) The canonical format (see below) of data-and-time values
                differs from the canonical format used by the dateTime XML
                schema type, which requires all times to be in UTC using
                the time-offset 'Z'.
      
            This type is not equivalent to the DateAndTime textual
            convention of the SMIv2 since RFC 3339 uses a different
            separator between full-date and full-time and provides
            higher resolution of time-secfrac.
      
            The canonical format for date-and-time values with a known time
            zone uses a numeric time zone offset that is calculated using
            the device's configured known offset to UTC time.  A change of
            the device's offset to UTC time will cause date-and-time values
            to change accordingly.  Such changes might happen periodically
            in case a server follows automatically daylight saving time
            (DST) time zone offset changes.  The canonical format for
            date-and-time values with an unknown time zone (usually
            referring to the notion of local time) uses the time-offset
            -00:00.";
          reference
           "RFC 3339: Date and Time on the Internet: Timestamps
            RFC 2579: Textual Conventions for SMIv2
            XSD-TYPES: XML Schema Part 2: Datatypes Second Edition";
        }
      
        typedef timeticks {
          type uint32;
          description
           "The timeticks type represents a non-negative integer that
            represents the time, modulo 2^32 (4294967296 decimal), in
            hundredths of a second between two epochs.  When a schema
            node is defined that uses this type, the description of
            the schema node identifies both of the reference epochs.
      
            In the value set and its semantics, this type is equivalent
            to the TimeTicks type of the SMIv2.";
          reference
           "RFC 2578: Structure of Management Information Version 2
                      (SMIv2)";
        }
      
        typedef timestamp {
          type yang:timeticks;
          description
           "The timestamp type represents the value of an associated
            timeticks schema node at which a specific occurrence
            happened.  The specific occurrence must be defined in the
            description of any schema node defined using this type.  When
            the specific occurrence occurred prior to the last time the
            associated timeticks attribute was zero, then the timestamp
            value is zero.  Note that this requires all timestamp values
            to be reset to zero when the value of the associated timeticks
            attribute reaches 497+ days and wraps around to zero.
      
            The associated timeticks schema node must be specified
            in the description of any schema node using this type.
      
            In the value set and its semantics, this type is equivalent
            to the TimeStamp textual convention of the SMIv2.";
          reference
           "RFC 2579: Textual Conventions for SMIv2";
        }
      
        /*** collection of generic address types ***/
      
        typedef phys-address {
          type string {
            pattern '([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?';
          }
      
          description
           "Represents media- or physical-level addresses represented
            as a sequence octets, each octet represented by two hexadecimal
            numbers.  Octets are separated by colons.  The canonical
            representation uses lowercase characters.
      
            In the value set and its semantics, this type is equivalent
            to the PhysAddress textual convention of the SMIv2.";
          reference
           "RFC 2579: Textual Conventions for SMIv2";
        }
      
        typedef mac-address {
          type string {
            pattern '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}';
          }
          description
           "The mac-address type represents an IEEE 802 MAC address.
            The canonical representation uses lowercase characters.
      
            In the value set and its semantics, this type is equivalent
            to the MacAddress textual convention of the SMIv2.";
          reference
           "IEEE 802: IEEE Standard for Local and Metropolitan Area
                      Networks: Overview and Architecture
            RFC 2579: Textual Conventions for SMIv2";
        }
      
        /*** collection of XML-specific types ***/
      
        typedef xpath1.0 {
          type string;
          description
           "This type represents an XPATH 1.0 expression.
      
            When a schema node is defined that uses this type, the
            description of the schema node MUST specify the XPath
            context in which the XPath expression is evaluated.";
          reference
           "XPATH: XML Path Language (XPath) Version 1.0";
        }
      
        /*** collection of string types ***/
      
        typedef hex-string {
          type string {
            pattern '([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?';
          }
          description
           "A hexadecimal string with octets represented as hex digits
            separated by colons.  The canonical representation uses
            lowercase characters.";
        }
      
        typedef uuid {
          type string {
            pattern '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'
                  + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';
          }
          description
           "A Universally Unique IDentifier in the string representation
            defined in RFC 4122.  The canonical representation uses
            lowercase characters.
      
            The following is an example of a UUID in string representation:
            f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            ";
          reference
           "RFC 4122: A Universally Unique IDentifier (UUID) URN
                      Namespace";
        }
      
        typedef dotted-quad {
          type string {
            pattern
              '(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}'
            + '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';
          }
          description
            "An unsigned 32-bit number expressed in the dotted-quad
             notation, i.e., four octets written as decimal numbers
             and separated with the '.' (full stop) character.";
        }
      }
      
    onf-aether-types.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-aether-types {
        namespace "http://opennetworking.org/aether/aether-types";
        prefix at;
      
        import ietf-inet-types { prefix inet; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description "A set of base types for aether modeling.";
      
        revision "2021-09-10" {
          description "Aether Base Types";
          reference "RFC 6087";
        }
      
        typedef bitrate {
            type uint64 {
            }
          description "The typedef for bitrate";
        }
      
        typedef burst {
            type uint32 {
            }
            default 625000;
          description "The typedef for burst";
        }
      
        typedef mcc {
            type string {
              pattern '[0-9]{3}';
            }
          description "The typedef for mcc";
        }
      
        typedef mnc {
            type string {
              pattern '[0-9]{2,3}';
            }
          description "The typedef for mnc";
        }
      
        typedef tac {
            type string {
              length 4..8;
              pattern '[0-9A-F\.]*';
            }
          description "The typedef for tac";
        }
      
        typedef ent {
            type uint32 {
              range 0..999;
            }
          description "The typedef for ent";
        }
      
        typedef dnn {
            type string {
              length 1..32;
            }
          description "The typedef for dnn";
        }
      
        typedef sst {
            type uint8 {
              range 1..255;
            }
          description "The typedef for sst";
        }
      
        typedef sd {
            type uint32 {
              range 0..16777215;
            }
          description "The typedef for sd";
        }
      
        typedef qci {
            type uint8 {
              range 1..32;
            }
          description "The typedef for qci";
        }
      
        typedef arp {
            type uint8 {
              range 1..15;
            }
          description "The typedef for arp";
        }
      
        typedef pelr {
            type int8 {
              range 0..10;
            }
          description "The typedef for pelr";
        }
      
        typedef pdb {
            type uint16 {
              range 0..1000;
            }
          description "The typedef for pdb";
        }
      
        typedef priority {
          type uint8 {
            // priorities 201-255 are reserved for system use
            range 0..200;
          }
          description "The typedef for priority";
        }
      
        // "TCP" or "UDP"
        typedef protocol {
            type string {
              length 3;
              pattern "TCP|UDP";
            }
            default "TCP";
          description "The typedef for protocol";
        }
      
        // "ENABLE" | "MAINTENTANCE" | "DISABLE"
        typedef admin-status {
            type string {
              length 0..16;
              pattern "ENABLE|MAINTENANCE|DISABLE";
            }
            default "ENABLE";
          description "The typedef for admin-status";
        }
      
        typedef behavior {
            type string {
              length 0..20;
              pattern "DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC";
            }
          description "The typedef for behavior";
        }
      
        typedef mtu {
            type inet:port-number;
            default 1492;
          description "The typedef for mtu";
        }
      
        typedef description {
          type string {
            length 1..1024;
          }
          description "The typedef for description";
        }
      }
      
    onf-application.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-application {
        namespace "http://opennetworking.org/enterprise/application";
        prefix app;
      
        import ietf-inet-types{ prefix ietf; }
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types{ prefix at; }
        import onf-enterprise{ prefix ent; }
        import onf-traffic-class{ prefix tc; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Application is an application that devices may
           connect to. Includes a set of endpoints where services are
           provided.";
      
        revision "2021-09-10" {
          description "Aether Application.";
          reference "RFC 6087";
        }
      
        typedef application-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for application-id";
        }
      
        container application {
          description "The top level container";
      
          list application {
            key "id";
            description
              "List of applications";
      
            leaf id {
              type application-id;
              description "ID for this application.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this application";
            }
      
            leaf address {
              type ietf:host;
              mandatory true;
              description
                  "Address of this application. Either a hostname, an IP, or a subnet.";
            }
      
            list endpoint {
              key "endpoint-id";
              leaf endpoint-id {
                type yg:yang-identifier;
                description
                    "Id of this endpoint";
              }
              leaf port-start {
                type ietf:port-number;
                description
                    "First port in range";
              }
              leaf port-end {
                type ietf:port-number;
                description
                    "Last port in range";
              }
              leaf protocol {
                type at:protocol;
                description
                    "Protocol of this endpoint";
              }
              container mbr {
                description "Maximum bitrate";
                leaf uplink {
                  type at:bitrate;
                  units bps;
                  description "Per-Device per-Application MBR uplink data rate in bps";
                }
      
                leaf downlink {
                  type at:bitrate;
                  units bps;
                  description "Per-Device per application MBR downlink data rate in bps";
                }
              }
              leaf traffic-class {
                type leafref {
                  path "/tc:traffic-class/tc:traffic-class/tc:id";
                }
                description
                  "Link to traffic class";
              }
              leaf display-name {
                type string {
                    length 1..80;
                }
                description "display name to use in GUI or CLI";
              }
              description "list for endpoint";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this Application. May be set to None if the application is global to all Enterprises.";
            }
          }
        }
      }
      
    onf-connectivity-service.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-connectivity-service {
        namespace "http://opennetworking.org/aether/connectivity-service";
        prefix cs;
      
        import ietf-inet-types { prefix inet; }
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types { prefix at; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Connectivity service is the linkage between the
           ROC and a core that provides connectivity.";
      
        revision "2021-10-21" {
          description "An Aether Connectivity Service. Specifies the endpoints where the sdcore-adapter should push configuration to. A single connectivity service may be attached to multiple Enterprises.";
          reference "RFC 6087";
        }
      
        typedef connectivity-service-id {
              type yg:yang-identifier {
                  length 1..32;
              }
         description "The typedef for connectivity-service-id";
        }
      
        container connectivity-service {
          description "The top level container";
      
          list connectivity-service {
            key "id";
            description
              "List of connectivity services";
      
            leaf id {
              type connectivity-service-id;
              description "ID for this connectivity service.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this connectivity service";
            }
      
            leaf core-5g-endpoint {
              type inet:uri;
              description "url of the 5g core";
            }
      
            leaf acc-prometheus-url {
                type inet:uri;
                description
                  "URL of ACC prometheus";
            }
          }
        }
      }
      
    onf-device-group.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-device-group {
        namespace "http://opennetworking.org/aether/device-group";
        prefix dg;
      
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types { prefix at; }
        import onf-ip-domain{ prefix ipd; }
        import onf-site{ prefix st; }
        import onf-traffic-class{ prefix tc; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An aether device group represents a list of device IMSIS.
           This list is expressed as a set of ranges,
               [(from_imsi, to_imsi),
                (from_imsi, to_imsi),
                ...].
           Each device group belongs to a site and has associated
           with it an ip-profile that determines the IP address
           and DNS settings that apply to devices within the
           group";
      
        revision "2021-06-02" {
          description "An Aether Device Group";
          reference "RFC 6087";
        }
      
        typedef device-group-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for device-group-id";
        }
      
        container device-group {
          description "The top level container";
      
          list device-group {
            key "id";
            description
              "List of device groups";
      
            leaf id {
              type device-group-id;
              description "ID for this device group.";
            }
      
            leaf description {
              type at:description;
              description "description of this device group";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            list imsis {
              // TODO: imsi-range-from cannot be used as a list index
              key "imsi-id";
              leaf imsi-id {
                type yg:yang-identifier;
                description
                    "Id of this imsi-range";
              }
              leaf imsi-range-from {
                type uint64;
                description
                    "value of imsi-range-from";
              }
              leaf imsi-range-to {
                type uint64;
                description
                    "value of imsi-range-to";
              }
              leaf display-name {
                type string {
                    length 1..80;
                }
                description "display name to use in GUI or CLI";
              }
              description
                "List of imsi ranges that comprise this group. It's acceptable for
                 a range to degenerate to being a singleton";
            }
      
            leaf ip-domain {
              type leafref {
                path "/ipd:ip-domain/ipd:ip-domain/ipd:id";
              }
              description
                "Link to ip-domain settings that determine the pool of IP addresses,
                 as well as the domain resolver settings to use";
            }
      
            container device {
              description "Per-device QOS Settings";
              container mbr {
                description "Maximum bitrate";
                leaf uplink {
                  type at:bitrate;
                  units bps;
                  mandatory true;
                  description "Per-device MBR uplink data rate in bps";
                }
      
                leaf downlink {
                  type at:bitrate;
                  units bps;
                  mandatory true;
                  description "Per-device MBR downlink data rate in bps";
                }
              }
              leaf traffic-class {
                type leafref {
                  path "/tc:traffic-class/tc:traffic-class/tc:id";
                }
                mandatory true;
                description
                  "Link to traffic class";
              }
            }
      
            leaf site {
              type leafref {
                path "/st:site/st:site/st:id";
              }
              mandatory true;
              description
                "Link to site";
            }
          }
        }
      }
      
    onf-enterprise.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-enterprise {
        namespace "http://opennetworking.org/aether/enterprise";
        prefix ent;
      
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types { prefix at; }
        import onf-connectivity-service { prefix cs; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Enterprise is an administration entity that
           has ownership of resrouces.";
      
        revision "2021-06-02" {
          description "An Aether Enterprise. Used to distinguish ownership of devices and other resources as well as a domain of configuration.";
          reference "RFC 6087";
        }
      
        typedef enterprise-id {
              type yg:yang-identifier {
                  length 1..32;
              }
         description "The typedef for enterprise-id";
        }
      
        container enterprise {
          description "The top level container";
      
          list enterprise {
            key "id";
            description
              "List of enterprises";
      
            leaf id {
              type enterprise-id;
              description "ID for this enterprise.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this enterprise";
            }
      
            list connectivity-service {
              key "connectivity-service";
              leaf connectivity-service {
                type leafref {
                  path "/cs:connectivity-service/cs:connectivity-service/cs:id";
                }
                description
                  "Link to connectivity services where configuration should be pushed for this enterprise's devices";
              }
              leaf enabled {
                type boolean;
                default true;
                description
                  "Allow or disallow pushes to this connectivity service";
              }
              description "The list for connectivity-service";
            }
          }
        }
      }
      
    onf-ip-domain.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-ip-domain {
        namespace "http://opennetworking.org/aether/ip-domain";
        prefix ipd;
      
        import ietf-inet-types { prefix inet; }
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types { prefix at; }
        import onf-enterprise{ prefix ent; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether IP-Domain. This is a list of available subnets
           that may be assigned to UEs, as well as DNS servers and other
           metadata";
      
        revision "2021-06-02" {
          description "An Aether IP and Domain Specification";
          reference "RFC 6087";
        }
      
        typedef ip-domain-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for ip-domain-id";
        }
      
        container ip-domain {
          description "The top level container";
      
          list ip-domain {
            key "id";
            description
              "List of ip domains";
      
            leaf id {
              type ip-domain-id;
              description "ID for this ip domain.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf dnn {
              type at:dnn;
              mandatory true;
              description "DNN/APN";
            }
      
            leaf dns-primary {
              type inet:ip-address;
              description "primary dns server name";
            }
      
            leaf dns-secondary {
              type inet:ip-address;
              description "secondary dns server name";
            }
      
            // Note: Cannot use a subnet as a list key. Dropped support from a
            // list of subnets to a single subnet. Revisit in the future.
            leaf subnet {
              type inet:ipv4-prefix;
              mandatory true;
              description "subnet to allocate ip addresses from";
            }
      
            leaf admin-status {
              type at:admin-status;
              description "administrative status";
            }
      
            leaf mtu {
              type at:mtu;
              description "maximum transmission unit";
            }
      
            leaf description {
              type at:description;
              description "description of this ip domain";
            }
      
            // Ip-Domain is always owned by an Enterprise, because it contains
            // IP addresses relative to that Enterprise.
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this IP-Domain";
            }
          }
        }
      }
      
    onf-site.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-site {
        namespace "http://opennetworking.org/aether/site";
        prefix st;
      
        import ietf-inet-types { prefix inet; }
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types{ prefix at; }
        import onf-enterprise{ prefix ent; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether site is a location where resources are deployed.";
      
        revision "2021-09-10" {
          description "An Aether Site.";
          reference "RFC 6087";
        }
      
        typedef site-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for site-id";
        }
      
        container site {
          description "The top level container";
      
          list site {
            key "id";
            description
              "List of site";
      
            leaf id {
              type site-id;
              description "ID for this site.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            list small-cell {
              key "small-cell-id";
              leaf small-cell-id {
                type yg:yang-identifier;
                description
                  "Id of small cell";
              }
              leaf address {
                type inet:host;
                description
                  "Address of small cell";
              }
              leaf tac {
                type at:tac;
                mandatory true;
                description
                    "Type Allocation Code";
              }
              leaf enable {
                type boolean;
                default true;
                description
                  "Enable this small cell";
              }
              leaf display-name {
                type string {
                    length 1..80;
                }
                description "display name to use in GUI or CLI";
              }
              description
                "List of small cell addresses";
            }
      
            container monitoring {
              leaf edge-cluster-prometheus-url {
                type inet:uri;
                description
                  "URL of edge cluster prometheus";
              }
              leaf edge-monitoring-prometheus-url {
                type inet:uri;
                description
                  "URL of monitoring prometheus";
              }
              list edge-device {
                key "edge-device-id";
                leaf edge-device-id {
                  type yg:yang-identifier;
                  description
                    "Id of edge monitoring device";
                }
                leaf display-name {
                  type string {
                      length 1..80;
                  }
                  description "display name to use in GUI or CLI";
                }
                leaf description {
                  type at:description;
                  description "description of this site";
                }
                description
                  "List of edge monitoring devices";
              }
              description
                  "container for monitoring";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this site";
            }
      
            container imsi-definition {
              leaf mcc {
                type at:mcc;
                mandatory true;
                description "mobile country code";
              }
              leaf mnc {
                type at:mnc;
                mandatory true;
                description "mobile network code";
              }
              leaf enterprise {
                type at:ent;
                mandatory true;
                description "enterprise-specific identifier";
              }
              leaf format {
                type string {
                  length 15;
                }
                mandatory true;
                description "IMSI format specifier, describes how fields are packed into an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.";
                // Format specifiers:
                //   C = MCC
                //   N = MNC
                //   E = Enterprise
                //   0 = Forced Zero
                //   S = Subscriber ID
                // default is
                //   3 digit MCC
                //   3 digit MNC
                //   3 digit enterprise ID
                //   5 digit subscriber ID
              }
              description "container for imsi-defination";
            }
      
            leaf description {
              type at:description;
              description "description of this site";
            }
          }
        }
      }
      
    onf-template.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-template {
        namespace "http://opennetworking.org/aether/template";
        prefix tp;
      
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types{ prefix at; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "The aether vcs-template holds common parameters used
           by a virtual connectivity service. Templates are used to
           populate a VCS.";
      
        revision "2021-09-10" {
          description "An Aether Virtual Cellular Service Template";
          reference "RFC 6087";
        }
      
        typedef template-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for template-id";
        }
      
        container template {
          description "The top level container";
      
          list template {
            key "id";
            description
              "List of vcs templates";
      
            leaf id {
              type template-id;
              description "ID for this vcs template.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf sst {
              type at:sst;
              description "Slice/Service type";
            }
      
            leaf sd {
              type at:sd;
              description "Slice differentiator";
            }
      
            container slice {
              description "Per-Slice QOS Settings";
              container mbr {
                description "Maximum bitrate";
                leaf uplink {
                  type at:bitrate;
                  units bps;
                  description "Per-Slice MBR uplink data rate in bps";
                }
      
                leaf downlink {
                  type at:bitrate;
                  units bps;
                  description "Per-Slice MBR downlink data rate in bps";
                }
      
                leaf uplink-burst-size {
                  type at:burst;
                  units bytes;
                  description "Per-Slice Uplink burst size";
                }
      
                leaf downlink-burst-size {
                  type at:burst;
                  units bytes;
                  description "Per-Slice Downlink burst size";
                }
              }
            }
      
            leaf default-behavior {
              type at:behavior;
              mandatory true;
              description
                "Default behavior if no filter rules match";
            }
      
            leaf description {
              type at:description;
              description "description of this vcs template";
            }
          }
        }
      }
      
    onf-traffic-class.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-traffic-class {
        namespace "http://opennetworking.org/aether/traffic-class";
        prefix tp;
      
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types{ prefix at; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "The aether traffic class associates qos constants
           with a named class of service";
      
        revision "2021-09-10" {
          description "An Aether Traffic Class";
          reference "RFC 6087";
        }
      
        typedef traffic-class-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for traffic-class-id";
        }
      
        container traffic-class {
          description "The top level container";
      
          list traffic-class {
            key "id";
            description
              "List of traffic class";
      
            leaf id {
              type traffic-class-id;
              description "ID for this traffic class.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf arp {
              type at:arp;
              description "Allocation and Retention Priority. 1 is the highest. 15 is the lowest.";
            }
      
            leaf qci {
              type at:qci;
              description "QOS Class Identifier";
            }
      
            leaf pelr {
              type at:pelr;
              description "PELR exponent";
            }
      
            leaf pdb {
              type at:pdb;
              description "PDB";
            }
      
            leaf description {
              type at:description;
              description "description of this traffic class";
            }
          }
        }
      }
      
    onf-upf.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-upf {
        namespace "http://opennetworking.org/aether/upf";
        prefix upf;
      
        import ietf-inet-types { prefix inet; }
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types { prefix at; }
        import onf-enterprise{ prefix ent; }
        import onf-site{ prefix st; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description "A Aether UPF List is a named User Plane Function.";
      
        revision "2021-09-16" {
          description "An Aether User Plane Function";
          reference "RFC 6087";
        }
      
        typedef upf-id {
              type yg:yang-identifier {
                  length 1..32;
              }
         description "The typedef for upf-id";
        }
      
        container upf {
          description "The top level container";
      
          list upf {
            key "id";
            description
              "A list of named upfs.";
      
            leaf id {
              type upf-id;
              description "ID for this upf.";
            }
      
            leaf address {
              type inet:host;
              mandatory true;
              description
                "Address of UPF";
            }
      
            leaf port {
              type inet:port-number;
              mandatory true;
              description
                  "Port for UPF";
            }
      
            leaf config-endpoint {
              type inet:uri;
              description "url for configuring the UPF";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            leaf description {
              type at:description;
              description "description of this UPF";
            }
      
            // UPFs are always owned by an Enterprise, since they typically exist on the
            // Enterprise's edge.
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this Access Point List";
            }
      
            // UPFs always reside at a site, as the exist on physical infrastructure. GUI
            // will ensure that the tuple (DG, VCS, UPF) all exist on the same site.
            leaf site {
              type leafref {
                path "/st:site/st:site/st:id";
              }
              mandatory true;
              description
                "Link to site";
            }
          }
        }
      }
      
    onf-vcs.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module onf-vcs {
        namespace "http://opennetworking.org/aether/vcs";
        prefix sl;
      
        import ietf-yang-types{ prefix yg; }
        import onf-aether-types{ prefix at; }
        import onf-application{ prefix app; }
        import onf-device-group{ prefix dg; }
        import onf-enterprise{ prefix ent; }
        import onf-upf { prefix upf; }
        import onf-site{ prefix st; }
      
        organization "Open Networking Foundation.";
        contact "Scott Baker";
        description
          "An Aether Virtual Cellular Service (VCS) is
           used to connect devices with applications";
      
        revision "2021-09-10" {
          description "An Aether Virtual Cellular Service";
          reference "RFC 6087";
        }
      
        typedef vcs-id {
              type yg:yang-identifier {
                  length 1..32;
              }
          description "The typedef for vcs-id";
        }
      
        container vcs {
          description "The top level container";
      
          list vcs {
            key "id";
            description
              "List of virtual cellular services";
      
            leaf id {
              type vcs-id;
              description "ID for this vcs.";
            }
      
            leaf display-name {
              type string {
                  length 1..80;
              }
              description "display name to use in GUI or CLI";
            }
      
            list device-group {
              key "device-group";
              leaf device-group {
                type leafref {
                  path "/dg:device-group/dg:device-group/dg:id";
                }
                description
                  "Link to device group";
              }
              leaf enable {
                type boolean;
                default true;
                description
                  "Enable this device group";
              }
              description
                "A list of device groups. Groups will only participate in
                 the VCS if the enable field is set to True";
            }
      
            leaf default-behavior {
              type at:behavior;
              mandatory true;
              description
                "Default behavior if no filter rules match";
            }
      
            list filter {
              key "application";
              leaf application {
                type leafref {
                  path "/app:application/app:application/app:id";
                }
                mandatory true;
                description
                  "Link to application";
              }
              leaf priority {
                type at:priority;
                default 0;
                description
                  "Priority of this application";
              }
              leaf allow {
                type boolean;
                default true;
                description
                  "Allow or deny this application";
              }
              description
                "A list of applications to allow and/or deny. Rules are executed in
                 priority order. The first rule to match will determine the fate
                 of the packet.";
            }
      
            leaf upf {
              type leafref {
                path "/upf:upf/upf:upf/upf:id";
              }
              description
                "Link to user plane that implements this vcf";
            }
      
            leaf description {
              type at:description;
              description "description of this vcs";
            }
      
            leaf enterprise {
              type leafref {
                path "/ent:enterprise/ent:enterprise/ent:id";
              }
              mandatory true;
              description
                "Link to enterprise that owns this VCS";
            }
      
            leaf site {
              type leafref {
                path "/st:site/st:site/st:id";
              }
      	mandatory true;
              description
                "Link to site where this VCS is deployed";
            }
      
            // the following are populated from the template
            leaf sst {
              type at:sst;
              mandatory true;
              description "Slice/Service type. Immutable.";
            }
      
            leaf sd {
              type at:sd;
              mandatory true;
              description "Slice differentiator. Immutable.";
            }
      
            container slice {
              description "Per-Slice QOS Settings";
              container mbr {
                description "Maximum bitrate";
                leaf uplink {
                  type at:bitrate;
                  units bps;
                  description "Per-Slice MBR uplink data rate in bps";
                }
      
                leaf downlink {
                  type at:bitrate;
                  units bps;
                  description "Per-Slice MBR downlink data rate in bps";
                }
      
                leaf uplink-burst-size {
                  type at:burst;
                  units bytes;
                  description "Per-Slice Uplink burst size";
                }
      
                leaf downlink-burst-size {
                  type at:burst;
                  units bytes;
                  description "Per-Slice Downlink burst size";
                }
              }
            }
      
            // end of items populated from the template
          }
        }
      }
---
# Source: aether-roc-umbrella/charts/config-model-plproxy-1-0-0/templates/model.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

apiVersion: config.onosproject.org/v1beta1
kind: Model
metadata:
  name: aether-roc-umbrella-1.0.0-config-model-plproxy
  namespace: aether-roc
  labels:
    helm.sh/chart: config-model-plproxy-1-0-0-1.0.1
    app.kubernetes.io/name: config-model-plproxy-1-0-0
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  plugin:
    type: PLProxy
    version: "1.0.0"
  modules:
  - name: plproxy-service
    organization: Open Networking Foundation
    revision: 2021-09-24
    file: prom-label-proxy.yang
  files:
    prom-label-proxy.yang: |
      // SPDX-FileCopyrightText: 2021 Open Networking Foundation
      //
      // SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
      
      module prom-label-proxy {
        namespace "http://opennetworking.org/promlabelproxy/config/";
        prefix plp;
      
        organization "Open Networking Foundation.";
        contact "Amit Wankhede";
        description "A Aether groups and prom label configuration";
      
        revision "2021-09-24" {
          description "Prom label proxy user configuration";
          reference "RFC 6087";
        }
      
        container user-groups {
          description "The top level container";
          list user-group {
      		key "name";
      		description "A list of user groups";
      		leaf name { type  string;description "name of user group";}
      		list label {
      			   key "name";
      			   description "A list of labels";
      			   leaf name { type  string;mandatory true;description "name of label";}
      			   leaf value { type  string;mandatory true;description "value of label";}
      		}
      	}
       }
      
      }
---
# Source: aether-roc-umbrella/charts/onos-config/templates/modelregistry.yaml
apiVersion: config.onosproject.org/v1beta1
kind: ModelRegistry
metadata:
  name: onos-config
  namespace: aether-roc
  labels:
    helm.sh/chart: onos-config-1.4.6
    app.kubernetes.io/name: onos-config
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.10.7"
    app.kubernetes.io/managed-by: Helm
spec:
  cache:
    name: onos-config
    emptyDir: {}
---
# Source: aether-roc-umbrella/templates/store.yaml
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0
apiVersion: atomix.io/v2beta1
kind: Store
metadata:
  name: onos-consensus-store
  namespace: aether-roc
spec:
  protocol:
    apiVersion: storage.atomix.io/v2beta2
    kind: MultiRaftProtocol
    spec:
      replicas: 1
      groups: 1
      image: ""
      imagePullPolicy: IfNotPresent

NOTES:
# SPDX-FileCopyrightText: 2021 Open Networking Foundation
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

Thank you for installing aether-roc-umbrella Helm chart.

Your release is named aether-roc-umbrella in namespace aether-roc.
See https://docs.onosproject.org/developers/deploy_with_helm/

To learn more about the release, try:
  $ helm -n aether-roc status aether-roc-umbrella
  $ helm -n aether-roc get all aether-roc-umbrella
  $ watch kubectl -n aether-roc get pods

You can attach to:
* Aether CLI pod with
$ kubectl -n aether-roc exec -it $(kubectl -n aether-roc get pods -l type=cli -o name) -- /bin/sh
* Aether Portal at http://<server_IP>:31190

If you are using KinD as a Kubernetes server, you will have to use a "port-forward" to access the Aether ROC GUI e.g.
$ kubectl -n aether-roc port-forward service/aether-roc-gui 8183:80
and then access the GUI at
* http://localhost:8183

The aether-roc-api is then available at http://localhost:8183/aether-roc-api


How to setup ACE(Aether Connected Edge) with AIAB and UERANSIM
==============================================================
(https://github.com/dot-1q/AiaB-UERANSIM/tree/master/scenario_2)


1. Vagrant file

	VM1 = "aiab"
	VM2 = "ran"

	HostName1 = "aiab"
	HostName2 = "ran"

	IP1 = "10.10.1.11"
	IP2 = "10.10.1.3"


	servers = [
	  { :hostname => HostName1, :ip => IP1, :memory => "12288", :vm => VM1, :cpu => 4},
	  { :hostname => HostName2, :ip => IP2, :memory => "12288", :vm => VM2, :cpu => 4 },
	]

	$script = <<-SCRIPT
	apt update
	apt install -y make vifm bash-completion
	SCRIPT

	Vagrant.configure("2") do |config|
	  config.vm.box = "bento/ubuntu-18.04"

	  servers.each do |conf|
		config.vm.define conf[:vm] do |node|
		  node.vm.hostname = conf[:hostname]
		  node.vm.network "private_network", ip: conf[:ip]
		  node.vm.synced_folder ".", "/vagrant"
		  node.vm.provider "virtualbox" do |vb|
		vb.memory = conf[:memory]
		vb.cpus = conf[:cpu]
		  end
		  node.vm.provision "shell", inline: $script, privileged: true
		end
	  end
	end



2. Install RKE2 kubernetes distribution

	git clone "https://gerrit.opencord.org/aether-in-a-box"
	cd ~/aether-in-a-box
	make node-prep 

	--> This makes rke2 kubernetes and docker 



3. router.yaml 
	Change the Router yaml file to reflect the correct IP addresses of it's interfaces (core, access, gnb) 
	and add the subscriber static routes

	---
	apiVersion: "k8s.cni.cncf.io/v1"
	kind: NetworkAttachmentDefinition
	metadata:
	  name: router-net
	spec:
	  config: '{
		"cniVersion": "0.3.1",
		"type": "macvlan",
		"master": "eth1",
		"ipam": {
			"type": "static"
		}
	  }'
	---
	apiVersion: v1
	kind: Pod
	metadata:
	  name: router
	  labels:
		app: router
	  annotations:
		k8s.v1.cni.cncf.io/networks: '[
				{ "name": "router-net", "interface": "core-gw", "ips": ["192.168.6.1/24"] },
				{ "name": "router-net", "interface": "ran-gw", "ips": ["192.168.110.1/24"] },
				{ "name": "router-net", "interface": "access-gw", "ips": ["192.168.5.1/24"] }
		]'
	spec:
	  containers:
	  - name: router
		command: ["/bin/bash", "-c"]
		args:
		  - >
			sysctl -w net.ipv4.ip_forward=1;
			iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE;
			ip route add 172.3.0.0/16 via 192.168.6.10;
			trap : TERM INT; sleep infinity & wait
		image: opencord/quagga
		securityContext:
		  privileged: true
		  capabilities:
			add:
			  - NET_ADMIN




4. Change the UPF yaml file to have the correct interfaces IP's and give it an external IP, 
	so that it can connect to the AiaB VM

	<upf3.yaml>


	enable: true
	resources:
	  enabled: false
	images:
	  repository: "registry.opennetworking.org/docker.io/"
	config:
	  upf:
		name: "oaisim"
		sriov:
		  enabled: false #default sriov is disabled in AIAB setup
		hugepage:
		  enabled: false #should be enabled if dpdk is enabled
		cniPlugin: macvlan
		ipam: static
		enb:
		  subnet: "192.168.110.0/24" #this is your gNB network
		access:
		  iface: "eth1"
		  ip: "192.168.5.10/24" #New IP address for UPF3 access interface
		  gateway: "192.168.5.1"
		core:
		  iface: "eth1"
		  ip: "192.168.6.10/24" #New IP address for UPF3 core interface
		  gateway: "192.168.6.1"
		cfgFiles:
		  upf.json:
			mode: af_packet  #this mode means no dpdk
			hwcksum: true
			log_level: "trace"
			gtppsc: true #extension header is enabled in 5G. Sending QFI in pdu session extension header
			measure_upf: false #enable packet processing time
			cpiface:
			  dnn: "internet" #keep it matching with Slice dnn
			  hostname: "upf"
			  #http_port: "8080"
			  enable_ue_ip_alloc: false # if true then it means UPF allocates address from below pool
			  ue_ip_pool: "172.250.0.0/16" # UE ip pool is used if enable_ue_ip_alloc is set to true

	service:
	  externalIp: "10.10.1.3"





5. 	Create three new interfaces (access, core, gnb). Do not give them any IP address on the VM interfaces, 
	we only want the router and UPF to communicate in them.

   	This process is described here step by step for each interface for ease of understanding, 
	but you should make these changes permanent via systemd. 

	The gnb interface has an IP so that the UERANSIM gNodeB can attach to it.


	sudo ip link add access link eth1 type macvlan mode bridge
	sudo ip link add core link eth1 type macvlan mode bridge
	sudo ip link add gnb link eth1 type macvlan mode bridge
	sudo ip addr add 192.168.110.10/24 dev gnb
	sudo ip link set access up
	sudo ip link set core up
	sudo ip link set gnb up




6. Deploy router
	kubectl apply -f router.yaml


7. 	Configure the new UPF via Aether ROC GUI. Images with the correct configuration are provided here.
	(https://github.com/dot-1q/AiaB-UERANSIM/blob/master/scenario_2/images)
	This requires that you provide the external IP of the UPF in the UPF configuration page.


8. Static Routes.

	We need to add two new static routes. 
	One for the AiaB VM, so that it can connect to our gNodeB and other one for the Edge VM, 
	so that the UE's are redirected to the UPF access interface.

  AiaB VM
	ip route add 192.168.110.10 via 10.10.1.3


  UERANSIM VM
	ip route add 192.168.5.10 via 192.168.110.1 



9.  in Aiab, 
	copy roc-5g-models.json and sd-core-5g-values.yaml into $HOME/aether-in-a-box/

	(1) sd-core-5g-values.yaml

	-- amf configuration

	amf:
	  # use externalIP if you need to access your AMF from remote setup and you don't
	  # want setup NodePort Service Type
	  ngapp:
		externalIp: "10.10.1.11"
		port: 38412

	-- there are additional simapp configurations need to be copied


	
	(2) roc-5g-models.json
	This file includes device, sim data for ROC configuration in GUI




10. Run gnb from UERANSIM

	<free5gc-gnb.yaml>

	mcc: '208'          # Mobile Country Code value
	mnc: '93'           # Mobile Network Code value (2 or 3 digits)

	nci: '0x000000020'  # NR Cell Identity (36-bit)
	idLength: 32        # NR gNB ID length in bits [22...32]
	tac: 1              # Tracking Area Code

	linkIp: 192.168.110.10   # gNB's local IP address for Radio Link Simulation (Usually same with local IP)
	ngapIp: 192.168.110.10   # gNB's local IP address for N2 Interface (Usually same with local IP)
	gtpIp: 192.168.110.10  # gNB's local IP address for N3 Interface (Usually same with local IP)

	# List of AMF address information
	amfConfigs:
	  - address: 10.10.1.11
		port: 38412

	# List of supported S-NSSAIs by this gNB
	slices:
	  - sst: 0x3
		sd: 0x030303

	# Indicates whether or not SCTP stream number errors should be ignored.
	ignoreStreamIds: true



	vagrant@ran:~/UERANSIM/build$ ./nr-gnb -c free5gc-gnb.yaml
	UERANSIM v3.1.0
	[2023-03-03 18:32:59.513] [sctp] [info] Trying to establish SCTP connection... (10.10.1.11:38412)
	[2023-03-03 18:32:59.516] [sctp] [info] SCTP connection established (10.10.1.11:38412)
	[2023-03-03 18:32:59.516] [sctp] [debug] SCTP association setup ascId[3]
	[2023-03-03 18:32:59.516] [ngap] [debug] Sending NG Setup Request
	[2023-03-03 18:32:59.522] [ngap] [debug] NG Setup Response received
	[2023-03-03 18:32:59.522] [ngap] [info] NG Setup procedure is successful
	[2023-03-03 18:33:07.224] [mr] [info] New UE connected to gNB. Total number of UEs is now: 1
	[2023-03-03 18:33:07.225] [rrc] [debug] Sending RRC Setup for UE[3]
	[2023-03-03 18:33:07.225] [ngap] [debug] Initial NAS message received from UE 3
	[2023-03-03 18:33:07.470] [ngap] [debug] Initial Context Setup Request received
	[2023-03-03 18:33:07.909] [ngap] [info] PDU session resource is established for UE[3] count[1]



11. Run ne from UERANSIM

	<free5gc-ue4.yaml>

	# IMSI number of the UE. IMSI = [MCC|MNC|MSISDN] (In total 15 digits)
	supi: 'imsi-208930000000004'
	# Mobile Country Code value of HPLMN
	mcc: '208'
	# Mobile Network Code value of HPLMN (2 or 3 digits)
	mnc: '93'

	# Permanent subscription key
	key: '5122250214c33e723a5dd523fc145fc0'
	# Operator code (OP or OPC) of the UE
	op: '981d464c7c52eb6e5036234984ad0bcf'
	# This value specifies the OP type and it can be either 'OP' or 'OPC'
	opType: 'OPC'
	# Authentication Management Field (AMF) value
	amf: '8000'
	# IMEI number of the device. It is used if no SUPI is provided
	imei: '356938035643803'
	# IMEISV number of the device. It is used if no SUPI and IMEI is provided
	imeiSv: '4370816125816151'

	# List of gNB IP addresses for Radio Link Simulation
	gnbSearchList:
	  - 192.168.110.10

	...
	# Initial PDU sessions to be established
	sessions:
	  - type: 'IPv4'
		apn: 'internet'
		slice:
		  sst: 0x03
		  sd: 0x030303

	# Configured NSSAI for this UE by HPLMN
	configured-nssai:
	  - sst: 0x03
		sd: 0x030303

	# Default Configured NSSAI for this UE
	#default-nssai:
	slices:  		<-- Only exist on v3.1.0 
	  - sst: 0x01
		sd: 0x010203






	vagrant@ran:~/UERANSIM/build$ sudo ./nr-ue -c ./free5gc-ue4.yaml
	UERANSIM v3.1.0
	[2023-03-03 18:33:07.224] [nas] [debug] NAS layer started
	[2023-03-03 18:33:07.224] [rrc] [debug] RRC layer started
	[2023-03-03 18:33:07.224] [nas] [info] UE switches to state: MM-DEREGISTERED/PLMN-SEARCH
	[2023-03-03 18:33:07.224] [nas] [info] UE connected to gNB
	[2023-03-03 18:33:07.225] [nas] [info] UE switches to state: MM-DEREGISTERED/NORMAL-SERVICE
	[2023-03-03 18:33:07.225] [nas] [info] UE switches to state: MM-REGISTERED-INITIATED/NA
	[2023-03-03 18:33:07.225] [rrc] [debug] Sending RRC Setup Request
	[2023-03-03 18:33:07.225] [rrc] [info] RRC connection established
	[2023-03-03 18:33:07.225] [nas] [info] UE switches to state: CM-CONNECTED
	[2023-03-03 18:33:07.294] [nas] [debug] Received rand[81984B4EA5CE2DEA87891EF6774356E8] autn[D52B98C3ABFA8000874BDDED4CB86D29]
	[2023-03-03 18:33:07.294] [nas] [debug] Calculated res[15C96A589CC1C844] ck[D3802D0C4196338DC768532A283A430F] ik[497AAF6681B2AC428E5482D01E76B5E6] ak[C3D82B34A438] mac_a[874BDDED4CB86D29]
	[2023-03-03 18:33:07.294] [nas] [debug] Used snn[5G:mnc093.mcc208.3gppnetwork.org] sqn[16F3B3F70FC2]
	[2023-03-03 18:33:07.294] [nas] [debug] Derived kSeaf[3A28470970C9534AAB8C692F86D7EE50691589C9A9CE35916783E190E7D10A5A] kAusf[B266FC46213C76DE007E08EA2D55BDD4D5B0FE2E1386AA5E48B1FD55D74555C7] kAmf[DC8EE8E4A51A2109CC585DB9B64FCA04E28E4C3FDEE47D40233A7B508E46C904]
	[2023-03-03 18:33:07.320] [nas] [debug] Derived kNasEnc[812B3BC48701973EC1452CB2AE7BF7CF] kNasInt[5B3E7AEA51AD8D9F1C5BD0203E68A07E]
	[2023-03-03 18:33:07.320] [nas] [debug] Selected integrity[1] ciphering[0]
	[2023-03-03 18:33:07.470] [nas] [info] UE switches to state: MM-REGISTERED/NORMAL-SERVICE
	[2023-03-03 18:33:07.470] [nas] [info] Initial Registration is successful
	[2023-03-03 18:33:07.470] [nas] [info] Initial PDU sessions are establishing [1#]
	[2023-03-03 18:33:07.470] [nas] [debug] Sending PDU session establishment request
	[2023-03-03 18:33:07.910] [nas] [info] PDU Session establishment is successful PSI[1]
	[2023-03-03 18:33:07.925] [app] [info] Connection setup for PDU session[1] is successful, TUN interface[uesimtun0, 172.3.237.121] is up.









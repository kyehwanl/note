
--------------------------------
Make script from -n release-2.0
--------------------------------

mkdir -p /home/vagrant/aether-in-a-box//build/milestones
echo "Add network configuration for enb interface"
if [[ "false" ==  "true" ]]; then \
	sudo cp netplan/01-enb-static-config.yaml /etc/netplan ; \
	sudo netplan apply ; \
	sleep 1 ; \
fi
touch /home/vagrant/aether-in-a-box//build/milestones/interface-check
sudo /home/vagrant/aether-in-a-box//scripts/cloudlab-disksetup.sh
sudo apt update; sudo apt install -y software-properties-common python3 python3-pip python3-venv jq httpie ipvsadm apparmor apparmor-utils
systemctl list-units --full -all | grep "docker.service" || sudo apt install -y docker.io
sudo adduser vagrant docker || true
touch /home/vagrant/aether-in-a-box//build/milestones/initial-setup
echo -n ""
touch /home/vagrant/aether-in-a-box//build/milestones/proxy-setting
touch /home/vagrant/aether-in-a-box//build/milestones/setup
sudo mkdir -p /etc/rancher/rke2/
[ -d /usr/local/etc/emulab ] && [ ! -e /var/lib/rancher ] && sudo ln -s /var/lib/rancher /mnt/extra/rancher || true  # that link gets deleted on cleanup
echo "cni: multus,calico" >> config.yaml
echo "cluster-cidr: 192.168.84.0/24" >> config.yaml
echo "service-cidr: 192.168.85.0/24" >> config.yaml
echo "kubelet-arg:" >> config.yaml
echo "- --allowed-unsafe-sysctls="net.*"" >> config.yaml
echo "- --node-ip="10.0.2.15"" >> config.yaml
echo "pause-image: k8s.gcr.io/pause:3.3" >> config.yaml
echo "kube-proxy-arg:" >> config.yaml
echo "- --metrics-bind-address="0.0.0.0:10249"" >> config.yaml
echo "- --proxy-mode="ipvs"" >> config.yaml
echo "kube-apiserver-arg:" >> config.yaml
echo "- --service-node-port-range="2000-36767"" >> config.yaml
sudo mv config.yaml /etc/rancher/rke2/
curl -sfL https://get.rke2.io | sudo INSTALL_RKE2_VERSION=v1.23.4+rke2r1 sh -
sudo systemctl enable rke2-server.service
sudo systemctl start rke2-server.service
sudo /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml wait nodes --for=condition=Ready --all --timeout=300s
sudo /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml wait deployment -n kube-system --for=condition=available --all --timeout=300s
curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
sudo chmod +x kubectl
sudo mv kubectl /usr/local/bin/
kubectl version --client
mkdir -p /home/vagrant/.kube
sudo cp /etc/rancher/rke2/rke2.yaml /home/vagrant/.kube/config
sudo chown -R 1000:1000 /home/vagrant/.kube
touch /home/vagrant/aether-in-a-box//build/milestones/k8s-ready
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
sudo DESIRED_VERSION=v3.6.3 ./get_helm.sh
helm repo add incubator https://charts.helm.sh/incubator
helm repo add cord https://charts.opencord.org
helm repo add atomix https://charts.atomix.io
helm repo add onosproject https://charts.onosproject.org
helm repo add aether https://charts.aetherproject.org
helm repo add rancher http://charts.rancher.io/
touch /home/vagrant/aether-in-a-box//build/milestones/helm-ready
kubectl get namespace aether-roc 2> /dev/null || kubectl create namespace aether-roc
helm repo update
if [ "release-2.0" == "local" ]; then helm dep up aether/aether-roc-umbrella --version 2.0.47; fi
if [ "release-2.0" == "release-2.0" -o "release-2.0" == "release-1.6" ]; then \
	helm upgrade --install --wait  \
		--namespace kube-system \
		--values /home/vagrant/aether-in-a-box//aether-2.0/roc-values.yaml \
		atomix-controller \
		atomix/atomix-controller --version 0.6.9; \
	helm upgrade --install --wait  \
		--namespace kube-system \
		--values /home/vagrant/aether-in-a-box//aether-2.0/roc-values.yaml \
		atomix-raft-storage \
		atomix/atomix-raft-storage --version 0.1.25; \
else \
	helm upgrade --install --wait  \
		--namespace kube-system \
		--values /home/vagrant/aether-in-a-box//aether-2.0/roc-values.yaml \
		atomix-runtime \
		; \
fi
helm upgrade --install --wait  \
	--namespace kube-system \
	--values /home/vagrant/aether-in-a-box//aether-2.0/roc-values.yaml \
	onos-operator \
	onosproject/onos-operator --version 0.5.1
helm upgrade --install --wait  \
	--namespace aether-roc \
	--values /home/vagrant/aether-in-a-box//aether-2.0/roc-values.yaml \
	aether-roc-umbrella \
	aether/aether-roc-umbrella --version 2.0.47
touch /home/vagrant/aether-in-a-box//build/milestones/roc
sed -i 's/provision-network-slice: true/provision-network-slice: false/' /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml
sed -i 's/# syncUrl/syncUrl/' /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml
if [ "false" == "true" ] ; then \
	sed -i 's/# sub-proxy-endpt:/sub-proxy-endpt:/' /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml ; \
	sed -i 's/#   addr: sub/  addr: sub/' /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml ; \
	sed -i 's/#   port: 5000/  port: 5000/' /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml ; \
fi
echo "ONOS CLI pod: "
echo "API SERVICE : "
if [ "release-2.0" != "release-2.0" -a "release-2.0" != "release-1.6" ]; then \
        until kubectl -n aether-roc exec  -- \
            curl -s -f -L -X PATCH "http://:8181/aether-roc-api" \
            --header 'Content-Type: application/json' \
            --data-raw "$(cat /home/vagrant/aether-in-a-box//roc-defaultent-model.json)"; do sleep 5; done; \
fi
until kubectl -n aether-roc exec  -- \
	curl -s -f -L -X PATCH "http://:8181/aether-roc-api" \
	--header 'Content-Type: application/json' \
	--data-raw "$(cat /home/vagrant/aether-in-a-box//aether-2.0/roc-5g-models.json)"; do sleep 5; done
mkdir -p /home/vagrant/aether-in-a-box//build/milestones
echo "Add network configuration for enb interface"
if [[ "false" ==  "true" ]]; then \
	sudo cp netplan/01-enb-static-config.yaml /etc/netplan ; \
	sudo netplan apply ; \
	sleep 1 ; \
fi
touch /home/vagrant/aether-in-a-box//build/milestones/interface-check
sudo /home/vagrant/aether-in-a-box//scripts/cloudlab-disksetup.sh
sudo apt update; sudo apt install -y software-properties-common python3 python3-pip python3-venv jq httpie ipvsadm apparmor apparmor-utils
systemctl list-units --full -all | grep "docker.service" || sudo apt install -y docker.io
sudo adduser vagrant docker || true
touch /home/vagrant/aether-in-a-box//build/milestones/initial-setup
echo -n ""
touch /home/vagrant/aether-in-a-box//build/milestones/proxy-setting
touch /home/vagrant/aether-in-a-box//build/milestones/setup
sudo mkdir -p /etc/rancher/rke2/
[ -d /usr/local/etc/emulab ] && [ ! -e /var/lib/rancher ] && sudo ln -s /var/lib/rancher /mnt/extra/rancher || true  # that link gets deleted on cleanup
echo "cni: multus,calico" >> config.yaml
echo "cluster-cidr: 192.168.84.0/24" >> config.yaml
echo "service-cidr: 192.168.85.0/24" >> config.yaml
echo "kubelet-arg:" >> config.yaml
echo "- --allowed-unsafe-sysctls="net.*"" >> config.yaml
echo "- --node-ip="10.0.2.15"" >> config.yaml
echo "pause-image: k8s.gcr.io/pause:3.3" >> config.yaml
echo "kube-proxy-arg:" >> config.yaml
echo "- --metrics-bind-address="0.0.0.0:10249"" >> config.yaml
echo "- --proxy-mode="ipvs"" >> config.yaml
echo "kube-apiserver-arg:" >> config.yaml
echo "- --service-node-port-range="2000-36767"" >> config.yaml
sudo mv config.yaml /etc/rancher/rke2/
curl -sfL https://get.rke2.io | sudo INSTALL_RKE2_VERSION=v1.23.4+rke2r1 sh -
sudo systemctl enable rke2-server.service
sudo systemctl start rke2-server.service
sudo /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml wait nodes --for=condition=Ready --all --timeout=300s
sudo /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml wait deployment -n kube-system --for=condition=available --all --timeout=300s
curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
sudo chmod +x kubectl
sudo mv kubectl /usr/local/bin/
kubectl version --client
mkdir -p /home/vagrant/.kube
sudo cp /etc/rancher/rke2/rke2.yaml /home/vagrant/.kube/config
sudo chown -R 1000:1000 /home/vagrant/.kube
touch /home/vagrant/aether-in-a-box//build/milestones/k8s-ready
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
sudo DESIRED_VERSION=v3.6.3 ./get_helm.sh
helm repo add incubator https://charts.helm.sh/incubator
helm repo add cord https://charts.opencord.org
helm repo add atomix https://charts.atomix.io
helm repo add onosproject https://charts.onosproject.org
helm repo add aether https://charts.aetherproject.org
helm repo add rancher http://charts.rancher.io/
touch /home/vagrant/aether-in-a-box//build/milestones/helm-ready
mkdir -p /home/vagrant/aether-in-a-box//build/cni-plugins; cd /home/vagrant/aether-in-a-box//build/cni-plugins; \
wget https://github.com/containernetworking/plugins/releases/download/v0.8.2/cni-plugins-linux-amd64-v0.8.2.tgz && \
tar xvfz cni-plugins-linux-amd64-v0.8.2.tgz
sudo cp /home/vagrant/aether-in-a-box//build/cni-plugins/static /opt/cni/bin/
sudo mkdir -p /etc/systemd/network
sed 's/DATA_IFACE/data/g' /home/vagrant/aether-in-a-box//systemd/10-aiab-dummy.netdev > /tmp/10-aiab-dummy.netdev
sudo cp /tmp/10-aiab-dummy.netdev /etc/systemd/network/10-aiab-dummy.netdev
echo "Installed /etc/systemd/network/10-aiab-dummy.netdev"
sudo mkdir -p /etc/systemd/network
sed 's/DATA_IFACE/data/g' /home/vagrant/aether-in-a-box//systemd/20-aiab-dummy.network > /tmp/20-aiab-dummy.network
sudo cp /tmp/20-aiab-dummy.network /etc/systemd/network/20-aiab-dummy.network
echo "Installed /etc/systemd/network/20-aiab-dummy.network"
sudo systemctl restart systemd-networkd
DATA_IFACE=data envsubst < /home/vagrant/aether-in-a-box//resources/router.yaml | kubectl apply -f -
kubectl wait pod -n default --for=condition=Ready -l app=router --timeout=300s
touch /home/vagrant/aether-in-a-box//build/milestones/router-pod
if [[ "release-2.0" == "local" || "release-2.0" == "local-sdcore" ]]; then \
        helm dep up aether/sd-core --version 0.10.20; \
else \
        helm repo update; \
fi
NODE_IP=10.0.2.15 DATA_IFACE=data RAN_SUBNET=192.168.251.0/24 ENABLE_GNBSIM=true envsubst < /home/vagrant/aether-in-a-box//aether-2.0/sd-core-5g-values.yaml | \
helm upgrade --create-namespace --install --wait  \
	--namespace omec \
	--values - \
	sd-core \
	aether/sd-core --version 0.10.20
touch /home/vagrant/aether-in-a-box//build/milestones/5g-core
if [[ "release-2.0" == "release-1.6" ]]; then echo "[NOTE] 5G Test not supported for Aether 1.6, exiting..."; exit 1; fi
echo "Test: Registration + UE initiated PDU Session Establishment + User Data packets"
sleep 60
rm -f /tmp/gnbsim.out
if [[ true == "true" ]]; then \
	kubectl -n omec exec gnbsim-0 -- ./gnbsim 2>&1 | tee /tmp/gnbsim.out; \
else \
	kubectl -n omec exec gnbsim-0 -- ./gnbsim 2>&1 | sed -u "s,\x1B\[[0-9;]*[a-zA-Z],,g" | tee /tmp/gnbsim.out; \
fi
grep -q "Simulation Result: PASS\|Profile Status: PASS" /tmp/gnbsim.out
